var v_=Object.defineProperty;var T_=(gs,ln,lo)=>ln in gs?v_(gs,ln,{enumerable:!0,configurable:!0,writable:!0,value:lo}):gs[ln]=lo;var Te=(gs,ln,lo)=>T_(gs,typeof ln!="symbol"?ln+"":ln,lo);(function(){"use strict";var gs={},ln={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(Oe,R,c)=>{Oe.exports=c.p+"ort-wasm-simd-threaded.jsep.wasm"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(Oe,R,c)=>{c.r(R),c.d(R,{Environment:()=>nt,Interpreter:()=>dt,Template:()=>_t,parse:()=>ke,tokenize:()=>y});var w=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),D=Object.freeze({set:w.Set,for:w.For,in:w.In,is:w.Is,if:w.If,else:w.Else,endif:w.EndIf,elif:w.ElseIf,endfor:w.EndFor,and:w.And,or:w.Or,not:w.Not,"not in":w.NotIn,macro:w.Macro,endmacro:w.EndMacro,true:w.BooleanLiteral,false:w.BooleanLiteral,none:w.NullLiteral,True:w.BooleanLiteral,False:w.BooleanLiteral,None:w.NullLiteral}),G=class{constructor(A,ne){this.value=A,this.type=ne}};function re(A){return/\w/.test(A)}function Q(A){return/[0-9]/.test(A)}var g=[["{%",w.OpenStatement],["%}",w.CloseStatement],["{{",w.OpenExpression],["}}",w.CloseExpression],["(",w.OpenParen],[")",w.CloseParen],["{",w.OpenCurlyBracket],["}",w.CloseCurlyBracket],["[",w.OpenSquareBracket],["]",w.CloseSquareBracket],[",",w.Comma],[".",w.Dot],[":",w.Colon],["|",w.Pipe],["<=",w.ComparisonBinaryOperator],[">=",w.ComparisonBinaryOperator],["==",w.ComparisonBinaryOperator],["!=",w.ComparisonBinaryOperator],["<",w.ComparisonBinaryOperator],[">",w.ComparisonBinaryOperator],["+",w.AdditiveBinaryOperator],["-",w.AdditiveBinaryOperator],["*",w.MultiplicativeBinaryOperator],["/",w.MultiplicativeBinaryOperator],["%",w.MultiplicativeBinaryOperator],["=",w.Equals]],v=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function b(A,ne={}){return A.endsWith(`
`)&&(A=A.slice(0,-1)),A=A.replace(/{#.*?#}/gs,"{##}"),ne.lstrip_blocks&&(A=A.replace(/^[ \t]*({[#%])/gm,"$1")),ne.trim_blocks&&(A=A.replace(/([#%]})\n/g,"$1")),A.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function y(A,ne={}){var ot,ut,At;const V=[],ue=b(A,ne);let Ae=0;const Je=xt=>{let Et="";for(;xt(ue[Ae]);){if(ue[Ae]==="\\"){if(++Ae,Ae>=ue.length)throw new SyntaxError("Unexpected end of input");const Ct=ue[Ae++],ar=v.get(Ct);if(ar===void 0)throw new SyntaxError(`Unexpected escaped character: ${Ct}`);Et+=ar;continue}if(Et+=ue[Ae++],Ae>=ue.length)throw new SyntaxError("Unexpected end of input")}return Et};e:for(;Ae<ue.length;){const xt=(ot=V.at(-1))==null?void 0:ot.type;if(xt===void 0||xt===w.CloseStatement||xt===w.CloseExpression){let Ct="";for(;Ae<ue.length&&!(ue[Ae]==="{"&&(ue[Ae+1]==="%"||ue[Ae+1]==="{"));)Ct+=ue[Ae++];if(Ct.length>0){V.push(new G(Ct,w.Text));continue}}Je(Ct=>/\s/.test(Ct));const Et=ue[Ae];if(Et==="-"||Et==="+"){const Ct=(ut=V.at(-1))==null?void 0:ut.type;if(Ct===w.Text||Ct===void 0)throw new SyntaxError(`Unexpected character: ${Et}`);switch(Ct){case w.Identifier:case w.NumericLiteral:case w.BooleanLiteral:case w.NullLiteral:case w.StringLiteral:case w.CloseParen:case w.CloseSquareBracket:break;default:{++Ae;const ar=Je(Q);V.push(new G(`${Et}${ar}`,ar.length>0?w.NumericLiteral:w.UnaryOperator));continue}}}for(const[Ct,ar]of g)if(ue.slice(Ae,Ae+Ct.length)===Ct){V.push(new G(Ct,ar)),Ae+=Ct.length;continue e}if(Et==="'"||Et==='"'){++Ae;const Ct=Je(ar=>ar!==Et);V.push(new G(Ct,w.StringLiteral)),++Ae;continue}if(Q(Et)){const Ct=Je(Q);V.push(new G(Ct,w.NumericLiteral));continue}if(re(Et)){const Ct=Je(re),ar=Object.hasOwn(D,Ct)?D[Ct]:w.Identifier;ar===w.In&&((At=V.at(-1))==null?void 0:At.type)===w.Not?(V.pop(),V.push(new G("not in",w.NotIn))):V.push(new G(Ct,ar));continue}throw new SyntaxError(`Unexpected character: ${Et}`)}return V}var C=class{constructor(){Te(this,"type","Statement")}},q=class extends C{constructor(ne){super();Te(this,"type","Program");this.body=ne}},J=class extends C{constructor(ne,V,ue){super();Te(this,"type","If");this.test=ne,this.body=V,this.alternate=ue}},ie=class extends C{constructor(ne,V,ue,Ae){super();Te(this,"type","For");this.loopvar=ne,this.iterable=V,this.body=ue,this.defaultBlock=Ae}},fe=class extends C{constructor(ne,V){super();Te(this,"type","Set");this.assignee=ne,this.value=V}},j=class extends C{constructor(ne,V,ue){super();Te(this,"type","Macro");this.name=ne,this.args=V,this.body=ue}},X=class extends C{constructor(){super(...arguments);Te(this,"type","Expression")}},Z=class extends X{constructor(ne,V,ue){super();Te(this,"type","MemberExpression");this.object=ne,this.property=V,this.computed=ue}},N=class extends X{constructor(ne,V){super();Te(this,"type","CallExpression");this.callee=ne,this.args=V}},I=class extends X{constructor(ne){super();Te(this,"type","Identifier");this.value=ne}},_=class extends X{constructor(ne){super();Te(this,"type","Literal");this.value=ne}},k=class extends _{constructor(){super(...arguments);Te(this,"type","NumericLiteral")}},E=class extends _{constructor(){super(...arguments);Te(this,"type","StringLiteral")}},ee=class extends _{constructor(){super(...arguments);Te(this,"type","BooleanLiteral")}},Y=class extends _{constructor(){super(...arguments);Te(this,"type","NullLiteral")}},de=class extends _{constructor(){super(...arguments);Te(this,"type","ArrayLiteral")}},me=class extends _{constructor(){super(...arguments);Te(this,"type","TupleLiteral")}},ye=class extends _{constructor(){super(...arguments);Te(this,"type","ObjectLiteral")}},Ce=class extends X{constructor(ne,V,ue){super();Te(this,"type","BinaryExpression");this.operator=ne,this.left=V,this.right=ue}},Ee=class extends X{constructor(ne,V){super();Te(this,"type","FilterExpression");this.operand=ne,this.filter=V}},Le=class extends X{constructor(ne,V){super();Te(this,"type","SelectExpression");this.iterable=ne,this.test=V}},_e=class extends X{constructor(ne,V,ue){super();Te(this,"type","TestExpression");this.operand=ne,this.negate=V,this.test=ue}},U=class extends X{constructor(ne,V){super();Te(this,"type","UnaryExpression");this.operator=ne,this.argument=V}},ce=class extends X{constructor(ne=void 0,V=void 0,ue=void 0){super();Te(this,"type","SliceExpression");this.start=ne,this.stop=V,this.step=ue}},he=class extends X{constructor(ne,V){super();Te(this,"type","KeywordArgumentExpression");this.key=ne,this.value=V}};function ke(A){const ne=new q([]);let V=0;function ue(it,Mt){const It=A[V++];if(!It||It.type!==it)throw new Error(`Parser Error: ${Mt}. ${It.type} !== ${it}.`);return It}function Ae(){switch(A[V].type){case w.Text:return ut();case w.OpenStatement:return At();case w.OpenExpression:return xt();default:throw new SyntaxError(`Unexpected token type: ${A[V].type}`)}}function Je(...it){return V+it.length<=A.length&&it.some((Mt,It)=>Mt!==A[V+It].type)}function ot(...it){return V+it.length<=A.length&&it.every((Mt,It)=>Mt===A[V+It].type)}function ut(){return new E(ue(w.Text,"Expected text token").value)}function At(){ue(w.OpenStatement,"Expected opening statement token");let it;switch(A[V].type){case w.Set:++V,it=Et(),ue(w.CloseStatement,"Expected closing statement token");break;case w.If:++V,it=Ct(),ue(w.OpenStatement,"Expected {% token"),ue(w.EndIf,"Expected endif token"),ue(w.CloseStatement,"Expected %} token");break;case w.Macro:++V,it=ar(),ue(w.OpenStatement,"Expected {% token"),ue(w.EndMacro,"Expected endmacro token"),ue(w.CloseStatement,"Expected %} token");break;case w.For:++V,it=Nr(),ue(w.OpenStatement,"Expected {% token"),ue(w.EndFor,"Expected endfor token"),ue(w.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${A[V].type}`)}return it}function xt(){ue(w.OpenExpression,"Expected opening expression token");const it=Fr();return ue(w.CloseExpression,"Expected closing expression token"),it}function Et(){const it=Fr();if(ot(w.Equals)){++V;const Mt=Et();return new fe(it,Mt)}return it}function Ct(){var Wr,en,Bs,Sr,ts,Br,As,br;const it=Fr();ue(w.CloseStatement,"Expected closing statement token");const Mt=[],It=[];for(;!(((Wr=A[V])==null?void 0:Wr.type)===w.OpenStatement&&(((en=A[V+1])==null?void 0:en.type)===w.ElseIf||((Bs=A[V+1])==null?void 0:Bs.type)===w.Else||((Sr=A[V+1])==null?void 0:Sr.type)===w.EndIf));)Mt.push(Ae());if(((ts=A[V])==null?void 0:ts.type)===w.OpenStatement&&((Br=A[V+1])==null?void 0:Br.type)!==w.EndIf)if(++V,ot(w.ElseIf))ue(w.ElseIf,"Expected elseif token"),It.push(Ct());else for(ue(w.Else,"Expected else token"),ue(w.CloseStatement,"Expected closing statement token");!(((As=A[V])==null?void 0:As.type)===w.OpenStatement&&((br=A[V+1])==null?void 0:br.type)===w.EndIf);)It.push(Ae());return new J(it,Mt,It)}function ar(){const it=ps();if(it.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const Mt=Xs();ue(w.CloseStatement,"Expected closing statement token");const It=[];for(;Je(w.OpenStatement,w.EndMacro);)It.push(Ae());return new j(it,Mt,It)}function Mr(it=!1){const Mt=it?ps:Fr,It=[Mt()],Wr=ot(w.Comma);for(;Wr&&(++V,It.push(Mt()),!!ot(w.Comma)););return Wr?new me(It):It[0]}function Nr(){const it=Mr(!0);if(!(it instanceof I||it instanceof me))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${it.type} instead`);ue(w.In,"Expected `in` keyword following loop variable");const Mt=Fr();ue(w.CloseStatement,"Expected closing statement token");const It=[];for(;Je(w.OpenStatement,w.EndFor)&&Je(w.OpenStatement,w.Else);)It.push(Ae());const Wr=[];if(ot(w.OpenStatement,w.Else))for(++V,++V,ue(w.CloseStatement,"Expected closing statement token");Je(w.OpenStatement,w.EndFor);)Wr.push(Ae());return new ie(it,Mt,It,Wr)}function Fr(){return as()}function as(){const it=qs();if(ot(w.If)){++V;const Mt=qs();if(ot(w.Else)){++V;const It=qs();return new J(Mt,[it],[It])}else return new Le(it,Mt)}return it}function qs(){let it=Qs();for(;ot(w.Or);){const Mt=A[V];++V;const It=Qs();it=new Ce(Mt,it,It)}return it}function Qs(){let it=Ds();for(;ot(w.And);){const Mt=A[V];++V;const It=Ds();it=new Ce(Mt,it,It)}return it}function Ds(){let it;for(;ot(w.Not);){const Mt=A[V];++V;const It=Ds();it=new U(Mt,It)}return it??vn()}function vn(){let it=Dt();for(;ot(w.ComparisonBinaryOperator)||ot(w.In)||ot(w.NotIn);){const Mt=A[V];++V;const It=Dt();it=new Ce(Mt,it,It)}return it}function Dt(){let it=Js();for(;ot(w.AdditiveBinaryOperator);){const Mt=A[V];++V;const It=Js();it=new Ce(Mt,it,It)}return it}function Ts(){const it=xs();return ot(w.OpenParen)?Ls(it):it}function Ls(it){let Mt=new N(it,Xs());return ot(w.OpenParen)&&(Mt=Ls(Mt)),Mt}function Xs(){ue(w.OpenParen,"Expected opening parenthesis for arguments list");const it=un();return ue(w.CloseParen,"Expected closing parenthesis for arguments list"),it}function un(){const it=[];for(;!ot(w.CloseParen);){let Mt=Fr();if(ot(w.Equals)){if(++V,!(Mt instanceof I))throw new SyntaxError("Expected identifier for keyword argument");const It=Fr();Mt=new he(Mt,It)}it.push(Mt),ot(w.Comma)&&++V}return it}function Ys(){const it=[];let Mt=!1;for(;!ot(w.CloseSquareBracket);)ot(w.Colon)?(it.push(void 0),++V,Mt=!0):(it.push(Fr()),ot(w.Colon)&&(++V,Mt=!0));if(it.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(Mt){if(it.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new ce(...it)}return it[0]}function xs(){let it=ps();for(;ot(w.Dot)||ot(w.OpenSquareBracket);){const Mt=A[V];++V;let It;const Wr=Mt.type!==w.Dot;if(Wr)It=Ys(),ue(w.CloseSquareBracket,"Expected closing square bracket");else if(It=ps(),It.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");it=new Z(it,It,Wr)}return it}function Js(){let it=Zs();for(;ot(w.MultiplicativeBinaryOperator);){const Mt=A[V];++V;const It=Zs();it=new Ce(Mt,it,It)}return it}function Zs(){let it=zs();for(;ot(w.Is);){++V;const Mt=ot(w.Not);Mt&&++V;let It=ps();if(It instanceof ee?It=new I(It.value.toString()):It instanceof Y&&(It=new I("none")),!(It instanceof I))throw new SyntaxError("Expected identifier for the test");it=new _e(it,Mt,It)}return it}function zs(){let it=Ts();for(;ot(w.Pipe);){++V;let Mt=ps();if(!(Mt instanceof I))throw new SyntaxError("Expected identifier for the filter");ot(w.OpenParen)&&(Mt=Ls(Mt)),it=new Ee(it,Mt)}return it}function ps(){const it=A[V];switch(it.type){case w.NumericLiteral:return++V,new k(Number(it.value));case w.StringLiteral:return++V,new E(it.value);case w.BooleanLiteral:return++V,new ee(it.value.toLowerCase()==="true");case w.NullLiteral:return++V,new Y(null);case w.Identifier:return++V,new I(it.value);case w.OpenParen:{++V;const Mt=Mr();if(A[V].type!==w.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${A[V].type} instead`);return++V,Mt}case w.OpenSquareBracket:{++V;const Mt=[];for(;!ot(w.CloseSquareBracket);)Mt.push(Fr()),ot(w.Comma)&&++V;return++V,new de(Mt)}case w.OpenCurlyBracket:{++V;const Mt=new Map;for(;!ot(w.CloseCurlyBracket);){const It=Fr();ue(w.Colon,"Expected colon between key and value in object literal");const Wr=Fr();Mt.set(It,Wr),ot(w.Comma)&&++V}return++V,new ye(Mt)}default:throw new SyntaxError(`Unexpected token: ${it.type}`)}}for(;V<A.length;)ne.body.push(Ae());return ne}function Re(A,ne,V=1){ne===void 0&&(ne=A,A=0);const ue=[];for(let Ae=A;Ae<ne;Ae+=V)ue.push(Ae);return ue}function Ke(A,ne,V,ue=1){const Ae=Math.sign(ue);Ae>=0?(ne=(ne??(ne=0))<0?Math.max(A.length+ne,0):Math.min(ne,A.length),V=(V??(V=A.length))<0?Math.max(A.length+V,0):Math.min(V,A.length)):(ne=(ne??(ne=A.length-1))<0?Math.max(A.length+ne,-1):Math.min(ne,A.length-1),V=(V??(V=-1))<-1?Math.max(A.length+V,-1):Math.min(V,A.length-1));const Je=[];for(let ot=ne;Ae*ot<Ae*V;ot+=ue)Je.push(A[ot]);return Je}function Ye(A){return A.replace(/\b\w/g,ne=>ne.toUpperCase())}var at=class{constructor(A=void 0){Te(this,"type","RuntimeValue");Te(this,"value");Te(this,"builtins",new Map);this.value=A}__bool__(){return new He(!!this.value)}},We=class extends at{constructor(){super(...arguments);Te(this,"type","NumericValue")}},le=class extends at{constructor(){super(...arguments);Te(this,"type","StringValue");Te(this,"builtins",new Map([["upper",new Qe(()=>new le(this.value.toUpperCase()))],["lower",new Qe(()=>new le(this.value.toLowerCase()))],["strip",new Qe(()=>new le(this.value.trim()))],["title",new Qe(()=>new le(Ye(this.value)))],["length",new We(this.value.length)],["rstrip",new Qe(()=>new le(this.value.trimEnd()))],["lstrip",new Qe(()=>new le(this.value.trimStart()))]]))}},He=class extends at{constructor(){super(...arguments);Te(this,"type","BooleanValue")}},je=class extends at{constructor(){super(...arguments);Te(this,"type","ObjectValue");Te(this,"builtins",new Map([["get",new Qe(([ne,V])=>{if(!(ne instanceof le))throw new Error(`Object key must be a string: got ${ne.type}`);return this.value.get(ne.value)??V??new qe})],["items",new Qe(()=>new $e(Array.from(this.value.entries()).map(([ne,V])=>new $e([new le(ne),V]))))]]))}__bool__(){return new He(this.value.size>0)}},we=class extends je{constructor(){super(...arguments);Te(this,"type","KeywordArgumentsValue")}},$e=class extends at{constructor(){super(...arguments);Te(this,"type","ArrayValue");Te(this,"builtins",new Map([["length",new We(this.value.length)]]))}__bool__(){return new He(this.value.length>0)}},et=class extends $e{constructor(){super(...arguments);Te(this,"type","TupleValue")}},Qe=class extends at{constructor(){super(...arguments);Te(this,"type","FunctionValue")}},qe=class extends at{constructor(){super(...arguments);Te(this,"type","NullValue")}},ze=class extends at{constructor(){super(...arguments);Te(this,"type","UndefinedValue")}},nt=class{constructor(A){Te(this,"variables",new Map([["namespace",new Qe(A=>{if(A.length===0)return new je(new Map);if(A.length!==1||!(A[0]instanceof je))throw new Error("`namespace` expects either zero arguments or a single object argument");return A[0]})]]));Te(this,"tests",new Map([["boolean",A=>A.type==="BooleanValue"],["callable",A=>A instanceof Qe],["odd",A=>{if(A.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${A.type}`);return A.value%2!==0}],["even",A=>{if(A.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${A.type}`);return A.value%2===0}],["false",A=>A.type==="BooleanValue"&&!A.value],["true",A=>A.type==="BooleanValue"&&A.value],["none",A=>A.type==="NullValue"],["string",A=>A.type==="StringValue"],["number",A=>A.type==="NumericValue"],["integer",A=>A.type==="NumericValue"&&Number.isInteger(A.value)],["iterable",A=>A.type==="ArrayValue"||A.type==="StringValue"],["mapping",A=>A.type==="ObjectValue"],["lower",A=>{const ne=A.value;return A.type==="StringValue"&&ne===ne.toLowerCase()}],["upper",A=>{const ne=A.value;return A.type==="StringValue"&&ne===ne.toUpperCase()}],["none",A=>A.type==="NullValue"],["defined",A=>A.type!=="UndefinedValue"],["undefined",A=>A.type==="UndefinedValue"],["equalto",(A,ne)=>A.value===ne.value],["eq",(A,ne)=>A.value===ne.value]]));this.parent=A}set(A,ne){return this.declareVariable(A,gt(ne))}declareVariable(A,ne){if(this.variables.has(A))throw new SyntaxError(`Variable already declared: ${A}`);return this.variables.set(A,ne),ne}setVariable(A,ne){return this.variables.set(A,ne),ne}resolve(A){if(this.variables.has(A))return this;if(this.parent)return this.parent.resolve(A);throw new Error(`Unknown variable: ${A}`)}lookupVariable(A){try{return this.resolve(A).variables.get(A)??new ze}catch{return new ze}}},dt=class{constructor(A){Te(this,"global");this.global=A??new nt}run(A){return this.evaluate(A,this.global)}evaluateBinaryExpression(A,ne){const V=this.evaluate(A.left,ne);switch(A.operator.value){case"and":return V.__bool__().value?this.evaluate(A.right,ne):V;case"or":return V.__bool__().value?V:this.evaluate(A.right,ne)}const ue=this.evaluate(A.right,ne);switch(A.operator.value){case"==":return new He(V.value==ue.value);case"!=":return new He(V.value!=ue.value)}if(V instanceof ze||ue instanceof ze)throw new Error("Cannot perform operation on undefined values");if(V instanceof qe||ue instanceof qe)throw new Error("Cannot perform operation on null values");if(V instanceof We&&ue instanceof We)switch(A.operator.value){case"+":return new We(V.value+ue.value);case"-":return new We(V.value-ue.value);case"*":return new We(V.value*ue.value);case"/":return new We(V.value/ue.value);case"%":return new We(V.value%ue.value);case"<":return new He(V.value<ue.value);case">":return new He(V.value>ue.value);case">=":return new He(V.value>=ue.value);case"<=":return new He(V.value<=ue.value)}else if(V instanceof $e&&ue instanceof $e)switch(A.operator.value){case"+":return new $e(V.value.concat(ue.value))}else if(ue instanceof $e){const Ae=ue.value.find(Je=>Je.value===V.value)!==void 0;switch(A.operator.value){case"in":return new He(Ae);case"not in":return new He(!Ae)}}if(V instanceof le||ue instanceof le)switch(A.operator.value){case"+":return new le(V.value.toString()+ue.value.toString())}if(V instanceof le&&ue instanceof le)switch(A.operator.value){case"in":return new He(ue.value.includes(V.value));case"not in":return new He(!ue.value.includes(V.value))}if(V instanceof le&&ue instanceof je)switch(A.operator.value){case"in":return new He(ue.value.has(V.value));case"not in":return new He(!ue.value.has(V.value))}throw new SyntaxError(`Unknown operator "${A.operator.value}" between ${V.type} and ${ue.type}`)}evaluateArguments(A,ne){const V=[],ue=new Map;for(const Ae of A)if(Ae.type==="KeywordArgumentExpression"){const Je=Ae;ue.set(Je.key.value,this.evaluate(Je.value,ne))}else{if(ue.size>0)throw new Error("Positional arguments must come before keyword arguments");V.push(this.evaluate(Ae,ne))}return[V,ue]}evaluateFilterExpression(A,ne){const V=this.evaluate(A.operand,ne);if(A.filter.type==="Identifier"){const ue=A.filter;if(ue.value==="tojson")return new le(ht(V));if(V instanceof $e)switch(ue.value){case"list":return V;case"first":return V.value[0];case"last":return V.value[V.value.length-1];case"length":return new We(V.value.length);case"reverse":return new $e(V.value.reverse());case"sort":return new $e(V.value.sort((Ae,Je)=>{if(Ae.type!==Je.type)throw new Error(`Cannot compare different types: ${Ae.type} and ${Je.type}`);switch(Ae.type){case"NumericValue":return Ae.value-Je.value;case"StringValue":return Ae.value.localeCompare(Je.value);default:throw new Error(`Cannot compare type: ${Ae.type}`)}}));default:throw new Error(`Unknown ArrayValue filter: ${ue.value}`)}else if(V instanceof le)switch(ue.value){case"length":return new We(V.value.length);case"upper":return new le(V.value.toUpperCase());case"lower":return new le(V.value.toLowerCase());case"title":return new le(Ye(V.value));case"capitalize":return new le(V.value.charAt(0).toUpperCase()+V.value.slice(1));case"trim":return new le(V.value.trim());case"indent":return new le(V.value.split(`
`).map((Ae,Je)=>Je===0||Ae.length===0?Ae:"    "+Ae).join(`
`));case"string":return V;default:throw new Error(`Unknown StringValue filter: ${ue.value}`)}else if(V instanceof We)switch(ue.value){case"abs":return new We(Math.abs(V.value));default:throw new Error(`Unknown NumericValue filter: ${ue.value}`)}else if(V instanceof je)switch(ue.value){case"items":return new $e(Array.from(V.value.entries()).map(([Ae,Je])=>new $e([new le(Ae),Je])));case"length":return new We(V.value.size);default:throw new Error(`Unknown ObjectValue filter: ${ue.value}`)}throw new Error(`Cannot apply filter "${ue.value}" to type: ${V.type}`)}else if(A.filter.type==="CallExpression"){const ue=A.filter;if(ue.callee.type!=="Identifier")throw new Error(`Unknown filter: ${ue.callee.type}`);const Ae=ue.callee.value;if(Ae==="tojson"){const[,Je]=this.evaluateArguments(ue.args,ne),ot=Je.get("indent")??new qe;if(!(ot instanceof We||ot instanceof qe))throw new Error("If set, indent must be a number");return new le(ht(V,ot.value))}if(V instanceof $e){switch(Ae){case"selectattr":case"rejectattr":{const Je=Ae==="selectattr";if(V.value.some(Ct=>!(Ct instanceof je)))throw new Error(`\`${Ae}\` can only be applied to array of objects`);if(ue.args.some(Ct=>Ct.type!=="StringLiteral"))throw new Error(`arguments of \`${Ae}\` must be strings`);const[ot,ut,At]=ue.args.map(Ct=>this.evaluate(Ct,ne));let xt;if(ut){const Ct=ne.tests.get(ut.value);if(!Ct)throw new Error(`Unknown test: ${ut.value}`);xt=Ct}else xt=(...Ct)=>Ct[0].__bool__().value;const Et=V.value.filter(Ct=>{const ar=Ct.value.get(ot.value),Mr=ar?xt(ar,At):!1;return Je?Mr:!Mr});return new $e(Et)}case"map":{const[,Je]=this.evaluateArguments(ue.args,ne);if(Je.has("attribute")){const ot=Je.get("attribute");if(!(ot instanceof le))throw new Error("attribute must be a string");const ut=Je.get("default"),At=V.value.map(xt=>{if(!(xt instanceof je))throw new Error("items in map must be an object");return xt.value.get(ot.value)??ut??new ze});return new $e(At)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${Ae}`)}else if(V instanceof le){switch(Ae){case"indent":{const[Je,ot]=this.evaluateArguments(ue.args,ne),ut=Je.at(0)??ot.get("width")??new We(4);if(!(ut instanceof We))throw new Error("width must be a number");const At=Je.at(1)??ot.get("first")??new He(!1),xt=Je.at(2)??ot.get("blank")??new He(!1),Et=V.value.split(`
`),Ct=" ".repeat(ut.value),ar=Et.map((Mr,Nr)=>!At.value&&Nr===0||!xt.value&&Mr.length===0?Mr:Ct+Mr);return new le(ar.join(`
`))}}throw new Error(`Unknown StringValue filter: ${Ae}`)}else throw new Error(`Cannot apply filter "${Ae}" to type: ${V.type}`)}throw new Error(`Unknown filter: ${A.filter.type}`)}evaluateTestExpression(A,ne){const V=this.evaluate(A.operand,ne),ue=ne.tests.get(A.test.value);if(!ue)throw new Error(`Unknown test: ${A.test.value}`);const Ae=ue(V);return new He(A.negate?!Ae:Ae)}evaluateUnaryExpression(A,ne){const V=this.evaluate(A.argument,ne);switch(A.operator.value){case"not":return new He(!V.value);default:throw new SyntaxError(`Unknown operator: ${A.operator.value}`)}}evalProgram(A,ne){return this.evaluateBlock(A.body,ne)}evaluateBlock(A,ne){let V="";for(const ue of A){const Ae=this.evaluate(ue,ne);Ae.type!=="NullValue"&&Ae.type!=="UndefinedValue"&&(V+=Ae.value)}return new le(V)}evaluateIdentifier(A,ne){return ne.lookupVariable(A.value)}evaluateCallExpression(A,ne){const[V,ue]=this.evaluateArguments(A.args,ne);ue.size>0&&V.push(new we(ue));const Ae=this.evaluate(A.callee,ne);if(Ae.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${Ae.type}`);return Ae.value(V,ne)}evaluateSliceExpression(A,ne,V){if(!(A instanceof $e||A instanceof le))throw new Error("Slice object must be an array or string");const ue=this.evaluate(ne.start,V),Ae=this.evaluate(ne.stop,V),Je=this.evaluate(ne.step,V);if(!(ue instanceof We||ue instanceof ze))throw new Error("Slice start must be numeric or undefined");if(!(Ae instanceof We||Ae instanceof ze))throw new Error("Slice stop must be numeric or undefined");if(!(Je instanceof We||Je instanceof ze))throw new Error("Slice step must be numeric or undefined");return A instanceof $e?new $e(Ke(A.value,ue.value,Ae.value,Je.value)):new le(Ke(Array.from(A.value),ue.value,Ae.value,Je.value).join(""))}evaluateMemberExpression(A,ne){const V=this.evaluate(A.object,ne);let ue;if(A.computed){if(A.property.type==="SliceExpression")return this.evaluateSliceExpression(V,A.property,ne);ue=this.evaluate(A.property,ne)}else ue=new le(A.property.value);let Ae;if(V instanceof je){if(!(ue instanceof le))throw new Error(`Cannot access property with non-string: got ${ue.type}`);Ae=V.value.get(ue.value)??V.builtins.get(ue.value)}else if(V instanceof $e||V instanceof le)if(ue instanceof We)Ae=V.value.at(ue.value),V instanceof le&&(Ae=new le(V.value.at(ue.value)));else if(ue instanceof le)Ae=V.builtins.get(ue.value);else throw new Error(`Cannot access property with non-string/non-number: got ${ue.type}`);else{if(!(ue instanceof le))throw new Error(`Cannot access property with non-string: got ${ue.type}`);Ae=V.builtins.get(ue.value)}return Ae instanceof at?Ae:new ze}evaluateSet(A,ne){const V=this.evaluate(A.value,ne);if(A.assignee.type==="Identifier"){const ue=A.assignee.value;ne.setVariable(ue,V)}else if(A.assignee.type==="MemberExpression"){const ue=A.assignee,Ae=this.evaluate(ue.object,ne);if(!(Ae instanceof je))throw new Error("Cannot assign to member of non-object");if(ue.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");Ae.value.set(ue.property.value,V)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(A.assignee)}`);return new qe}evaluateIf(A,ne){const V=this.evaluate(A.test,ne);return this.evaluateBlock(V.__bool__().value?A.body:A.alternate,ne)}evaluateFor(A,ne){const V=new nt(ne);let ue,Ae;if(A.iterable.type==="SelectExpression"){const xt=A.iterable;Ae=this.evaluate(xt.iterable,V),ue=xt.test}else Ae=this.evaluate(A.iterable,V);if(!(Ae instanceof $e))throw new Error(`Expected iterable type in for loop: got ${Ae.type}`);const Je=[],ot=[];for(let xt=0;xt<Ae.value.length;++xt){const Et=new nt(V),Ct=Ae.value[xt];let ar;if(A.loopvar.type==="Identifier")ar=Mr=>Mr.setVariable(A.loopvar.value,Ct);else if(A.loopvar.type==="TupleLiteral"){const Mr=A.loopvar;if(Ct.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${Ct.type}`);const Nr=Ct;if(Mr.value.length!==Nr.value.length)throw new Error(`Too ${Mr.value.length>Nr.value.length?"few":"many"} items to unpack`);ar=Fr=>{for(let as=0;as<Mr.value.length;++as){if(Mr.value[as].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Mr.value[as].type}`);Fr.setVariable(Mr.value[as].value,Nr.value[as])}}}else throw new Error(`Invalid loop variable(s): ${A.loopvar.type}`);ue&&(ar(Et),!this.evaluate(ue,Et).__bool__().value)||(Je.push(Ct),ot.push(ar))}let ut="",At=!0;for(let xt=0;xt<Je.length;++xt){const Et=new Map([["index",new We(xt+1)],["index0",new We(xt)],["revindex",new We(Je.length-xt)],["revindex0",new We(Je.length-xt-1)],["first",new He(xt===0)],["last",new He(xt===Je.length-1)],["length",new We(Je.length)],["previtem",xt>0?Je[xt-1]:new ze],["nextitem",xt<Je.length-1?Je[xt+1]:new ze]]);V.setVariable("loop",new je(Et)),ot[xt](V);const Ct=this.evaluateBlock(A.body,V);ut+=Ct.value,At=!1}if(At){const xt=this.evaluateBlock(A.defaultBlock,V);ut+=xt.value}return new le(ut)}evaluateMacro(A,ne){return ne.setVariable(A.name.value,new Qe((V,ue)=>{var ot;const Ae=new nt(ue);V=V.slice();let Je;((ot=V.at(-1))==null?void 0:ot.type)==="KeywordArgumentsValue"&&(Je=V.pop());for(let ut=0;ut<A.args.length;++ut){const At=A.args[ut],xt=V[ut];if(At.type==="Identifier"){const Et=At;if(!xt)throw new Error(`Missing positional argument: ${Et.value}`);Ae.setVariable(Et.value,xt)}else if(At.type==="KeywordArgumentExpression"){const Et=At,Ct=xt??(Je==null?void 0:Je.value.get(Et.key.value))??this.evaluate(Et.value,Ae);Ae.setVariable(Et.key.value,Ct)}else throw new Error(`Unknown argument type: ${At.type}`)}return this.evaluateBlock(A.body,Ae)})),new qe}evaluate(A,ne){if(A===void 0)return new ze;switch(A.type){case"Program":return this.evalProgram(A,ne);case"Set":return this.evaluateSet(A,ne);case"If":return this.evaluateIf(A,ne);case"For":return this.evaluateFor(A,ne);case"Macro":return this.evaluateMacro(A,ne);case"NumericLiteral":return new We(Number(A.value));case"StringLiteral":return new le(A.value);case"BooleanLiteral":return new He(A.value);case"NullLiteral":return new qe(A.value);case"ArrayLiteral":return new $e(A.value.map(V=>this.evaluate(V,ne)));case"TupleLiteral":return new et(A.value.map(V=>this.evaluate(V,ne)));case"ObjectLiteral":{const V=new Map;for(const[ue,Ae]of A.value){const Je=this.evaluate(ue,ne);if(!(Je instanceof le))throw new Error(`Object keys must be strings: got ${Je.type}`);V.set(Je.value,this.evaluate(Ae,ne))}return new je(V)}case"Identifier":return this.evaluateIdentifier(A,ne);case"CallExpression":return this.evaluateCallExpression(A,ne);case"MemberExpression":return this.evaluateMemberExpression(A,ne);case"UnaryExpression":return this.evaluateUnaryExpression(A,ne);case"BinaryExpression":return this.evaluateBinaryExpression(A,ne);case"FilterExpression":return this.evaluateFilterExpression(A,ne);case"TestExpression":return this.evaluateTestExpression(A,ne);default:throw new SyntaxError(`Unknown node type: ${A.type}`)}}};function gt(A){switch(typeof A){case"number":return new We(A);case"string":return new le(A);case"boolean":return new He(A);case"undefined":return new ze;case"object":return A===null?new qe:Array.isArray(A)?new $e(A.map(gt)):new je(new Map(Object.entries(A).map(([ne,V])=>[ne,gt(V)])));case"function":return new Qe((ne,V)=>{const ue=A(...ne.map(Ae=>Ae.value))??null;return gt(ue)});default:throw new Error(`Cannot convert to runtime value: ${A}`)}}function ht(A,ne,V){const ue=V??0;switch(A.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(A.value);case"ArrayValue":case"ObjectValue":{const Ae=ne?" ".repeat(ne):"",Je=`
`+Ae.repeat(ue),ot=Je+Ae;if(A.type==="ArrayValue"){const ut=A.value.map(At=>ht(At,ne,ue+1));return ne?`[${ot}${ut.join(`,${ot}`)}${Je}]`:`[${ut.join(", ")}]`}else{const ut=Array.from(A.value.entries()).map(([At,xt])=>{const Et=`"${At}": ${ht(xt,ne,ue+1)}`;return ne?`${ot}${Et}`:Et});return ne?`{${ut.join(",")}${Je}}`:`{${ut.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${A.type}`)}}var _t=class{constructor(A){Te(this,"parsed");const ne=y(A,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=ke(ne)}render(A){const ne=new nt;ne.set("false",!1),ne.set("true",!0),ne.set("raise_exception",Ae=>{throw new Error(Ae)}),ne.set("range",Re);for(const[Ae,Je]of Object.entries(A))ne.set(Ae,Je);return new dt(ne).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(Oe,R,c)=>{c.r(R),c.d(R,{registerBackend:()=>G,resolveBackendAndExecutionProviders:()=>Q});const w=new Map,D=[],G=(g,v,b)=>{if(v&&typeof v.init=="function"&&typeof v.createInferenceSessionHandler=="function"){const y=w.get(g);if(y===void 0)w.set(g,{backend:v,priority:b});else{if(y.priority>b)return;if(y.priority===b&&y.backend!==v)throw new Error(`cannot register backend "${g}" using priority ${b}`)}if(b>=0){const C=D.indexOf(g);C!==-1&&D.splice(C,1);for(let q=0;q<D.length;q++)if(w.get(D[q]).priority<=b){D.splice(q,0,g);return}D.push(g)}return}throw new TypeError("not a valid backend")},re=async g=>{const v=w.get(g);if(!v)return"backend not found.";if(v.initialized)return v.backend;if(v.aborted)return v.error;{const b=!!v.initPromise;try{return b||(v.initPromise=v.backend.init(g)),await v.initPromise,v.initialized=!0,v.backend}catch(y){return b||(v.error=`${y}`,v.aborted=!0),v.error}finally{delete v.initPromise}}},Q=async g=>{const v=g.executionProviders||[],b=v.map(fe=>typeof fe=="string"?fe:fe.name),y=b.length===0?D:b;let C;const q=[],J=new Set;for(const fe of y){const j=await re(fe);typeof j=="string"?q.push({name:fe,err:j}):(C||(C=j),C===j&&J.add(fe))}if(!C)throw new Error(`no available backend found. ERR: ${q.map(fe=>`[${fe.name}] ${fe.err}`).join(", ")}`);for(const{name:fe,err:j}of q)b.includes(fe)&&console.warn(`removing requested execution provider "${fe}" from session options because it is not available: ${j}`);const ie=v.filter(fe=>J.has(typeof fe=="string"?fe:fe.name));return[C,new Proxy(g,{get:(fe,j)=>j==="executionProviders"?ie:Reflect.get(fe,j)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(Oe,R,c)=>{c.r(R),c.d(R,{registerBackend:()=>w.registerBackend});var w=c("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(Oe,R,c)=>{c.r(R),c.d(R,{env:()=>G});var w=c("./node_modules/onnxruntime-common/dist/esm/version.js");let D="warning";const G={wasm:{},webgl:{},webgpu:{},versions:{common:w.version},set logLevel(re){if(re!==void 0){if(typeof re!="string"||["verbose","info","warning","error","fatal"].indexOf(re)===-1)throw new Error(`Unsupported logging level: ${re}`);D=re}},get logLevel(){return D}};Object.defineProperty(G,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(Oe,R,c)=>{c.r(R),c.d(R,{env:()=>D});var w=c("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const D=w.env},"./node_modules/onnxruntime-common/dist/esm/index.js":(Oe,R,c)=>{c.r(R),c.d(R,{InferenceSession:()=>G.InferenceSession,TRACE:()=>Q.TRACE,TRACE_FUNC_BEGIN:()=>Q.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>Q.TRACE_FUNC_END,Tensor:()=>re.Tensor,TrainingSession:()=>g.TrainingSession,env:()=>D.env,registerBackend:()=>w.registerBackend});var w=c("./node_modules/onnxruntime-common/dist/esm/backend.js"),D=c("./node_modules/onnxruntime-common/dist/esm/env.js"),G=c("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),re=c("./node_modules/onnxruntime-common/dist/esm/tensor.js");c("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),c("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var Q=c("./node_modules/onnxruntime-common/dist/esm/trace.js");c("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),c("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var g=c("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(Oe,R,c)=>{c.r(R),c.d(R,{InferenceSession:()=>re});var w=c("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),D=c("./node_modules/onnxruntime-common/dist/esm/tensor.js"),G=c("./node_modules/onnxruntime-common/dist/esm/trace.js");class re{constructor(g){this.handler=g}async run(g,v,b){(0,G.TRACE_FUNC_BEGIN)();const y={};let C={};if(typeof g!="object"||g===null||g instanceof D.Tensor||Array.isArray(g))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let q=!0;if(typeof v=="object"){if(v===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(v instanceof D.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(v)){if(v.length===0)throw new TypeError("'fetches' cannot be an empty array.");q=!1;for(const fe of v){if(typeof fe!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(fe)===-1)throw new RangeError(`'fetches' contains invalid output name: ${fe}.`);y[fe]=null}if(typeof b=="object"&&b!==null)C=b;else if(typeof b<"u")throw new TypeError("'options' must be an object.")}else{let fe=!1;const j=Object.getOwnPropertyNames(v);for(const X of this.outputNames)if(j.indexOf(X)!==-1){const Z=v[X];(Z===null||Z instanceof D.Tensor)&&(fe=!0,q=!1,y[X]=Z)}if(fe){if(typeof b=="object"&&b!==null)C=b;else if(typeof b<"u")throw new TypeError("'options' must be an object.")}else C=v}}else if(typeof v<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const fe of this.inputNames)if(typeof g[fe]>"u")throw new Error(`input '${fe}' is missing in 'feeds'.`);if(q)for(const fe of this.outputNames)y[fe]=null;const J=await this.handler.run(g,y,C),ie={};for(const fe in J)if(Object.hasOwnProperty.call(J,fe)){const j=J[fe];j instanceof D.Tensor?ie[fe]=j:ie[fe]=new D.Tensor(j.type,j.data,j.dims)}return(0,G.TRACE_FUNC_END)(),ie}async release(){return this.handler.dispose()}static async create(g,v,b,y){(0,G.TRACE_FUNC_BEGIN)();let C,q={};if(typeof g=="string"){if(C=g,typeof v=="object"&&v!==null)q=v;else if(typeof v<"u")throw new TypeError("'options' must be an object.")}else if(g instanceof Uint8Array){if(C=g,typeof v=="object"&&v!==null)q=v;else if(typeof v<"u")throw new TypeError("'options' must be an object.")}else if(g instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&g instanceof SharedArrayBuffer){const j=g;let X=0,Z=g.byteLength;if(typeof v=="object"&&v!==null)q=v;else if(typeof v=="number"){if(X=v,!Number.isSafeInteger(X))throw new RangeError("'byteOffset' must be an integer.");if(X<0||X>=j.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${j.byteLength}).`);if(Z=g.byteLength-X,typeof b=="number"){if(Z=b,!Number.isSafeInteger(Z))throw new RangeError("'byteLength' must be an integer.");if(Z<=0||X+Z>j.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${j.byteLength-X}].`);if(typeof y=="object"&&y!==null)q=y;else if(typeof y<"u")throw new TypeError("'options' must be an object.")}else if(typeof b<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof v<"u")throw new TypeError("'options' must be an object.");C=new Uint8Array(j,X,Z)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[J,ie]=await(0,w.resolveBackendAndExecutionProviders)(q),fe=await J.createInferenceSessionHandler(C,ie);return(0,G.TRACE_FUNC_END)(),new re(fe)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(Oe,R,c)=>{c.r(R),c.d(R,{InferenceSession:()=>D});var w=c("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js");const D=w.InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(Oe,R,c)=>{c.r(R)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(Oe,R,c)=>{c.r(R)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(Oe,R,c)=>{c.r(R),c.d(R,{tensorToDataURL:()=>w,tensorToImageData:()=>D});const w=(G,re)=>{const Q=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);Q.width=G.dims[3],Q.height=G.dims[2];const g=Q.getContext("2d");if(g!=null){let v,b;(re==null?void 0:re.tensorLayout)!==void 0&&re.tensorLayout==="NHWC"?(v=G.dims[2],b=G.dims[3]):(v=G.dims[3],b=G.dims[2]);const y=(re==null?void 0:re.format)!==void 0?re.format:"RGB",C=re==null?void 0:re.norm;let q,J;C===void 0||C.mean===void 0?q=[255,255,255,255]:typeof C.mean=="number"?q=[C.mean,C.mean,C.mean,C.mean]:(q=[C.mean[0],C.mean[1],C.mean[2],0],C.mean[3]!==void 0&&(q[3]=C.mean[3])),C===void 0||C.bias===void 0?J=[0,0,0,0]:typeof C.bias=="number"?J=[C.bias,C.bias,C.bias,C.bias]:(J=[C.bias[0],C.bias[1],C.bias[2],0],C.bias[3]!==void 0&&(J[3]=C.bias[3]));const ie=b*v;let fe=0,j=ie,X=ie*2,Z=-1;y==="RGBA"?(fe=0,j=ie,X=ie*2,Z=ie*3):y==="RGB"?(fe=0,j=ie,X=ie*2):y==="RBG"&&(fe=0,X=ie,j=ie*2);for(let N=0;N<b;N++)for(let I=0;I<v;I++){const _=(G.data[fe++]-J[0])*q[0],k=(G.data[j++]-J[1])*q[1],E=(G.data[X++]-J[2])*q[2],ee=Z===-1?255:(G.data[Z++]-J[3])*q[3];g.fillStyle="rgba("+_+","+k+","+E+","+ee+")",g.fillRect(I,N,1,1)}if("toDataURL"in Q)return Q.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},D=(G,re)=>{const Q=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let g;if(Q!=null){let v,b,y;(re==null?void 0:re.tensorLayout)!==void 0&&re.tensorLayout==="NHWC"?(v=G.dims[2],b=G.dims[1],y=G.dims[3]):(v=G.dims[3],b=G.dims[2],y=G.dims[1]);const C=re!==void 0&&re.format!==void 0?re.format:"RGB",q=re==null?void 0:re.norm;let J,ie;q===void 0||q.mean===void 0?J=[255,255,255,255]:typeof q.mean=="number"?J=[q.mean,q.mean,q.mean,q.mean]:(J=[q.mean[0],q.mean[1],q.mean[2],255],q.mean[3]!==void 0&&(J[3]=q.mean[3])),q===void 0||q.bias===void 0?ie=[0,0,0,0]:typeof q.bias=="number"?ie=[q.bias,q.bias,q.bias,q.bias]:(ie=[q.bias[0],q.bias[1],q.bias[2],0],q.bias[3]!==void 0&&(ie[3]=q.bias[3]));const fe=b*v;if(re!==void 0&&(re.format!==void 0&&y===4&&re.format!=="RGBA"||y===3&&re.format!=="RGB"&&re.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const j=4;let X=0,Z=1,N=2,I=3,_=0,k=fe,E=fe*2,ee=-1;C==="RGBA"?(_=0,k=fe,E=fe*2,ee=fe*3):C==="RGB"?(_=0,k=fe,E=fe*2):C==="RBG"&&(_=0,E=fe,k=fe*2),g=Q.createImageData(v,b);for(let Y=0;Y<b*v;X+=j,Z+=j,N+=j,I+=j,Y++)g.data[X]=(G.data[_++]-ie[0])*J[0],g.data[Z]=(G.data[k++]-ie[1])*J[1],g.data[N]=(G.data[E++]-ie[2])*J[2],g.data[I]=ee===-1?255:(G.data[ee++]-ie[3])*J[3]}else throw new Error("Can not access image data");return g}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(Oe,R,c)=>{c.r(R)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(Oe,R,c)=>{c.r(R),c.d(R,{bufferToTensor:()=>D,tensorFromGpuBuffer:()=>Q,tensorFromImage:()=>G,tensorFromMLTensor:()=>g,tensorFromPinnedBuffer:()=>v,tensorFromTexture:()=>re});var w=c("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const D=(b,y)=>{if(b===void 0)throw new Error("Image buffer must be defined");if(y.height===void 0||y.width===void 0)throw new Error("Image height and width must be defined");if(y.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:C,width:q}=y,J=y.norm??{mean:255,bias:0};let ie,fe;typeof J.mean=="number"?ie=[J.mean,J.mean,J.mean,J.mean]:ie=[J.mean[0],J.mean[1],J.mean[2],J.mean[3]??255],typeof J.bias=="number"?fe=[J.bias,J.bias,J.bias,J.bias]:fe=[J.bias[0],J.bias[1],J.bias[2],J.bias[3]??0];const j=y.format!==void 0?y.format:"RGBA",X=y.tensorFormat!==void 0&&y.tensorFormat!==void 0?y.tensorFormat:"RGB",Z=C*q,N=X==="RGBA"?new Float32Array(Z*4):new Float32Array(Z*3);let I=4,_=0,k=1,E=2,ee=3,Y=0,de=Z,me=Z*2,ye=-1;j==="RGB"&&(I=3,_=0,k=1,E=2,ee=-1),X==="RGBA"?ye=Z*3:X==="RBG"?(Y=0,me=Z,de=Z*2):X==="BGR"&&(me=0,de=Z,Y=Z*2);for(let Ee=0;Ee<Z;Ee++,_+=I,E+=I,k+=I,ee+=I)N[Y++]=(b[_]+fe[0])/ie[0],N[de++]=(b[k]+fe[1])/ie[1],N[me++]=(b[E]+fe[2])/ie[2],ye!==-1&&ee!==-1&&(N[ye++]=(b[ee]+fe[3])/ie[3]);return X==="RGBA"?new w.Tensor("float32",N,[1,4,C,q]):new w.Tensor("float32",N,[1,3,C,q])},G=async(b,y)=>{const C=typeof HTMLImageElement<"u"&&b instanceof HTMLImageElement,q=typeof ImageData<"u"&&b instanceof ImageData,J=typeof ImageBitmap<"u"&&b instanceof ImageBitmap,ie=typeof b=="string";let fe,j=y??{};const X=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},Z=N=>typeof HTMLCanvasElement<"u"&&N instanceof HTMLCanvasElement||N instanceof OffscreenCanvas?N.getContext("2d"):null;if(C){const N=X();N.width=b.width,N.height=b.height;const I=Z(N);if(I!=null){let _=b.height,k=b.width;if(y!==void 0&&y.resizedHeight!==void 0&&y.resizedWidth!==void 0&&(_=y.resizedHeight,k=y.resizedWidth),y!==void 0){if(j=y,y.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");j.tensorFormat="RGBA",j.height=_,j.width=k}else j.tensorFormat="RGBA",j.height=_,j.width=k;I.drawImage(b,0,0),fe=I.getImageData(0,0,k,_).data}else throw new Error("Can not access image data")}else if(q){let N,I;if(y!==void 0&&y.resizedWidth!==void 0&&y.resizedHeight!==void 0?(N=y.resizedHeight,I=y.resizedWidth):(N=b.height,I=b.width),y!==void 0&&(j=y),j.format="RGBA",j.height=N,j.width=I,y!==void 0){const _=X();_.width=I,_.height=N;const k=Z(_);if(k!=null)k.putImageData(b,0,0),fe=k.getImageData(0,0,I,N).data;else throw new Error("Can not access image data")}else fe=b.data}else if(J){if(y===void 0)throw new Error("Please provide image config with format for Imagebitmap");const N=X();N.width=b.width,N.height=b.height;const I=Z(N);if(I!=null){const _=b.height,k=b.width;return I.drawImage(b,0,0,k,_),fe=I.getImageData(0,0,k,_).data,j.height=_,j.width=k,D(fe,j)}else throw new Error("Can not access image data")}else{if(ie)return new Promise((N,I)=>{const _=X(),k=Z(_);if(!b||!k)return I();const E=new Image;E.crossOrigin="Anonymous",E.src=b,E.onload=()=>{_.width=E.width,_.height=E.height,k.drawImage(E,0,0,_.width,_.height);const ee=k.getImageData(0,0,_.width,_.height);j.height=_.height,j.width=_.width,N(D(ee.data,j))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(fe!==void 0)return D(fe,j);throw new Error("Input data provided is not supported - aborted tensor creation")},re=(b,y)=>{const{width:C,height:q,download:J,dispose:ie}=y,fe=[1,q,C,4];return new w.Tensor({location:"texture",type:"float32",texture:b,dims:fe,download:J,dispose:ie})},Q=(b,y)=>{const{dataType:C,dims:q,download:J,dispose:ie}=y;return new w.Tensor({location:"gpu-buffer",type:C??"float32",gpuBuffer:b,dims:q,download:J,dispose:ie})},g=(b,y)=>{const{dataType:C,dims:q,download:J,dispose:ie}=y;return new w.Tensor({location:"ml-tensor",type:C??"float32",mlTensor:b,dims:q,download:J,dispose:ie})},v=(b,y,C)=>new w.Tensor({location:"cpu-pinned",type:b,data:y,dims:C??[y.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(Oe,R,c)=>{c.r(R)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(Oe,R,c)=>{c.r(R),c.d(R,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>D,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>w,checkTypedArray:()=>re});const w=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),D=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let G=!1;const re=()=>{if(!G){G=!0;const Q=typeof BigInt64Array<"u"&&BigInt64Array.from,g=typeof BigUint64Array<"u"&&BigUint64Array.from,v=typeof Float16Array<"u"&&Float16Array.from;Q&&(w.set("int64",BigInt64Array),D.set(BigInt64Array,"int64")),g&&(w.set("uint64",BigUint64Array),D.set(BigUint64Array,"uint64")),v?(w.set("float16",Float16Array),D.set(Float16Array,"float16")):w.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(Oe,R,c)=>{c.r(R),c.d(R,{Tensor:()=>Q});var w=c("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),D=c("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),G=c("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),re=c("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class Q{constructor(v,b,y){(0,G.checkTypedArray)();let C,q;if(typeof v=="object"&&"location"in v)switch(this.dataLocation=v.location,C=v.type,q=v.dims,v.location){case"cpu-pinned":{const ie=G.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(C);if(!ie)throw new TypeError(`unsupported type "${C}" to create tensor from pinned buffer`);if(!(v.data instanceof ie))throw new TypeError(`buffer should be of type ${ie.name}`);this.cpuData=v.data;break}case"texture":{if(C!=="float32")throw new TypeError(`unsupported type "${C}" to create tensor from texture`);this.gpuTextureData=v.texture,this.downloader=v.download,this.disposer=v.dispose;break}case"gpu-buffer":{if(C!=="float32"&&C!=="float16"&&C!=="int32"&&C!=="int64"&&C!=="uint32"&&C!=="uint8"&&C!=="bool"&&C!=="uint4"&&C!=="int4")throw new TypeError(`unsupported type "${C}" to create tensor from gpu buffer`);this.gpuBufferData=v.gpuBuffer,this.downloader=v.download,this.disposer=v.dispose;break}case"ml-tensor":{if(C!=="float32"&&C!=="float16"&&C!=="int32"&&C!=="int64"&&C!=="uint32"&&C!=="uint64"&&C!=="int8"&&C!=="uint8"&&C!=="bool")throw new TypeError(`unsupported type "${C}" to create tensor from MLTensor`);this.mlTensorData=v.mlTensor,this.downloader=v.download,this.disposer=v.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let ie,fe;if(typeof v=="string")if(C=v,fe=y,v==="string"){if(!Array.isArray(b))throw new TypeError("A string tensor's data must be a string array.");ie=b}else{const j=G.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(v);if(j===void 0)throw new TypeError(`Unsupported tensor type: ${v}.`);if(Array.isArray(b)){if(v==="float16"&&j===Uint16Array||v==="uint4"||v==="int4")throw new TypeError(`Creating a ${v} tensor from number array is not supported. Please use ${j.name} as data.`);v==="uint64"||v==="int64"?ie=j.from(b,BigInt):ie=j.from(b)}else if(b instanceof j)ie=b;else if(b instanceof Uint8ClampedArray)if(v==="uint8")ie=Uint8Array.from(b);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${C} tensor's data must be type of ${j}`)}else if(fe=b,Array.isArray(v)){if(v.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const j=typeof v[0];if(j==="string")C="string",ie=v;else if(j==="boolean")C="bool",ie=Uint8Array.from(v);else throw new TypeError(`Invalid element type of data array: ${j}.`)}else if(v instanceof Uint8ClampedArray)C="uint8",ie=Uint8Array.from(v);else{const j=G.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(v.constructor);if(j===void 0)throw new TypeError(`Unsupported type for tensor data: ${v.constructor}.`);C=j,ie=v}if(fe===void 0)fe=[ie.length];else if(!Array.isArray(fe))throw new TypeError("A tensor's dims must be a number array");q=fe,this.cpuData=ie,this.dataLocation="cpu"}const J=(0,re.calculateSize)(q);if(this.cpuData&&J!==this.cpuData.length&&!((C==="uint4"||C==="int4")&&Math.ceil(J/2)===this.cpuData.length))throw new Error(`Tensor's size(${J}) does not match data length(${this.cpuData.length}).`);this.type=C,this.dims=q,this.size=J}static async fromImage(v,b){return(0,D.tensorFromImage)(v,b)}static fromTexture(v,b){return(0,D.tensorFromTexture)(v,b)}static fromGpuBuffer(v,b){return(0,D.tensorFromGpuBuffer)(v,b)}static fromMLTensor(v,b){return(0,D.tensorFromMLTensor)(v,b)}static fromPinnedBuffer(v,b,y){return(0,D.tensorFromPinnedBuffer)(v,b,y)}toDataURL(v){return(0,w.tensorToDataURL)(this,v)}toImageData(v){return(0,w.tensorToImageData)(this,v)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(v){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const b=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=b,v&&this.disposer&&(this.disposer(),this.disposer=void 0),b}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(v){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,re.tensorReshape)(this,v)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(Oe,R,c)=>{c.r(R),c.d(R,{calculateSize:()=>D,tensorReshape:()=>G});var w=c("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const D=re=>{let Q=1;for(let g=0;g<re.length;g++){const v=re[g];if(typeof v!="number"||!Number.isSafeInteger(v))throw new TypeError(`dims[${g}] must be an integer, got: ${v}`);if(v<0)throw new RangeError(`dims[${g}] must be a non-negative integer, got: ${v}`);Q*=v}return Q},G=(re,Q)=>{switch(re.location){case"cpu":return new w.Tensor(re.type,re.data,Q);case"cpu-pinned":return new w.Tensor({location:"cpu-pinned",data:re.data,type:re.type,dims:Q});case"texture":return new w.Tensor({location:"texture",texture:re.texture,type:re.type,dims:Q});case"gpu-buffer":return new w.Tensor({location:"gpu-buffer",gpuBuffer:re.gpuBuffer,type:re.type,dims:Q});case"ml-tensor":return new w.Tensor({location:"ml-tensor",mlTensor:re.mlTensor,type:re.type,dims:Q});default:throw new Error(`tensorReshape: tensor location ${re.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(Oe,R,c)=>{c.r(R),c.d(R,{Tensor:()=>D});var w=c("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const D=w.Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(Oe,R,c)=>{c.r(R),c.d(R,{TRACE:()=>D,TRACE_FUNC_BEGIN:()=>re,TRACE_FUNC_END:()=>Q});var w=c("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const D=(g,v)=>{(typeof w.env.trace>"u"?!w.env.wasm.trace:!w.env.trace)||console.timeStamp(`${g}::ORT::${v}`)},G=(g,v)=>{var C;const b=((C=new Error().stack)==null?void 0:C.split(/\r\n|\r|\n/g))||[];let y=!1;for(let q=0;q<b.length;q++){if(y&&!b[q].includes("TRACE_FUNC")){let J=`FUNC_${g}::${b[q].trim().split(" ")[1]}`;v&&(J+=`::${v}`),D("CPU",J);return}b[q].includes("TRACE_FUNC")&&(y=!0)}},re=g=>{(typeof w.env.trace>"u"?!w.env.wasm.trace:!w.env.trace)||G("BEGIN",g)},Q=g=>{(typeof w.env.trace>"u"?!w.env.wasm.trace:!w.env.trace)||G("END",g)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(Oe,R,c)=>{c.r(R),c.d(R,{TrainingSession:()=>re});var w=c("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),D=c("./node_modules/onnxruntime-common/dist/esm/tensor.js");const G="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.";class re{constructor(g,v,b){this.handler=g,this.hasOptimizerModel=v,this.hasEvalModel=b}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(g,v){const b=g.evalModel||"",y=g.optimizerModel||"",C=v||{},[q,J]=await(0,w.resolveBackendAndExecutionProviders)(C);if(q.createTrainingSessionHandler){const ie=await q.createTrainingSessionHandler(g.checkpointState,g.trainModel,b,y,J);return new re(ie,!!g.optimizerModel,!!g.evalModel)}else throw new Error(G)}typeNarrowingForRunStep(g,v,b,y,C){const q={};let J={};if(typeof b!="object"||b===null||b instanceof D.Tensor||Array.isArray(b))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let ie=!0;if(typeof y=="object"){if(y===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(y instanceof D.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(y)){if(y.length===0)throw new TypeError("'fetches' cannot be an empty array.");ie=!1;for(const fe of y){if(typeof fe!="string")throw new TypeError("'fetches' must be a string array or an object.");if(v.indexOf(fe)===-1)throw new RangeError(`'fetches' contains invalid output name: ${fe}.`);q[fe]=null}if(typeof C=="object"&&C!==null)J=C;else if(typeof C<"u")throw new TypeError("'options' must be an object.")}else{let fe=!1;const j=Object.getOwnPropertyNames(y);for(const X of v)if(j.indexOf(X)!==-1){const Z=y[X];(Z===null||Z instanceof D.Tensor)&&(fe=!0,ie=!1,q[X]=Z)}if(fe){if(typeof C=="object"&&C!==null)J=C;else if(typeof C<"u")throw new TypeError("'options' must be an object.")}else J=y}}else if(typeof y<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const fe of g)if(typeof b[fe]>"u")throw new Error(`input '${fe}' is missing in 'feeds'.`);if(ie)for(const fe of v)q[fe]=null;return[q,J]}convertHandlerReturnTypeToMapOfTensors(g){const v={};for(const b in g)if(Object.hasOwnProperty.call(g,b)){const y=g[b];y instanceof D.Tensor?v[b]=y:v[b]=new D.Tensor(y.type,y.data,y.dims)}return v}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(g,v,b){const[y,C]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,g,v,b),q=await this.handler.runTrainStep(g,y,C);return this.convertHandlerReturnTypeToMapOfTensors(q)}async runOptimizerStep(g){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(g||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(g,v,b){if(this.hasEvalModel){const[y,C]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,g,v,b),q=await this.handler.runEvalStep(g,y,C);return this.convertHandlerReturnTypeToMapOfTensors(q)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(g=!0){return this.handler.getParametersSize(g)}async loadParametersBuffer(g,v=!0){const b=await this.getParametersSize(v);if(g.length!==4*b)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(g,v)}async getContiguousParameters(g=!0){return this.handler.getContiguousParameters(g)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(Oe,R,c)=>{c.r(R),c.d(R,{TrainingSession:()=>D});var w=c("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js");const D=w.TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(Oe,R,c)=>{c.r(R),c.d(R,{version:()=>w});const w="1.20.1"},"./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs":(Oe,R,c)=>{c.r(R),c.d(R,{InferenceSession:()=>ht,TRACE:()=>et,TRACE_FUNC_BEGIN:()=>qe,TRACE_FUNC_END:()=>ze,Tensor:()=>we,TrainingSession:()=>ut,default:()=>sf,env:()=>E,registerBackend:()=>J});/*!
 * ONNX Runtime Web v1.20.1
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var w=Object.defineProperty,D=Object.getOwnPropertyDescriptor,G=Object.getOwnPropertyNames,re=Object.prototype.hasOwnProperty,Q=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),g=(e,t)=>()=>(e&&(t=e(e=0)),t),v=(e,t)=>{for(var r in t)w(e,r,{get:t[r],enumerable:!0})},b=(e,t,r,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of G(t))!re.call(e,n)&&n!==r&&w(e,n,{get:()=>t[n],enumerable:!(s=D(t,n))||s.enumerable});return e},y=e=>b(w({},"__esModule",{value:!0}),e),C,q,J,ie,fe,j=g(()=>{C=new Map,q=[],J=(e,t,r)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let s=C.get(e);if(s===void 0)C.set(e,{backend:t,priority:r});else{if(s.priority>r)return;if(s.priority===r&&s.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${r}`)}if(r>=0){let n=q.indexOf(e);n!==-1&&q.splice(n,1);for(let i=0;i<q.length;i++)if(C.get(q[i]).priority<=r){q.splice(i,0,e);return}q.push(e)}return}throw new TypeError("not a valid backend")},ie=async e=>{let t=C.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(s){return r||(t.error=`${s}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},fe=async e=>{let t=e.executionProviders||[],r=t.map(p=>typeof p=="string"?p:p.name),s=r.length===0?q:r,n,i=[],o=new Set;for(let p of s){let h=await ie(p);typeof h=="string"?i.push({name:p,err:h}):(n||(n=h),n===h&&o.add(p))}if(!n)throw new Error(`no available backend found. ERR: ${i.map(p=>`[${p.name}] ${p.err}`).join(", ")}`);for(let{name:p,err:h}of i)r.includes(p)&&console.warn(`removing requested execution provider "${p}" from session options because it is not available: ${h}`);let d=t.filter(p=>o.has(typeof p=="string"?p:p.name));return[n,new Proxy(e,{get:(p,h)=>h==="executionProviders"?d:Reflect.get(p,h)})]}}),X=g(()=>{j()}),Z,N=g(()=>{Z="1.20.1"}),I,_,k=g(()=>{N(),I="warning",_={wasm:{},webgl:{},webgpu:{},versions:{common:Z},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);I=e}},get logLevel(){return I}},Object.defineProperty(_,"logLevel",{enumerable:!0})}),E,ee=g(()=>{k(),E=_}),Y,de,me=g(()=>{Y=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=e.dims[3],r.height=e.dims[2];let s=r.getContext("2d");if(s!=null){let n,i;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout==="NHWC"?(n=e.dims[2],i=e.dims[3]):(n=e.dims[3],i=e.dims[2]);let o=(t==null?void 0:t.format)!==void 0?t.format:"RGB",d=t==null?void 0:t.norm,p,h;d===void 0||d.mean===void 0?p=[255,255,255,255]:typeof d.mean=="number"?p=[d.mean,d.mean,d.mean,d.mean]:(p=[d.mean[0],d.mean[1],d.mean[2],0],d.mean[3]!==void 0&&(p[3]=d.mean[3])),d===void 0||d.bias===void 0?h=[0,0,0,0]:typeof d.bias=="number"?h=[d.bias,d.bias,d.bias,d.bias]:(h=[d.bias[0],d.bias[1],d.bias[2],0],d.bias[3]!==void 0&&(h[3]=d.bias[3]));let P=i*n,x=0,l=P,O=P*2,z=-1;o==="RGBA"?(x=0,l=P,O=P*2,z=P*3):o==="RGB"?(x=0,l=P,O=P*2):o==="RBG"&&(x=0,O=P,l=P*2);for(let B=0;B<i;B++)for(let te=0;te<n;te++){let se=(e.data[x++]-h[0])*p[0],H=(e.data[l++]-h[1])*p[1],pe=(e.data[O++]-h[2])*p[2],ae=z===-1?255:(e.data[z++]-h[3])*p[3];s.fillStyle="rgba("+se+","+H+","+pe+","+ae+")",s.fillRect(te,B,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},de=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),s;if(r!=null){let n,i,o;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout==="NHWC"?(n=e.dims[2],i=e.dims[1],o=e.dims[3]):(n=e.dims[3],i=e.dims[2],o=e.dims[1]);let d=t!==void 0&&t.format!==void 0?t.format:"RGB",p=t==null?void 0:t.norm,h,P;p===void 0||p.mean===void 0?h=[255,255,255,255]:typeof p.mean=="number"?h=[p.mean,p.mean,p.mean,p.mean]:(h=[p.mean[0],p.mean[1],p.mean[2],255],p.mean[3]!==void 0&&(h[3]=p.mean[3])),p===void 0||p.bias===void 0?P=[0,0,0,0]:typeof p.bias=="number"?P=[p.bias,p.bias,p.bias,p.bias]:(P=[p.bias[0],p.bias[1],p.bias[2],0],p.bias[3]!==void 0&&(P[3]=p.bias[3]));let x=i*n;if(t!==void 0&&(t.format!==void 0&&o===4&&t.format!=="RGBA"||o===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let l=4,O=0,z=1,B=2,te=3,se=0,H=x,pe=x*2,ae=-1;d==="RGBA"?(se=0,H=x,pe=x*2,ae=x*3):d==="RGB"?(se=0,H=x,pe=x*2):d==="RBG"&&(se=0,pe=x,H=x*2),s=r.createImageData(n,i);for(let ge=0;ge<i*n;O+=l,z+=l,B+=l,te+=l,ge++)s.data[O]=(e.data[se++]-P[0])*h[0],s.data[z]=(e.data[H++]-P[1])*h[1],s.data[B]=(e.data[pe++]-P[2])*h[2],s.data[te]=ae===-1?255:(e.data[ae++]-P[3])*h[3]}else throw new Error("Can not access image data");return s}}),ye,Ce,Ee,Le,_e,U,ce=g(()=>{je(),ye=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:s}=t,n=t.norm??{mean:255,bias:0},i,o;typeof n.mean=="number"?i=[n.mean,n.mean,n.mean,n.mean]:i=[n.mean[0],n.mean[1],n.mean[2],n.mean[3]??255],typeof n.bias=="number"?o=[n.bias,n.bias,n.bias,n.bias]:o=[n.bias[0],n.bias[1],n.bias[2],n.bias[3]??0];let d=t.format!==void 0?t.format:"RGBA",p=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",h=r*s,P=p==="RGBA"?new Float32Array(h*4):new Float32Array(h*3),x=4,l=0,O=1,z=2,B=3,te=0,se=h,H=h*2,pe=-1;d==="RGB"&&(x=3,l=0,O=1,z=2,B=-1),p==="RGBA"?pe=h*3:p==="RBG"?(te=0,H=h,se=h*2):p==="BGR"&&(H=0,se=h,te=h*2);for(let ae=0;ae<h;ae++,l+=x,z+=x,O+=x,B+=x)P[te++]=(e[l]+o[0])/i[0],P[se++]=(e[O]+o[1])/i[1],P[H++]=(e[z]+o[2])/i[2],pe!==-1&&B!==-1&&(P[pe++]=(e[B]+o[3])/i[3]);return p==="RGBA"?new He("float32",P,[1,4,r,s]):new He("float32",P,[1,3,r,s])},Ce=async(e,t)=>{let r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,n=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,i=typeof e=="string",o,d=t??{},p=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},h=P=>typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||P instanceof OffscreenCanvas?P.getContext("2d"):null;if(r){let P=p();P.width=e.width,P.height=e.height;let x=h(P);if(x!=null){let l=e.height,O=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(l=t.resizedHeight,O=t.resizedWidth),t!==void 0){if(d=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");d.tensorFormat="RGBA",d.height=l,d.width=O}else d.tensorFormat="RGBA",d.height=l,d.width=O;x.drawImage(e,0,0),o=x.getImageData(0,0,O,l).data}else throw new Error("Can not access image data")}else if(s){let P,x;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(P=t.resizedHeight,x=t.resizedWidth):(P=e.height,x=e.width),t!==void 0&&(d=t),d.format="RGBA",d.height=P,d.width=x,t!==void 0){let l=p();l.width=x,l.height=P;let O=h(l);if(O!=null)O.putImageData(e,0,0),o=O.getImageData(0,0,x,P).data;else throw new Error("Can not access image data")}else o=e.data}else if(n){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let P=p();P.width=e.width,P.height=e.height;let x=h(P);if(x!=null){let l=e.height,O=e.width;return x.drawImage(e,0,0,O,l),o=x.getImageData(0,0,O,l).data,d.height=l,d.width=O,ye(o,d)}else throw new Error("Can not access image data")}else{if(i)return new Promise((P,x)=>{let l=p(),O=h(l);if(!e||!O)return x();let z=new Image;z.crossOrigin="Anonymous",z.src=e,z.onload=()=>{l.width=z.width,l.height=z.height,O.drawImage(z,0,0,l.width,l.height);let B=O.getImageData(0,0,l.width,l.height);d.height=l.height,d.width=l.width,P(ye(B.data,d))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return ye(o,d);throw new Error("Input data provided is not supported - aborted tensor creation")},Ee=(e,t)=>{let{width:r,height:s,download:n,dispose:i}=t,o=[1,s,r,4];return new He({location:"texture",type:"float32",texture:e,dims:o,download:n,dispose:i})},Le=(e,t)=>{let{dataType:r,dims:s,download:n,dispose:i}=t;return new He({location:"gpu-buffer",type:r??"float32",gpuBuffer:e,dims:s,download:n,dispose:i})},_e=(e,t)=>{let{dataType:r,dims:s,download:n,dispose:i}=t;return new He({location:"ml-tensor",type:r??"float32",mlTensor:e,dims:s,download:n,dispose:i})},U=(e,t,r)=>new He({location:"cpu-pinned",type:e,data:t,dims:r??[t.length]})}),he,ke,Re,Ke,Ye=g(()=>{he=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),ke=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Re=!1,Ke=()=>{if(!Re){Re=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;e&&(he.set("int64",BigInt64Array),ke.set(BigInt64Array,"int64")),t&&(he.set("uint64",BigUint64Array),ke.set(BigUint64Array,"uint64")),r?(he.set("float16",Float16Array),ke.set(Float16Array,"float16")):he.set("float16",Uint16Array)}}}),at,We,le=g(()=>{je(),at=e=>{let t=1;for(let r=0;r<e.length;r++){let s=e[r];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${r}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${s}`);t*=s}return t},We=(e,t)=>{switch(e.location){case"cpu":return new He(e.type,e.data,t);case"cpu-pinned":return new He({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new He({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new He({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new He({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),He,je=g(()=>{me(),ce(),Ye(),le(),He=class{constructor(e,t,r){Ke();let s,n;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,s=e.type,n=e.dims,e.location){case"cpu-pinned":{let o=he.get(s);if(!o)throw new TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(e.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=e.data;break}case"texture":{if(s!=="float32")throw new TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint64"&&s!=="int8"&&s!=="uint8"&&s!=="bool")throw new TypeError(`unsupported type "${s}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,d;if(typeof e=="string")if(s=e,d=r,e==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");o=t}else{let p=he.get(e);if(p===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if(e==="float16"&&p===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${p.name} as data.`);e==="uint64"||e==="int64"?o=p.from(t,BigInt):o=p.from(t)}else if(t instanceof p)o=t;else if(t instanceof Uint8ClampedArray)if(e==="uint8")o=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${s} tensor's data must be type of ${p}`)}else if(d=t,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let p=typeof e[0];if(p==="string")s="string",o=e;else if(p==="boolean")s="bool",o=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${p}.`)}else if(e instanceof Uint8ClampedArray)s="uint8",o=Uint8Array.from(e);else{let p=ke.get(e.constructor);if(p===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);s=p,o=e}if(d===void 0)d=[o.length];else if(!Array.isArray(d))throw new TypeError("A tensor's dims must be a number array");n=d,this.cpuData=o,this.dataLocation="cpu"}let i=at(n);if(this.cpuData&&i!==this.cpuData.length&&!((s==="uint4"||s==="int4")&&Math.ceil(i/2)===this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=n,this.size=i}static async fromImage(e,t){return Ce(e,t)}static fromTexture(e,t){return Ee(e,t)}static fromGpuBuffer(e,t){return Le(e,t)}static fromMLTensor(e,t){return _e(e,t)}static fromPinnedBuffer(e,t,r){return U(e,t,r)}toDataURL(e){return Y(this,e)}toImageData(e){return de(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return We(this,e)}}}),we,$e=g(()=>{je(),we=He}),et,Qe,qe,ze,nt=g(()=>{k(),et=(e,t)=>{(typeof _.trace>"u"?!_.wasm.trace:!_.trace)||console.timeStamp(`${e}::ORT::${t}`)},Qe=(e,t)=>{var n;let r=((n=new Error().stack)==null?void 0:n.split(/\r\n|\r|\n/g))||[],s=!1;for(let i=0;i<r.length;i++){if(s&&!r[i].includes("TRACE_FUNC")){let o=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(o+=`::${t}`),et("CPU",o);return}r[i].includes("TRACE_FUNC")&&(s=!0)}},qe=e=>{(typeof _.trace>"u"?!_.wasm.trace:!_.trace)||Qe("BEGIN",e)},ze=e=>{(typeof _.trace>"u"?!_.wasm.trace:!_.trace)||Qe("END",e)}}),dt,gt=g(()=>{j(),$e(),nt(),dt=class Um{constructor(t){this.handler=t}async run(t,r,s){qe();let n={},i={};if(typeof t!="object"||t===null||t instanceof we||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof we)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let h of r){if(typeof h!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(h)===-1)throw new RangeError(`'fetches' contains invalid output name: ${h}.`);n[h]=null}if(typeof s=="object"&&s!==null)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let h=!1,P=Object.getOwnPropertyNames(r);for(let x of this.outputNames)if(P.indexOf(x)!==-1){let l=r[x];(l===null||l instanceof we)&&(h=!0,o=!1,n[x]=l)}if(h){if(typeof s=="object"&&s!==null)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else i=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let h of this.inputNames)if(typeof t[h]>"u")throw new Error(`input '${h}' is missing in 'feeds'.`);if(o)for(let h of this.outputNames)n[h]=null;let d=await this.handler.run(t,n,i),p={};for(let h in d)if(Object.hasOwnProperty.call(d,h)){let P=d[h];P instanceof we?p[h]=P:p[h]=new we(P.type,P.data,P.dims)}return ze(),p}async release(){return this.handler.dispose()}static async create(t,r,s,n){qe();let i,o={};if(typeof t=="string"){if(i=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(i=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let P=t,x=0,l=t.byteLength;if(typeof r=="object"&&r!==null)o=r;else if(typeof r=="number"){if(x=r,!Number.isSafeInteger(x))throw new RangeError("'byteOffset' must be an integer.");if(x<0||x>=P.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${P.byteLength}).`);if(l=t.byteLength-x,typeof s=="number"){if(l=s,!Number.isSafeInteger(l))throw new RangeError("'byteLength' must be an integer.");if(l<=0||x+l>P.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${P.byteLength-x}].`);if(typeof n=="object"&&n!==null)o=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(P,x,l)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[d,p]=await fe(o),h=await d.createInferenceSessionHandler(i,p);return ze(),new Um(h)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),ht,_t=g(()=>{gt(),ht=dt}),A=g(()=>{}),ne=g(()=>{}),V=g(()=>{}),ue=g(()=>{}),Ae,Je,ot=g(()=>{j(),$e(),Ae="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Je=class Vm{constructor(t,r,s){this.handler=t,this.hasOptimizerModel=r,this.hasEvalModel=s}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,r){let s=t.evalModel||"",n=t.optimizerModel||"",i=r||{},[o,d]=await fe(i);if(o.createTrainingSessionHandler){let p=await o.createTrainingSessionHandler(t.checkpointState,t.trainModel,s,n,d);return new Vm(p,!!t.optimizerModel,!!t.evalModel)}else throw new Error(Ae)}typeNarrowingForRunStep(t,r,s,n,i){let o={},d={};if(typeof s!="object"||s===null||s instanceof we||Array.isArray(s))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let p=!0;if(typeof n=="object"){if(n===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(n instanceof we)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(n)){if(n.length===0)throw new TypeError("'fetches' cannot be an empty array.");p=!1;for(let h of n){if(typeof h!="string")throw new TypeError("'fetches' must be a string array or an object.");if(r.indexOf(h)===-1)throw new RangeError(`'fetches' contains invalid output name: ${h}.`);o[h]=null}if(typeof i=="object"&&i!==null)d=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else{let h=!1,P=Object.getOwnPropertyNames(n);for(let x of r)if(P.indexOf(x)!==-1){let l=n[x];(l===null||l instanceof we)&&(h=!0,p=!1,o[x]=l)}if(h){if(typeof i=="object"&&i!==null)d=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else d=n}}else if(typeof n<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let h of t)if(typeof s[h]>"u")throw new Error(`input '${h}' is missing in 'feeds'.`);if(p)for(let h of r)o[h]=null;return[o,d]}convertHandlerReturnTypeToMapOfTensors(t){let r={};for(let s in t)if(Object.hasOwnProperty.call(t,s)){let n=t[s];n instanceof we?r[s]=n:r[s]=new we(n.type,n.data,n.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(t,r,s){let[n,i]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,t,r,s),o=await this.handler.runTrainStep(t,n,i);return this.convertHandlerReturnTypeToMapOfTensors(o)}async runOptimizerStep(t){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(t||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(t,r,s){if(this.hasEvalModel){let[n,i]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,t,r,s),o=await this.handler.runEvalStep(t,n,i);return this.convertHandlerReturnTypeToMapOfTensors(o)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(t=!0){return this.handler.getParametersSize(t)}async loadParametersBuffer(t,r=!0){let s=await this.getParametersSize(r);if(t.length!==4*s)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(t,r)}async getContiguousParameters(t=!0){return this.handler.getContiguousParameters(t)}async release(){return this.handler.dispose()}}}),ut,At=g(()=>{ot(),ut=Je}),xt={};v(xt,{InferenceSession:()=>ht,TRACE:()=>et,TRACE_FUNC_BEGIN:()=>qe,TRACE_FUNC_END:()=>ze,Tensor:()=>we,TrainingSession:()=>ut,env:()=>E,registerBackend:()=>J});var Et=g(()=>{X(),ee(),_t(),$e(),A(),ne(),nt(),V(),ue(),At()}),Ct=g(()=>{}),ar={};v(ar,{default:()=>Fr});var Mr,Nr,Fr,as=g(()=>{var e;dh(),ts(),zs(),Mr="ort-wasm-proxy-worker",Nr=((e=globalThis.self)==null?void 0:e.name)===Mr,Nr&&(self.onmessage=t=>{let{type:r,in:s}=t.data;try{switch(r){case"init-wasm":Bs(s.wasm).then(()=>{mc(s).then(()=>{postMessage({type:r})},n=>{postMessage({type:r,err:n})})},n=>{postMessage({type:r,err:n})});break;case"init-ep":{let{epName:n,env:i}=s;an(i,n).then(()=>{postMessage({type:r})},o=>{postMessage({type:r,err:o})});break}case"copy-from":{let{buffer:n}=s,i=ip(n);postMessage({type:r,out:i});break}case"create":{let{model:n,options:i}=s;$p(n,i).then(o=>{postMessage({type:r,out:o})},o=>{postMessage({type:r,err:o})});break}case"release":Sp(s),postMessage({type:r});break;case"run":{let{sessionId:n,inputIndices:i,inputs:o,outputIndices:d,options:p}=s;Ap(n,i,o,d,new Array(d.length).fill(null),p).then(h=>{h.some(P=>P[3]!=="cpu")?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:h},Fp([...o,...h]))},h=>{postMessage({type:r,err:h})});break}case"end-profiling":Ip(s),postMessage({type:r});break;default:}}catch(n){postMessage({type:r,err:n})}}),Fr=Nr?null:t=>new Worker(t??Ts,{type:"module",name:Mr})}),qs={};v(qs,{default:()=>vn});var Qs,Ds,vn,Dt=g(()=>{var e;Ds=(Qs=self.location.href,async function(t={}){function r(){return nr.buffer!=Nt.buffer&&is(),Nt}function s(){return nr.buffer!=Nt.buffer&&is(),hr}function n(){return nr.buffer!=Nt.buffer&&is(),Ve}function i(){return nr.buffer!=Nt.buffer&&is(),ct}function o(){return nr.buffer!=Nt.buffer&&is(),Vt}function d(){return nr.buffer!=Nt.buffer&&is(),xr}function p(){return nr.buffer!=Nt.buffer&&is(),Hr}function h(){return nr.buffer!=Nt.buffer&&is(),up}var P,x,l=Object.assign({},t),O=new Promise((a,m)=>{P=a,x=m}),z=typeof window=="object",B=typeof importScripts=="function",te=B&&self.name=="em-pthread";l.mountExternalData=(a,m)=>{a.startsWith("./")&&(a=a.substring(2)),(l.Fb||(l.Fb=new Map)).set(a,m)},l.unmountExternalData=()=>{delete l.Fb};var se=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let H=()=>{let a=($,F,W)=>(...be)=>{let Ge=yn,st=F==null?void 0:F();be=$(...be);let yt=F==null?void 0:F();return st!==yt&&($=yt,W(st),F=W=null),yn!=Ge?new Promise((Pt,Rt)=>{Zp={resolve:Pt,reject:Rt}}):be},m=$=>async(...F)=>{var W;try{if(l.Eb)throw Error("Session already started");let be=l.Eb={fc:F[0],errors:[]},Ge=await $(...F);if(l.Eb!==be)throw Error("Session mismatch");(W=l.Gb)==null||W.flush();let st=be.errors;if(0<st.length){let yt=await Promise.all(st);if(yt=yt.filter(Pt=>Pt),0<yt.length)throw Error(yt.join(`
`))}return Ge}finally{l.Eb=null}};l._OrtCreateSession=a(l._OrtCreateSession,()=>l._OrtCreateSession,$=>l._OrtCreateSession=$),l._OrtRun=m(a(l._OrtRun,()=>l._OrtRun,$=>l._OrtRun=$)),l._OrtRunWithBinding=m(a(l._OrtRunWithBinding,()=>l._OrtRunWithBinding,$=>l._OrtRunWithBinding=$)),l._OrtBindInput=a(l._OrtBindInput,()=>l._OrtBindInput,$=>l._OrtBindInput=$),H=void 0};l.jsepInit=(a,m)=>{if(H==null||H(),a==="webgpu"){[l.Gb,l.Ub,l.Yb,l.Nb,l.Xb,l.jb,l.Zb,l.bc,l.Vb,l.Wb,l.$b]=m;let $=l.Gb;l.jsepRegisterBuffer=(F,W,be,Ge)=>$.registerBuffer(F,W,be,Ge),l.jsepGetBuffer=F=>$.getBuffer(F),l.jsepCreateDownloader=(F,W,be)=>$.createDownloader(F,W,be),l.jsepOnReleaseSession=F=>{$.onReleaseSession(F)},l.jsepOnRunStart=F=>$.onRunStart(F),l.cc=(F,W)=>{$.upload(F,W)}}else if(a==="webnn"){[l.Gb,l.ac,l.Ob,l.jsepEnsureTensor,l.dc,l.jsepDownloadTensor]=m,l.jsepReleaseTensorId=l.Ob;let $=l.Gb;l.jsepOnRunStart=F=>$.onRunStart(F),l.jsepRegisterMLContext=(F,W)=>{$.registerMLContext(F,W)},l.jsepOnReleaseSession=F=>{$.onReleaseSession(F)},l.jsepCreateMLTensorDownloader=(F,W)=>$.createMLTensorDownloader(F,W),l.jsepRegisterMLTensor=(F,W,be)=>$.registerMLTensor(F,W,be)}};var pe,ae,ge=Object.assign({},l),Ne="./this.program",Fe=(a,m)=>{throw m},rt="";(z||B)&&(B?rt=self.location.href:typeof document<"u"&&document.currentScript&&(rt=document.currentScript.src),Qs&&(rt=Qs),rt=rt.startsWith("blob:")?"":rt.substr(0,rt.replace(/[?#].*/,"").lastIndexOf("/")+1),B&&(ae=a=>{var m=new XMLHttpRequest;return m.open("GET",a,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),pe=(a,m,$)=>{var F=new XMLHttpRequest;F.open("GET",a,!0),F.responseType="arraybuffer",F.onload=()=>{F.status==200||F.status==0&&F.response?m(F.response):$()},F.onerror=$,F.send(null)});var vt,$t=console.log.bind(console),Yt=console.error.bind(console),rr=$t,zt=Yt;if(Object.assign(l,ge),ge=null,te){let a=function(m){try{var $=m.data,F=$.cmd;if(F==="load"){let W=[];self.onmessage=be=>W.push(be),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let be of W)a(be);self.onmessage=a};for(let be of $.handlers)l[be]&&!l[be].proxy||(l[be]=(...Ge)=>{postMessage({Mb:"callHandler",oc:be,args:Ge})},be=="print"&&(rr=l[be]),be=="printErr"&&(zt=l[be]));nr=$.wasmMemory,is(),Tr($.wasmModule)}else if(F==="run"){sh($.pthread_ptr,0,0,1,0,0),Xp($.pthread_ptr),af(),Fh(),Ir||(km(),Ir=!0);try{lf($.start_routine,$.arg)}catch(W){if(W!="unwind")throw W}}else F==="cancel"?Ia()&&bp(-1):$.target!=="setimmediate"&&(F==="checkMailbox"?Ir&&pp():F&&(zt(`worker: received unknown command ${F}`),zt($)))}catch(W){throw Am(),W}};var Tr,Ir=!1;zt=function(...m){m=m.join(" "),console.error(m)},self.alert=function(...m){postMessage({Mb:"alert",text:m.join(" "),qc:Ia()})},l.instantiateWasm=(m,$)=>new Promise(F=>{Tr=W=>{W=new WebAssembly.Instance(W,$h()),$(W),F()}}),self.onunhandledrejection=m=>{throw m.reason||m},self.onmessage=a}l.wasmBinary&&(vt=l.wasmBinary);var nr,Er,Ft,Nt,hr,Ve,ct,Vt,xr,Hr,Qr,ro,up,bs=!1;function is(){var a=nr.buffer;l.HEAP8=Nt=new Int8Array(a),l.HEAP16=Ve=new Int16Array(a),l.HEAPU8=hr=new Uint8Array(a),l.HEAPU16=ct=new Uint16Array(a),l.HEAP32=Vt=new Int32Array(a),l.HEAPU32=xr=new Uint32Array(a),l.HEAPF32=Hr=new Float32Array(a),l.HEAPF64=up=new Float64Array(a),l.HEAP64=Qr=new BigInt64Array(a),l.HEAPU64=ro=new BigUint64Array(a)}if(!te){if(!((nr=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof se))throw zt("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");is()}var Go=[],es=[],ds=[],Gs=0,so=null;function dp(){if(--Gs==0&&so){var a=so;so=null,a()}}function Sa(a){throw zt(a="Aborted("+a+")"),bs=!0,Ft=1,a=new WebAssembly.RuntimeError(a+". Build with -sASSERTIONS for more info."),x(a),a}var Bp,xh=a=>a.startsWith("data:application/octet-stream;base64,"),Eh=a=>a.startsWith("file://");function Ph(a){if(a==Bp&&vt)return new Uint8Array(vt);if(ae)return ae(a);throw"both async and sync fetching of the wasm failed"}function Ch(a,m,$){return function(F){if(!vt&&(z||B)){if(typeof fetch=="function"&&!Eh(F))return fetch(F,{credentials:"same-origin"}).then(W=>{if(!W.ok)throw`failed to load wasm binary file at '${F}'`;return W.arrayBuffer()}).catch(()=>Ph(F));if(pe)return new Promise((W,be)=>{pe(F,Ge=>W(new Uint8Array(Ge)),be)})}return Promise.resolve().then(()=>Ph(F))}(a).then(F=>WebAssembly.instantiate(F,m)).then($,F=>{zt(`failed to asynchronously prepare wasm: ${F}`),Sa(F)})}function $h(){return{a:{O:of,Aa:nf,b:df,aa:zh,B:jh,qa:Nh,Y:Vh,_:Wh,ra:Gh,oa:Kh,ha:Hh,na:qh,L:Qh,Z:Xh,W:Yh,pa:Jh,X:Zh,wa:cf,F:pf,Q:hf,P:ff,E:gf,u:wf,q:yf,G:Mf,A:Cf,R:$f,ua:Sf,ka:kf,U:Af,ba:If,H:Ff,ja:Xp,ta:Of,t:Df,x:Bf,o:Rf,l:Nf,c:qp,n:Uf,j:Gf,w:Kf,p:Hf,g:qf,s:Qf,m:Xf,e:Yf,k:Jf,i:Zf,h:e_,d:t_,ea:r_,fa:s_,ga:n_,ca:hm,da:mm,T:o_,f:i_,D:a_,I:l_,M:u_,y:d_,sa:c_,V:p_,v:_m,z:h_,N:m_,S:f_,za:__,ya:g_,la:ym,ma:Mm,$:Vp,C:bm,K:vm,ia:Tm,J:xm,a:nr,xa:Up,va:Cm,r:M_}}}var Rp={868340:(a,m,$,F,W)=>{if(l===void 0||!l.Fb)return 1;if((a=ls(a>>>0)).startsWith("./")&&(a=a.substring(2)),!(a=l.Fb.get(a)))return 2;if(F>>>=0,(m>>>=0)+($>>>=0)>a.byteLength)return 3;try{let be=a.subarray(m,m+$);switch(W){case 0:s().set(be,F>>>0);break;case 1:l.cc(F,be);break;default:return 4}return 0}catch{return 4}},869023:(a,m,$)=>{l.dc(a,s().subarray(m>>>0,m+$>>>0))},869086:()=>l.ac(),869127:a=>{l.Ob(a)},869163:()=>{l.Vb()},869194:()=>{l.Wb()},869223:()=>{l.$b()},869248:a=>l.Ub(a),869281:a=>l.Yb(a),869313:(a,m,$)=>{l.Nb(a,m,$,!0)},869352:(a,m,$)=>{l.Nb(a,m,$)},869385:()=>typeof wasmOffsetConverter<"u",869442:a=>{l.jb("Abs",a,void 0)},869493:a=>{l.jb("Neg",a,void 0)},869544:a=>{l.jb("Floor",a,void 0)},869597:a=>{l.jb("Ceil",a,void 0)},869649:a=>{l.jb("Reciprocal",a,void 0)},869707:a=>{l.jb("Sqrt",a,void 0)},869759:a=>{l.jb("Exp",a,void 0)},869810:a=>{l.jb("Erf",a,void 0)},869861:a=>{l.jb("Sigmoid",a,void 0)},869916:(a,m,$)=>{l.jb("HardSigmoid",a,{alpha:m,beta:$})},869995:a=>{l.jb("Log",a,void 0)},870046:a=>{l.jb("Sin",a,void 0)},870097:a=>{l.jb("Cos",a,void 0)},870148:a=>{l.jb("Tan",a,void 0)},870199:a=>{l.jb("Asin",a,void 0)},870251:a=>{l.jb("Acos",a,void 0)},870303:a=>{l.jb("Atan",a,void 0)},870355:a=>{l.jb("Sinh",a,void 0)},870407:a=>{l.jb("Cosh",a,void 0)},870459:a=>{l.jb("Asinh",a,void 0)},870512:a=>{l.jb("Acosh",a,void 0)},870565:a=>{l.jb("Atanh",a,void 0)},870618:a=>{l.jb("Tanh",a,void 0)},870670:a=>{l.jb("Not",a,void 0)},870721:(a,m,$)=>{l.jb("Clip",a,{min:m,max:$})},870790:a=>{l.jb("Clip",a,void 0)},870842:(a,m)=>{l.jb("Elu",a,{alpha:m})},870900:a=>{l.jb("Gelu",a,void 0)},870952:a=>{l.jb("Relu",a,void 0)},871004:(a,m)=>{l.jb("LeakyRelu",a,{alpha:m})},871068:(a,m)=>{l.jb("ThresholdedRelu",a,{alpha:m})},871138:(a,m)=>{l.jb("Cast",a,{to:m})},871196:a=>{l.jb("Add",a,void 0)},871247:a=>{l.jb("Sub",a,void 0)},871298:a=>{l.jb("Mul",a,void 0)},871349:a=>{l.jb("Div",a,void 0)},871400:a=>{l.jb("Pow",a,void 0)},871451:a=>{l.jb("Equal",a,void 0)},871504:a=>{l.jb("Greater",a,void 0)},871559:a=>{l.jb("GreaterOrEqual",a,void 0)},871621:a=>{l.jb("Less",a,void 0)},871673:a=>{l.jb("LessOrEqual",a,void 0)},871732:(a,m,$,F,W)=>{l.jb("ReduceMean",a,{keepDims:!!m,noopWithEmptyAxes:!!$,axes:F?Array.from(o().subarray(F>>>0,W>>>0)):[]})},871891:(a,m,$,F,W)=>{l.jb("ReduceMax",a,{keepDims:!!m,noopWithEmptyAxes:!!$,axes:F?Array.from(o().subarray(F>>>0,W>>>0)):[]})},872049:(a,m,$,F,W)=>{l.jb("ReduceMin",a,{keepDims:!!m,noopWithEmptyAxes:!!$,axes:F?Array.from(o().subarray(F>>>0,W>>>0)):[]})},872207:(a,m,$,F,W)=>{l.jb("ReduceProd",a,{keepDims:!!m,noopWithEmptyAxes:!!$,axes:F?Array.from(o().subarray(F>>>0,W>>>0)):[]})},872366:(a,m,$,F,W)=>{l.jb("ReduceSum",a,{keepDims:!!m,noopWithEmptyAxes:!!$,axes:F?Array.from(o().subarray(F>>>0,W>>>0)):[]})},872524:(a,m,$,F,W)=>{l.jb("ReduceL1",a,{keepDims:!!m,noopWithEmptyAxes:!!$,axes:F?Array.from(o().subarray(F>>>0,W>>>0)):[]})},872681:(a,m,$,F,W)=>{l.jb("ReduceL2",a,{keepDims:!!m,noopWithEmptyAxes:!!$,axes:F?Array.from(o().subarray(F>>>0,W>>>0)):[]})},872838:(a,m,$,F,W)=>{l.jb("ReduceLogSum",a,{keepDims:!!m,noopWithEmptyAxes:!!$,axes:F?Array.from(o().subarray(F>>>0,W>>>0)):[]})},872999:(a,m,$,F,W)=>{l.jb("ReduceSumSquare",a,{keepDims:!!m,noopWithEmptyAxes:!!$,axes:F?Array.from(o().subarray(F>>>0,W>>>0)):[]})},873163:(a,m,$,F,W)=>{l.jb("ReduceLogSumExp",a,{keepDims:!!m,noopWithEmptyAxes:!!$,axes:F?Array.from(o().subarray(F>>>0,W>>>0)):[]})},873327:a=>{l.jb("Where",a,void 0)},873380:(a,m,$)=>{l.jb("Transpose",a,{perm:m?Array.from(o().subarray(m>>>0,$>>>0)):[]})},873488:(a,m,$,F)=>{l.jb("DepthToSpace",a,{blocksize:m,mode:ls($),format:F?"NHWC":"NCHW"})},873621:(a,m,$,F)=>{l.jb("DepthToSpace",a,{blocksize:m,mode:ls($),format:F?"NHWC":"NCHW"})},873754:(a,m,$,F,W,be,Ge,st,yt,Pt,Rt,mr,Pr,Be,cr)=>{l.jb("ConvTranspose",a,{format:yt?"NHWC":"NCHW",autoPad:m,dilations:[$],group:F,kernelShape:[W],pads:[be,Ge],strides:[st],wIsConst:()=>!!r()[Pt>>>0],outputPadding:Rt?Array.from(o().subarray(Rt>>>0,mr>>>0)):[],outputShape:Pr?Array.from(o().subarray(Pr>>>0,Be>>>0)):[],activation:ls(cr)})},874155:(a,m,$,F,W,be,Ge,st,yt,Pt,Rt,mr,Pr,Be)=>{l.jb("ConvTranspose",a,{format:st?"NHWC":"NCHW",autoPad:m,dilations:Array.from(o().subarray($>>>0,2+($>>>0)>>>0)),group:F,kernelShape:Array.from(o().subarray(W>>>0,2+(W>>>0)>>>0)),pads:Array.from(o().subarray(be>>>0,4+(be>>>0)>>>0)),strides:Array.from(o().subarray(Ge>>>0,2+(Ge>>>0)>>>0)),wIsConst:()=>!!r()[yt>>>0],outputPadding:Pt?Array.from(o().subarray(Pt>>>0,Rt>>>0)):[],outputShape:mr?Array.from(o().subarray(mr>>>0,Pr>>>0)):[],activation:ls(Be)})},874720:(a,m,$,F,W,be,Ge,st,yt,Pt,Rt,mr,Pr,Be,cr)=>{l.jb("ConvTranspose",a,{format:yt?"NHWC":"NCHW",autoPad:m,dilations:[$],group:F,kernelShape:[W],pads:[be,Ge],strides:[st],wIsConst:()=>!!r()[Pt>>>0],outputPadding:Rt?Array.from(o().subarray(Rt>>>0,mr>>>0)):[],outputShape:Pr?Array.from(o().subarray(Pr>>>0,Be>>>0)):[],activation:ls(cr)})},875121:(a,m,$,F,W,be,Ge,st,yt,Pt,Rt,mr,Pr,Be)=>{l.jb("ConvTranspose",a,{format:st?"NHWC":"NCHW",autoPad:m,dilations:Array.from(o().subarray($>>>0,2+($>>>0)>>>0)),group:F,kernelShape:Array.from(o().subarray(W>>>0,2+(W>>>0)>>>0)),pads:Array.from(o().subarray(be>>>0,4+(be>>>0)>>>0)),strides:Array.from(o().subarray(Ge>>>0,2+(Ge>>>0)>>>0)),wIsConst:()=>!!r()[yt>>>0],outputPadding:Pt?Array.from(o().subarray(Pt>>>0,Rt>>>0)):[],outputShape:mr?Array.from(o().subarray(mr>>>0,Pr>>>0)):[],activation:ls(Be)})},875686:(a,m)=>{l.jb("GlobalAveragePool",a,{format:m?"NHWC":"NCHW"})},875777:(a,m,$,F,W,be,Ge,st,yt,Pt,Rt,mr,Pr,Be)=>{l.jb("AveragePool",a,{format:Be?"NHWC":"NCHW",auto_pad:m,ceil_mode:$,count_include_pad:F,storage_order:W,dilations:be?Array.from(o().subarray(be>>>0,Ge>>>0)):[],kernel_shape:st?Array.from(o().subarray(st>>>0,yt>>>0)):[],pads:Pt?Array.from(o().subarray(Pt>>>0,Rt>>>0)):[],strides:mr?Array.from(o().subarray(mr>>>0,Pr>>>0)):[]})},876192:(a,m)=>{l.jb("GlobalAveragePool",a,{format:m?"NHWC":"NCHW"})},876283:(a,m,$,F,W,be,Ge,st,yt,Pt,Rt,mr,Pr,Be)=>{l.jb("AveragePool",a,{format:Be?"NHWC":"NCHW",auto_pad:m,ceil_mode:$,count_include_pad:F,storage_order:W,dilations:be?Array.from(o().subarray(be>>>0,Ge>>>0)):[],kernel_shape:st?Array.from(o().subarray(st>>>0,yt>>>0)):[],pads:Pt?Array.from(o().subarray(Pt>>>0,Rt>>>0)):[],strides:mr?Array.from(o().subarray(mr>>>0,Pr>>>0)):[]})},876698:(a,m)=>{l.jb("GlobalMaxPool",a,{format:m?"NHWC":"NCHW"})},876785:(a,m,$,F,W,be,Ge,st,yt,Pt,Rt,mr,Pr,Be)=>{l.jb("MaxPool",a,{format:Be?"NHWC":"NCHW",auto_pad:m,ceil_mode:$,count_include_pad:F,storage_order:W,dilations:be?Array.from(o().subarray(be>>>0,Ge>>>0)):[],kernel_shape:st?Array.from(o().subarray(st>>>0,yt>>>0)):[],pads:Pt?Array.from(o().subarray(Pt>>>0,Rt>>>0)):[],strides:mr?Array.from(o().subarray(mr>>>0,Pr>>>0)):[]})},877196:(a,m)=>{l.jb("GlobalMaxPool",a,{format:m?"NHWC":"NCHW"})},877283:(a,m,$,F,W,be,Ge,st,yt,Pt,Rt,mr,Pr,Be)=>{l.jb("MaxPool",a,{format:Be?"NHWC":"NCHW",auto_pad:m,ceil_mode:$,count_include_pad:F,storage_order:W,dilations:be?Array.from(o().subarray(be>>>0,Ge>>>0)):[],kernel_shape:st?Array.from(o().subarray(st>>>0,yt>>>0)):[],pads:Pt?Array.from(o().subarray(Pt>>>0,Rt>>>0)):[],strides:mr?Array.from(o().subarray(mr>>>0,Pr>>>0)):[]})},877694:(a,m,$,F,W)=>{l.jb("Gemm",a,{alpha:m,beta:$,transA:F,transB:W})},877798:a=>{l.jb("MatMul",a,void 0)},877852:(a,m,$,F)=>{l.jb("ArgMax",a,{keepDims:!!m,selectLastIndex:!!$,axis:F})},877960:(a,m,$,F)=>{l.jb("ArgMin",a,{keepDims:!!m,selectLastIndex:!!$,axis:F})},878068:(a,m)=>{l.jb("Softmax",a,{axis:m})},878131:(a,m)=>{l.jb("Concat",a,{axis:m})},878191:(a,m,$,F,W)=>{l.jb("Split",a,{axis:m,numOutputs:$,splitSizes:F?Array.from(o().subarray(F>>>0,W>>>0)):[]})},878331:a=>{l.jb("Expand",a,void 0)},878385:(a,m)=>{l.jb("Gather",a,{axis:Number(m)})},878456:(a,m)=>{l.jb("GatherElements",a,{axis:Number(m)})},878535:(a,m,$,F,W,be,Ge,st,yt,Pt,Rt)=>{l.jb("Resize",a,{antialias:m,axes:$?Array.from(o().subarray($>>>0,F>>>0)):[],coordinateTransformMode:ls(W),cubicCoeffA:be,excludeOutside:Ge,extrapolationValue:st,keepAspectRatioPolicy:ls(yt),mode:ls(Pt),nearestMode:ls(Rt)})},878881:(a,m,$,F,W,be,Ge)=>{l.jb("Slice",a,{starts:m?Array.from(o().subarray(m>>>0,$>>>0)):[],ends:F?Array.from(o().subarray(F>>>0,W>>>0)):[],axes:be?Array.from(o().subarray(be>>>0,Ge>>>0)):[]})},879097:a=>{l.jb("Tile",a,void 0)},879149:(a,m,$)=>{l.jb("InstanceNormalization",a,{epsilon:m,format:$?"NHWC":"NCHW"})},879263:(a,m,$)=>{l.jb("InstanceNormalization",a,{epsilon:m,format:$?"NHWC":"NCHW"})},879377:a=>{l.jb("Range",a,void 0)},879430:(a,m)=>{l.jb("Einsum",a,{equation:ls(m)})},879511:(a,m,$,F,W)=>{l.jb("Pad",a,{mode:m,value:$,pads:F?Array.from(o().subarray(F>>>0,W>>>0)):[]})},879638:(a,m,$,F,W,be)=>{l.jb("BatchNormalization",a,{epsilon:m,momentum:$,spatial:!!W,trainingMode:!!F,format:be?"NHWC":"NCHW"})},879807:(a,m,$,F,W,be)=>{l.jb("BatchNormalization",a,{epsilon:m,momentum:$,spatial:!!W,trainingMode:!!F,format:be?"NHWC":"NCHW"})},879976:(a,m,$)=>{l.jb("CumSum",a,{exclusive:Number(m),reverse:Number($)})},880073:(a,m,$)=>{l.jb("DequantizeLinear",a,{axis:m,blockSize:$})},880163:(a,m,$,F,W,be,Ge,st,yt)=>{l.jb("Attention",a,{numHeads:m,isUnidirectional:$,maskFilterValue:F,scale:W,doRotary:be,qkvHiddenSizes:Ge?Array.from(o().subarray(Number(st)>>>0,Number(st)+Ge>>>0)):[],pastPresentShareBuffer:!!yt})},880435:a=>{l.jb("BiasAdd",a,void 0)},880490:a=>{l.jb("BiasSplitGelu",a,void 0)},880551:a=>{l.jb("FastGelu",a,void 0)},880607:(a,m,$,F,W,be,Ge,st,yt,Pt,Rt,mr,Pr,Be,cr,Vr)=>{l.jb("Conv",a,{format:mr?"NHWC":"NCHW",auto_pad:m,dilations:$?Array.from(o().subarray($>>>0,F>>>0)):[],group:W,kernel_shape:be?Array.from(o().subarray(be>>>0,Ge>>>0)):[],pads:st?Array.from(o().subarray(st>>>0,yt>>>0)):[],strides:Pt?Array.from(o().subarray(Pt>>>0,Rt>>>0)):[],w_is_const:()=>!!r()[Pr>>>0],activation:ls(Be),activation_params:cr?Array.from(p().subarray(cr>>>0,Vr>>>0)):[]})},881103:a=>{l.jb("Gelu",a,void 0)},881155:(a,m,$,F)=>{l.jb("GroupQueryAttention",a,{numHeads:m,kvNumHeads:$,scale:F})},881268:(a,m,$,F)=>{l.jb("LayerNormalization",a,{axis:m,epsilon:$,simplified:!!F})},881379:(a,m,$,F)=>{l.jb("LayerNormalization",a,{axis:m,epsilon:$,simplified:!!F})},881490:(a,m,$,F,W,be)=>{l.jb("MatMulNBits",a,{k:m,n:$,accuracyLevel:F,bits:W,blockSize:be})},881617:(a,m,$,F,W,be)=>{l.jb("MultiHeadAttention",a,{numHeads:m,isUnidirectional:$,maskFilterValue:F,scale:W,doRotary:be})},881776:(a,m)=>{l.jb("QuickGelu",a,{alpha:m})},881840:(a,m,$,F,W)=>{l.jb("RotaryEmbedding",a,{interleaved:!!m,numHeads:$,rotaryEmbeddingDim:F,scale:W})},881979:(a,m,$)=>{l.jb("SkipLayerNormalization",a,{epsilon:m,simplified:!!$})},882081:(a,m,$)=>{l.jb("SkipLayerNormalization",a,{epsilon:m,simplified:!!$})},882183:(a,m,$,F)=>{l.jb("GatherBlockQuantized",a,{gatherAxis:m,quantizeAxis:$,blockSize:F})},882304:a=>{l.Zb(a)},882338:(a,m)=>l.bc(a,m,l.Eb.fc,l.Eb.errors)};function nf(a,m,$){return lm(async()=>{await l.Xb(a,m,$)})}function of(){return typeof wasmOffsetConverter<"u"}function jp(a){this.name="ExitStatus",this.message=`Program terminated with exit(${a})`,this.status=a}var Np=a=>{a.terminate(),a.onmessage=()=>{}},Sh=a=>{no.length==0&&(Dh(),Oh(no[0]));var m=no.pop();if(!m)return 6;Ho.push(m),gn[a.Ab]=m,m.Ab=a.Ab;var $={cmd:"run",start_routine:a.hc,arg:a.Qb,pthread_ptr:a.Ab};return m.postMessage($,a.mc),0},Ko=0,jr=(a,m,...$)=>{for(var F=2*$.length,W=ih(),be=oh(8*F),Ge=be>>>3,st=0;st<$.length;st++){var yt=$[st];typeof yt=="bigint"?(Qr[Ge+2*st]=1n,Qr[Ge+2*st+1]=yt):(Qr[Ge+2*st]=0n,h()[Ge+2*st+1>>>0]=yt)}return a=Im(a,0,F,be,m),vp(W),a};function Up(a){if(te)return jr(0,1,a);if(Ft=a,!(0<Ko)){for(var m of Ho)Np(m);for(m of no)Np(m);no=[],Ho=[],gn=[],bs=!0}Fe(a,new jp(a))}function kh(a){if(te)return jr(1,0,a);Vp(a)}var Vp=a=>{if(Ft=a,te)throw kh(a),"unwind";Up(a)},no=[],Ho=[],Ah=[],gn={},Ih=a=>{var m=a.Ab;delete gn[m],no.push(a),Ho.splice(Ho.indexOf(a),1),a.Ab=0,nh(m)};function Fh(){Ah.forEach(a=>a())}var Oh=a=>new Promise(m=>{a.onmessage=W=>{var be=(W=W.data).cmd;if(W.targetThread&&W.targetThread!=Ia()){var Ge=gn[W.targetThread];Ge?Ge.postMessage(W,W.transferList):zt(`Internal error! Worker sent a message "${be}" to target pthread ${W.targetThread}, but that thread no longer exists!`)}else be==="checkMailbox"?pp():be==="spawnThread"?Sh(W):be==="cleanupThread"?Ih(gn[W.thread]):be==="killThread"?(W=W.thread,be=gn[W],delete gn[W],Np(be),nh(W),Ho.splice(Ho.indexOf(be),1),be.Ab=0):be==="cancelThread"?gn[W.thread].postMessage({cmd:"cancel"}):be==="loaded"?(a.loaded=!0,m(a)):be==="alert"?alert(`Thread ${W.threadId}: ${W.text}`):W.target==="setimmediate"?a.postMessage(W):be==="callHandler"?l[W.handler](...W.args):be&&zt(`worker sent an unknown command ${be}`)},a.onerror=W=>{throw zt(`worker sent an error! ${W.filename}:${W.lineno}: ${W.message}`),W};var $,F=[];for($ of[])l.hasOwnProperty($)&&F.push($);a.postMessage({cmd:"load",handlers:F,wasmMemory:nr,wasmModule:Er})});function Dh(){var a=new Worker(new URL(self.location.href),{type:"module",workerData:"em-pthread",name:"em-pthread"});no.push(a)}var cp=a=>{for(;0<a.length;)a.shift()(l)},af=()=>{var a=Ia(),m=d()[a+52>>>2>>>0];a=d()[a+56>>>2>>>0],Om(m,m-a),vp(m)},lf=(a,m)=>{Ko=0,a=Dm(a,m),0<Ko?Ft=a:bp(a)};class uf{constructor(m){this.Jb=m-24}}function df(a,m,$){var F=new uf(a>>>=0);throw m>>>=0,$>>>=0,d()[F.Jb+16>>>2>>>0]=0,d()[F.Jb+4>>>2>>>0]=m,d()[F.Jb+8>>>2>>>0]=$,a}function Lh(a,m,$,F){return te?jr(2,1,a,m,$,F):zh(a,m,$,F)}function zh(a,m,$,F){if(a>>>=0,m>>>=0,$>>>=0,F>>>=0,se===void 0)return zt("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var W=[];return te&&W.length===0?Lh(a,m,$,F):(a={hc:$,Ab:a,Qb:F,mc:W},te?(a.Mb="spawnThread",postMessage(a,W),0):Sh(a))}var Bh=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Rh=(a,m,$)=>{var F=(m>>>=0)+$;for($=m;a[$]&&!($>=F);)++$;if(16<$-m&&a.buffer&&Bh)return Bh.decode(a.buffer instanceof se?a.slice(m,$):a.subarray(m,$));for(F="";m<$;){var W=a[m++];if(128&W){var be=63&a[m++];if((224&W)==192)F+=String.fromCharCode((31&W)<<6|be);else{var Ge=63&a[m++];65536>(W=(240&W)==224?(15&W)<<12|be<<6|Ge:(7&W)<<18|be<<12|Ge<<6|63&a[m++])?F+=String.fromCharCode(W):(W-=65536,F+=String.fromCharCode(55296|W>>10,56320|1023&W))}}else F+=String.fromCharCode(W)}return F},ls=(a,m)=>(a>>>=0)?Rh(s(),a,m):"";function jh(a,m,$){return te?jr(3,1,a,m,$):0}function Nh(a,m){if(te)return jr(4,1,a,m)}var Wp=a=>{for(var m=0,$=0;$<a.length;++$){var F=a.charCodeAt($);127>=F?m++:2047>=F?m+=2:55296<=F&&57343>=F?(m+=4,++$):m+=3}return m},Uh=(a,m,$,F)=>{if(!(0<F))return 0;var W=$>>>=0;F=$+F-1;for(var be=0;be<a.length;++be){var Ge=a.charCodeAt(be);if(55296<=Ge&&57343>=Ge&&(Ge=65536+((1023&Ge)<<10)|1023&a.charCodeAt(++be)),127>=Ge){if($>=F)break;m[$++>>>0]=Ge}else{if(2047>=Ge){if($+1>=F)break;m[$++>>>0]=192|Ge>>6}else{if(65535>=Ge){if($+2>=F)break;m[$++>>>0]=224|Ge>>12}else{if($+3>=F)break;m[$++>>>0]=240|Ge>>18,m[$++>>>0]=128|Ge>>12&63}m[$++>>>0]=128|Ge>>6&63}m[$++>>>0]=128|63&Ge}}return m[$>>>0]=0,$-W},ka=(a,m,$)=>Uh(a,s(),m,$);function Vh(a,m){if(te)return jr(5,1,a,m)}function Wh(a,m,$){if(te)return jr(6,1,a,m,$)}function Gh(a,m,$){return te?jr(7,1,a,m,$):0}function Kh(a,m){if(te)return jr(8,1,a,m)}function Hh(a,m,$){if(te)return jr(9,1,a,m,$)}function qh(a,m,$,F){if(te)return jr(10,1,a,m,$,F)}function Qh(a,m,$,F){if(te)return jr(11,1,a,m,$,F)}function Xh(a,m,$,F){if(te)return jr(12,1,a,m,$,F)}function Yh(a){if(te)return jr(13,1,a)}function Jh(a,m){if(te)return jr(14,1,a,m)}function Zh(a,m,$){if(te)return jr(15,1,a,m,$)}var em,oo,cf=()=>{Sa("")},wn=a=>{for(var m="";s()[a>>>0];)m+=em[s()[a++>>>0]];return m},Gp={},Kp={};function Fn(a,m,$={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(F,W,be={}){var Ge=W.name;if(!F)throw new oo(`type "${Ge}" must have a positive integer typeid pointer`);if(Kp.hasOwnProperty(F)){if(be.Sb)return;throw new oo(`Cannot register type '${Ge}' twice`)}Kp[F]=W,Gp.hasOwnProperty(F)&&(W=Gp[F],delete Gp[F],W.forEach(st=>st()))}(a,m,$)}var tm=(a,m,$)=>{switch(m){case 1:return $?F=>r()[F>>>0]:F=>s()[F>>>0];case 2:return $?F=>n()[F>>>1>>>0]:F=>i()[F>>>1>>>0];case 4:return $?F=>o()[F>>>2>>>0]:F=>d()[F>>>2>>>0];case 8:return $?F=>Qr[F>>>3]:F=>ro[F>>>3];default:throw new TypeError(`invalid integer width (${m}): ${a}`)}};function pf(a,m,$){$>>>=0,Fn(a>>>=0,{name:m=wn(m>>>0),fromWireType:F=>F,toWireType:function(F,W){if(typeof W!="bigint"&&typeof W!="number")throw W=W===null?"null":(F=typeof W)=="object"||F==="array"||F==="function"?W.toString():""+W,new TypeError(`Cannot convert "${W}" to ${this.name}`);return typeof W=="number"&&(W=BigInt(W)),W},argPackAdvance:io,readValueFromPointer:tm(m,$,m.indexOf("u")==-1),Db:null})}var io=8;function hf(a,m,$,F){Fn(a>>>=0,{name:m=wn(m>>>0),fromWireType:function(W){return!!W},toWireType:function(W,be){return be?$:F},argPackAdvance:io,readValueFromPointer:function(W){return this.fromWireType(s()[W>>>0])},Db:null})}var Hp=[],On=[];function qp(a){9<(a>>>=0)&&--On[a+1]==0&&(On[a]=void 0,Hp.push(a))}var Ks=a=>{if(!a)throw new oo("Cannot use deleted val. handle = "+a);return On[a]},Hs=a=>{switch(a){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let m=Hp.pop()||On.length;return On[m]=a,On[m+1]=1,m}};function Qp(a){return this.fromWireType(d()[a>>>2>>>0])}var mf={name:"emscripten::val",fromWireType:a=>{var m=Ks(a);return qp(a),m},toWireType:(a,m)=>Hs(m),argPackAdvance:io,readValueFromPointer:Qp,Db:null};function ff(a){return Fn(a>>>0,mf)}var _f=(a,m)=>{switch(m){case 4:return function($){return this.fromWireType(p()[$>>>2>>>0])};case 8:return function($){return this.fromWireType(h()[$>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${a}`)}};function gf(a,m,$){$>>>=0,Fn(a>>>=0,{name:m=wn(m>>>0),fromWireType:F=>F,toWireType:(F,W)=>W,argPackAdvance:io,readValueFromPointer:_f(m,$),Db:null})}function wf(a,m,$,F,W){if(a>>>=0,$>>>=0,m=wn(m>>>0),W===-1&&(W=4294967295),W=st=>st,F===0){var be=32-8*$;W=st=>st<<be>>>be}var Ge=m.includes("unsigned")?function(st,yt){return yt>>>0}:function(st,yt){return yt};Fn(a,{name:m,fromWireType:W,toWireType:Ge,argPackAdvance:io,readValueFromPointer:tm(m,$,F!==0),Db:null})}function yf(a,m,$){function F(be){var Ge=d()[be>>>2>>>0];return be=d()[be+4>>>2>>>0],new W(r().buffer,be,Ge)}var W=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];Fn(a>>>=0,{name:$=wn($>>>0),fromWireType:F,argPackAdvance:io,readValueFromPointer:F},{Sb:!0})}function Mf(a,m){a>>>=0;var $=(m=wn(m>>>0))==="std::string";Fn(a,{name:m,fromWireType:function(F){var W=d()[F>>>2>>>0],be=F+4;if($)for(var Ge=be,st=0;st<=W;++st){var yt=be+st;if(st==W||s()[yt>>>0]==0){if(Ge=ls(Ge,yt-Ge),Pt===void 0)var Pt=Ge;else Pt+="\0",Pt+=Ge;Ge=yt+1}}else{for(Pt=Array(W),st=0;st<W;++st)Pt[st]=String.fromCharCode(s()[be+st>>>0]);Pt=Pt.join("")}return Mn(F),Pt},toWireType:function(F,W){W instanceof ArrayBuffer&&(W=new Uint8Array(W));var be=typeof W=="string";if(!(be||W instanceof Uint8Array||W instanceof Uint8ClampedArray||W instanceof Int8Array))throw new oo("Cannot pass non-string to std::string");var Ge=$&&be?Wp(W):W.length,st=Mp(4+Ge+1),yt=st+4;if(d()[st>>>2>>>0]=Ge,$&&be)ka(W,yt,Ge+1);else if(be)for(be=0;be<Ge;++be){var Pt=W.charCodeAt(be);if(255<Pt)throw Mn(yt),new oo("String has UTF-16 code units that do not fit in 8 bits");s()[yt+be>>>0]=Pt}else for(be=0;be<Ge;++be)s()[yt+be>>>0]=W[be];return F!==null&&F.push(Mn,st),st},argPackAdvance:io,readValueFromPointer:Qp,Db(F){Mn(F)}})}var rm=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,bf=(a,m)=>{for(var $=a>>1,F=$+m/2;!($>=F)&&i()[$>>>0];)++$;if(32<($<<=1)-a&&rm)return rm.decode(s().slice(a,$));for($="",F=0;!(F>=m/2);++F){var W=n()[a+2*F>>>1>>>0];if(W==0)break;$+=String.fromCharCode(W)}return $},vf=(a,m,$)=>{if($??($=2147483647),2>$)return 0;var F=m;$=($-=2)<2*a.length?$/2:a.length;for(var W=0;W<$;++W){var be=a.charCodeAt(W);n()[m>>>1>>>0]=be,m+=2}return n()[m>>>1>>>0]=0,m-F},Tf=a=>2*a.length,xf=(a,m)=>{for(var $=0,F="";!($>=m/4);){var W=o()[a+4*$>>>2>>>0];if(W==0)break;++$,65536<=W?(W-=65536,F+=String.fromCharCode(55296|W>>10,56320|1023&W)):F+=String.fromCharCode(W)}return F},Ef=(a,m,$)=>{if(m>>>=0,$??($=2147483647),4>$)return 0;var F=m;$=F+$-4;for(var W=0;W<a.length;++W){var be=a.charCodeAt(W);if(55296<=be&&57343>=be&&(be=65536+((1023&be)<<10)|1023&a.charCodeAt(++W)),o()[m>>>2>>>0]=be,(m+=4)+4>$)break}return o()[m>>>2>>>0]=0,m-F},Pf=a=>{for(var m=0,$=0;$<a.length;++$){var F=a.charCodeAt($);55296<=F&&57343>=F&&++$,m+=4}return m};function Cf(a,m,$){if(a>>>=0,m>>>=0,$=wn($>>>=0),m===2)var F=bf,W=vf,be=Tf,Ge=st=>i()[st>>>1>>>0];else m===4&&(F=xf,W=Ef,be=Pf,Ge=st=>d()[st>>>2>>>0]);Fn(a,{name:$,fromWireType:st=>{for(var yt,Pt=d()[st>>>2>>>0],Rt=st+4,mr=0;mr<=Pt;++mr){var Pr=st+4+mr*m;mr!=Pt&&Ge(Pr)!=0||(Rt=F(Rt,Pr-Rt),yt===void 0?yt=Rt:(yt+="\0",yt+=Rt),Rt=Pr+m)}return Mn(st),yt},toWireType:(st,yt)=>{if(typeof yt!="string")throw new oo(`Cannot pass non-string to C++ string type ${$}`);var Pt=be(yt),Rt=Mp(4+Pt+m);return d()[Rt>>>2>>>0]=Pt/m,W(yt,Rt+4,Pt+m),st!==null&&st.push(Mn,Rt),Rt},argPackAdvance:io,readValueFromPointer:Qp,Db(st){Mn(st)}})}function $f(a,m){Fn(a>>>=0,{Tb:!0,name:m=wn(m>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var Sf=()=>1;function kf(a){sh(a>>>0,!B,1,!z,131072,!1),Fh()}var sm=a=>{if(!bs)try{if(a(),!(0<Ko))try{te?bp(Ft):Vp(Ft)}catch(m){m instanceof jp||m=="unwind"||Fe(1,m)}}catch(m){m instanceof jp||m=="unwind"||Fe(1,m)}};function Xp(a){a>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(o(),a>>>2,a).value.then(pp),a+=128,Atomics.store(o(),a>>>2,1))}var pp=()=>{var a=Ia();a&&(Xp(a),sm(Fm))};function Af(a,m){(a>>>=0)==m>>>0?setTimeout(pp):te?postMessage({targetThread:a,cmd:"checkMailbox"}):(a=gn[a])&&a.postMessage({cmd:"checkMailbox"})}var Yp=[];function If(a,m,$,F,W){for(m>>>=0,F/=2,Yp.length=F,$=W>>>0>>>3,W=0;W<F;W++)Yp[W]=Qr[$+2*W]?Qr[$+2*W+1]:h()[$+2*W+1>>>0];return(m?Rp[m]:b_[a])(...Yp)}function Ff(a){a>>>=0,te?postMessage({cmd:"cleanupThread",thread:a}):Ih(gn[a])}function Of(a){}var Jp=(a,m)=>{var $=Kp[a];if($===void 0)throw a=Sm(a),$=wn(a),Mn(a),new oo(`${m} has unknown type ${$}`);return $},nm=(a,m,$)=>{var F=[];return a=a.toWireType(F,$),F.length&&(d()[m>>>2>>>0]=Hs(F)),a};function Df(a,m,$){return m>>>=0,$>>>=0,a=Ks(a>>>0),m=Jp(m,"emval::as"),nm(m,$,a)}var hp=a=>{try{a()}catch(m){Sa(m)}},ao=0,yn=null,om=0,mp=[],im={},am={},Lf=0,Zp=null,zf=[];function lm(a){return function(m){if(!bs){if(ao===0){var $=!1,F=!1;m((W=0)=>{if(!bs&&(om=W,$=!0,F)){ao=2,hp(()=>Bm(yn)),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.resume(),W=!1;try{var be=function(){var yt=o()[yn+8>>>2>>>0];return yt=Bt[am[yt]],--Ko,yt()}()}catch(yt){be=yt,W=!0}var Ge=!1;if(!yn){var st=Zp;st&&(Zp=null,(W?st.reject:st.resolve)(be),Ge=!0)}if(W&&!Ge)throw be}}),F=!0,$||(ao=1,yn=function(){var W=Mp(65548),be=W+12;d()[W>>>2>>>0]=be,d()[W+4>>>2>>>0]=be+65536,be=mp[0];var Ge=im[be];return Ge===void 0&&(Ge=Lf++,im[be]=Ge,am[Ge]=be),be=Ge,o()[W+8>>>2>>>0]=be,W}(),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.pause(),hp(()=>Lm(yn)))}else ao===2?(ao=0,hp(Rm),Mn(yn),yn=null,zf.forEach(sm)):Sa(`invalid state: ${ao}`);return om}}(m=>{a().then(m)})}function Bf(a){return a>>>=0,lm(()=>(a=Ks(a)).then(Hs))}var fp=[];function Rf(a,m,$,F){return $>>>=0,F>>>=0,(a=fp[a>>>0])(null,m=Ks(m>>>0),$,F)}var jf={},_p=a=>{var m=jf[a];return m===void 0?wn(a):m};function Nf(a,m,$,F,W){return $>>>=0,F>>>=0,W>>>=0,(a=fp[a>>>0])(m=Ks(m>>>0),m[$=_p($)],F,W)}var um=()=>typeof globalThis=="object"?globalThis:Function("return this")();function Uf(a){return(a>>>=0)==0?Hs(um()):(a=_p(a),Hs(um()[a]))}var Vf=a=>{var m=fp.length;return fp.push(a),m},Wf=(a,m)=>{for(var $=Array(a),F=0;F<a;++F)$[F]=Jp(d()[m+4*F>>>2>>>0],"parameter "+F);return $},dm=(a,m)=>Object.defineProperty(m,"name",{value:a});function Gf(a,m,$){var F=(m=Wf(a,m>>>0)).shift();a--;var W=`return function (obj, func, destructorsRef, args) {
`,be=0,Ge=[];$===0&&Ge.push("obj");for(var st=["retType"],yt=[F],Pt=0;Pt<a;++Pt)Ge.push("arg"+Pt),st.push("argType"+Pt),yt.push(m[Pt]),W+=`  var arg${Pt} = argType${Pt}.readValueFromPointer(args${be?"+"+be:""});
`,be+=m[Pt].argPackAdvance;return W+=`  var rv = ${$===1?"new func":"func.call"}(${Ge.join(", ")});
`,F.Tb||(st.push("emval_returnValue"),yt.push(nm),W+=`  return emval_returnValue(retType, destructorsRef, rv);
`),st.push(W+`};
`),a=function(Rt){var mr=Function;if(!(mr instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof mr} which is not a function`);var Pr=dm(mr.name||"unknownFunctionName",function(){});return Pr.prototype=mr.prototype,Pr=new Pr,(Rt=mr.apply(Pr,Rt))instanceof Object?Rt:Pr}(st)(...yt),$=`methodCaller<(${m.map(Rt=>Rt.name).join(", ")}) => ${F.name}>`,Vf(dm($,a))}function Kf(a){return a=_p(a>>>0),Hs(l[a])}function Hf(a,m){return m>>>=0,a=Ks(a>>>0),m=Ks(m),Hs(a[m])}function qf(a){9<(a>>>=0)&&(On[a+1]+=1)}function Qf(){return Hs([])}function Xf(a){a=Ks(a>>>0);for(var m=Array(a.length),$=0;$<a.length;$++)m[$]=a[$];return Hs(m)}function Yf(a){return Hs(_p(a>>>0))}function Jf(){return Hs({})}function Zf(a){for(var m=Ks(a>>>=0);m.length;){var $=m.pop();m.pop()($)}qp(a)}function e_(a,m,$){m>>>=0,$>>>=0,a=Ks(a>>>0),m=Ks(m),$=Ks($),a[m]=$}function t_(a,m){return m>>>=0,a=(a=Jp(a>>>0,"_emval_take_value")).readValueFromPointer(m),Hs(a)}function r_(a,m){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),m>>>=0,a=new Date(1e3*a),o()[m>>>2>>>0]=a.getUTCSeconds(),o()[m+4>>>2>>>0]=a.getUTCMinutes(),o()[m+8>>>2>>>0]=a.getUTCHours(),o()[m+12>>>2>>>0]=a.getUTCDate(),o()[m+16>>>2>>>0]=a.getUTCMonth(),o()[m+20>>>2>>>0]=a.getUTCFullYear()-1900,o()[m+24>>>2>>>0]=a.getUTCDay(),a=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[m+28>>>2>>>0]=a}var Aa=a=>a%4==0&&(a%100!=0||a%400==0),cm=[0,31,60,91,121,152,182,213,244,274,305,335],pm=[0,31,59,90,120,151,181,212,243,273,304,334];function s_(a,m){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),m>>>=0,a=new Date(1e3*a),o()[m>>>2>>>0]=a.getSeconds(),o()[m+4>>>2>>>0]=a.getMinutes(),o()[m+8>>>2>>>0]=a.getHours(),o()[m+12>>>2>>>0]=a.getDate(),o()[m+16>>>2>>>0]=a.getMonth(),o()[m+20>>>2>>>0]=a.getFullYear()-1900,o()[m+24>>>2>>>0]=a.getDay();var $=(Aa(a.getFullYear())?cm:pm)[a.getMonth()]+a.getDate()-1|0;o()[m+28>>>2>>>0]=$,o()[m+36>>>2>>>0]=-60*a.getTimezoneOffset(),$=new Date(a.getFullYear(),6,1).getTimezoneOffset();var F=new Date(a.getFullYear(),0,1).getTimezoneOffset();a=0|($!=F&&a.getTimezoneOffset()==Math.min(F,$)),o()[m+32>>>2>>>0]=a}function n_(a){a>>>=0;var m=new Date(o()[a+20>>>2>>>0]+1900,o()[a+16>>>2>>>0],o()[a+12>>>2>>>0],o()[a+8>>>2>>>0],o()[a+4>>>2>>>0],o()[a>>>2>>>0],0),$=o()[a+32>>>2>>>0],F=m.getTimezoneOffset(),W=new Date(m.getFullYear(),6,1).getTimezoneOffset(),be=new Date(m.getFullYear(),0,1).getTimezoneOffset(),Ge=Math.min(be,W);return 0>$?o()[a+32>>>2>>>0]=+(W!=be&&Ge==F):0<$!=(Ge==F)&&(W=Math.max(be,W),m.setTime(m.getTime()+6e4*((0<$?Ge:W)-F))),o()[a+24>>>2>>>0]=m.getDay(),$=(Aa(m.getFullYear())?cm:pm)[m.getMonth()]+m.getDate()-1|0,o()[a+28>>>2>>>0]=$,o()[a>>>2>>>0]=m.getSeconds(),o()[a+4>>>2>>>0]=m.getMinutes(),o()[a+8>>>2>>>0]=m.getHours(),o()[a+12>>>2>>>0]=m.getDate(),o()[a+16>>>2>>>0]=m.getMonth(),o()[a+20>>>2>>>0]=m.getYear(),a=m.getTime(),BigInt(isNaN(a)?-1:a/1e3)}function hm(a,m,$,F,W,be,Ge){return te?jr(16,1,a,m,$,F,W,be,Ge):-52}function mm(a,m,$,F,W,be){if(te)return jr(17,1,a,m,$,F,W,be)}function o_(a,m,$,F){a>>>=0,m>>>=0,$>>>=0,F>>>=0;var W=new Date().getFullYear(),be=new Date(W,0,1),Ge=new Date(W,6,1);W=be.getTimezoneOffset();var st=Ge.getTimezoneOffset(),yt=Math.max(W,st);d()[a>>>2>>>0]=60*yt,o()[m>>>2>>>0]=+(W!=st),be=(a=Pt=>Pt.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(be),Ge=a(Ge),st<W?(ka(be,$,17),ka(Ge,F,17)):(ka(be,F,17),ka(Ge,$,17))}var eh=[],fm=(a,m)=>{eh.length=0;for(var $;$=s()[a++>>>0];){var F=$!=105;m+=(F&=$!=112)&&m%8?4:0,eh.push($==112?d()[m>>>2>>>0]:$==106?Qr[m>>>3]:$==105?o()[m>>>2>>>0]:h()[m>>>3>>>0]),m+=F?8:4}return eh};function i_(a,m,$){return a>>>=0,m=fm(m>>>0,$>>>0),Rp[a](...m)}function a_(a,m,$){return a>>>=0,m=fm(m>>>0,$>>>0),Rp[a](...m)}var l_=()=>{},u_=()=>Date.now();function d_(a,m){return zt(ls(a>>>0,m>>>0))}var _m,c_=()=>{throw Ko+=1,"unwind"};function p_(){return 4294901760}_m=()=>performance.timeOrigin+performance.now();var h_=()=>navigator.hardwareConcurrency;function m_(){return Sa("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function f_(a){a>>>=0;var m=s().length;if(a<=m||4294901760<a)return!1;for(var $=1;4>=$;$*=2){var F=m*(1+.2/$);F=Math.min(F,a+100663296);var W=Math;F=Math.max(a,F);e:{W=(W.min.call(W,4294901760,F+(65536-F%65536)%65536)-nr.buffer.byteLength+65535)/65536;try{nr.grow(W),is();var be=1;break e}catch{}be=void 0}if(be)return!0}return!1}var gp=()=>(Sa("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),gc={},gm=a=>{a.forEach(m=>{gp()})};function __(){var a=Error().stack.toString().split(`
`);return a[0]=="Error"&&a.shift(),gm(a),gc.Pb=gp(),gc.ec=a,gc.Pb}function g_(a,m,$){if(a>>>=0,m>>>=0,gc.Pb==a)var F=gc.ec;else(F=Error().stack.toString().split(`
`))[0]=="Error"&&F.shift(),gm(F);for(var W=3;F[W]&&gp()!=a;)++W;for(a=0;a<$&&F[a+W];++a)o()[m+4*a>>>2>>>0]=gp();return a}var th,rh={},wm=()=>{if(!th){var a,m={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:Ne};for(a in rh)rh[a]===void 0?delete m[a]:m[a]=rh[a];var $=[];for(a in m)$.push(`${a}=${m[a]}`);th=$}return th};function ym(a,m){if(te)return jr(18,1,a,m);a>>>=0,m>>>=0;var $=0;return wm().forEach((F,W)=>{var be=m+$;for(W=d()[a+4*W>>>2>>>0]=be,be=0;be<F.length;++be)r()[W++>>>0]=F.charCodeAt(be);r()[W>>>0]=0,$+=F.length+1}),0}function Mm(a,m){if(te)return jr(19,1,a,m);a>>>=0,m>>>=0;var $=wm();d()[a>>>2>>>0]=$.length;var F=0;return $.forEach(W=>F+=W.length+1),d()[m>>>2>>>0]=F,0}function bm(a){return te?jr(20,1,a):52}function vm(a,m,$,F){return te?jr(21,1,a,m,$,F):52}function Tm(a,m,$,F){return te?jr(22,1,a,m,$,F):70}var w_=[null,[],[]];function xm(a,m,$,F){if(te)return jr(23,1,a,m,$,F);m>>>=0,$>>>=0,F>>>=0;for(var W=0,be=0;be<$;be++){var Ge=d()[m>>>2>>>0],st=d()[m+4>>>2>>>0];m+=8;for(var yt=0;yt<st;yt++){var Pt=s()[Ge+yt>>>0],Rt=w_[a];Pt===0||Pt===10?((a===1?rr:zt)(Rh(Rt,0)),Rt.length=0):Rt.push(Pt)}W+=st}return d()[F>>>2>>>0]=W,0}var Em=[31,29,31,30,31,30,31,31,30,31,30,31],Pm=[31,28,31,30,31,30,31,31,30,31,30,31],y_=(a,m)=>{r().set(a,m>>>0)};function Cm(a,m,$,F){function W(Be,cr,Vr){for(Be=typeof Be=="number"?Be.toString():Be||"";Be.length<cr;)Be=Vr[0]+Be;return Be}function be(Be,cr){return W(Be,cr,"0")}function Ge(Be,cr){function Vr(Nm){return 0>Nm?-1:0<Nm?1:0}var qo;return(qo=Vr(Be.getFullYear()-cr.getFullYear()))===0&&(qo=Vr(Be.getMonth()-cr.getMonth()))===0&&(qo=Vr(Be.getDate()-cr.getDate())),qo}function st(Be){switch(Be.getDay()){case 0:return new Date(Be.getFullYear()-1,11,29);case 1:return Be;case 2:return new Date(Be.getFullYear(),0,3);case 3:return new Date(Be.getFullYear(),0,2);case 4:return new Date(Be.getFullYear(),0,1);case 5:return new Date(Be.getFullYear()-1,11,31);case 6:return new Date(Be.getFullYear()-1,11,30)}}function yt(Be){var cr=Be.Bb;for(Be=new Date(new Date(Be.Cb+1900,0,1).getTime());0<cr;){var Vr=Be.getMonth(),qo=(Aa(Be.getFullYear())?Em:Pm)[Vr];if(!(cr>qo-Be.getDate())){Be.setDate(Be.getDate()+cr);break}cr-=qo-Be.getDate()+1,Be.setDate(1),11>Vr?Be.setMonth(Vr+1):(Be.setMonth(0),Be.setFullYear(Be.getFullYear()+1))}return Vr=new Date(Be.getFullYear()+1,0,4),cr=st(new Date(Be.getFullYear(),0,4)),Vr=st(Vr),0>=Ge(cr,Be)?0>=Ge(Vr,Be)?Be.getFullYear()+1:Be.getFullYear():Be.getFullYear()-1}a>>>=0,m>>>=0,$>>>=0,F>>>=0;var Pt=d()[F+40>>>2>>>0];for(var Rt in F={kc:o()[F>>>2>>>0],jc:o()[F+4>>>2>>>0],Hb:o()[F+8>>>2>>>0],Lb:o()[F+12>>>2>>>0],Ib:o()[F+16>>>2>>>0],Cb:o()[F+20>>>2>>>0],ub:o()[F+24>>>2>>>0],Bb:o()[F+28>>>2>>>0],rc:o()[F+32>>>2>>>0],ic:o()[F+36>>>2>>>0],lc:Pt?ls(Pt):""},$=ls($),Pt={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})$=$.replace(new RegExp(Rt,"g"),Pt[Rt]);var mr="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Pr="January February March April May June July August September October November December".split(" ");for(Rt in Pt={"%a":Be=>mr[Be.ub].substring(0,3),"%A":Be=>mr[Be.ub],"%b":Be=>Pr[Be.Ib].substring(0,3),"%B":Be=>Pr[Be.Ib],"%C":Be=>be((Be.Cb+1900)/100|0,2),"%d":Be=>be(Be.Lb,2),"%e":Be=>W(Be.Lb,2," "),"%g":Be=>yt(Be).toString().substring(2),"%G":yt,"%H":Be=>be(Be.Hb,2),"%I":Be=>((Be=Be.Hb)==0?Be=12:12<Be&&(Be-=12),be(Be,2)),"%j":Be=>{for(var cr=0,Vr=0;Vr<=Be.Ib-1;cr+=(Aa(Be.Cb+1900)?Em:Pm)[Vr++]);return be(Be.Lb+cr,3)},"%m":Be=>be(Be.Ib+1,2),"%M":Be=>be(Be.jc,2),"%n":()=>`
`,"%p":Be=>0<=Be.Hb&&12>Be.Hb?"AM":"PM","%S":Be=>be(Be.kc,2),"%t":()=>"	","%u":Be=>Be.ub||7,"%U":Be=>be(Math.floor((Be.Bb+7-Be.ub)/7),2),"%V":Be=>{var cr=Math.floor((Be.Bb+7-(Be.ub+6)%7)/7);if(2>=(Be.ub+371-Be.Bb-2)%7&&cr++,cr)cr==53&&((Vr=(Be.ub+371-Be.Bb)%7)==4||Vr==3&&Aa(Be.Cb)||(cr=1));else{cr=52;var Vr=(Be.ub+7-Be.Bb-1)%7;(Vr==4||Vr==5&&Aa(Be.Cb%400-1))&&cr++}return be(cr,2)},"%w":Be=>Be.ub,"%W":Be=>be(Math.floor((Be.Bb+7-(Be.ub+6)%7)/7),2),"%y":Be=>(Be.Cb+1900).toString().substring(2),"%Y":Be=>Be.Cb+1900,"%z":Be=>{var cr=0<=(Be=Be.ic);return Be=Math.abs(Be)/60,(cr?"+":"-")+("0000"+(Be/60*100+Be%60)).slice(-4)},"%Z":Be=>Be.lc,"%%":()=>"%"},$=$.replace(/%%/g,"\0\0"),Pt)$.includes(Rt)&&($=$.replace(new RegExp(Rt,"g"),Pt[Rt](F)));return Rt=function(Be){var cr=Array(Wp(Be)+1);return Uh(Be,cr,0,cr.length),cr}($=$.replace(/\0\0/g,"%")),Rt.length>m?0:(y_(Rt,a),Rt.length-1)}function M_(a,m,$,F){return Cm(a>>>0,m>>>0,$>>>0,F>>>0)}te||function(){for(var a=l.numThreads-1;a--;)Dh();Go.unshift(()=>{Gs++,function(m){te?m():Promise.all(no.map(Oh)).then(m)}(()=>dp())})}();for(var $m=Array(256),wp=0;256>wp;++wp)$m[wp]=String.fromCharCode(wp);em=$m,oo=l.BindingError=class extends Error{constructor(a){super(a),this.name="BindingError"}},l.InternalError=class extends Error{constructor(a){super(a),this.name="InternalError"}},On.push(0,1,void 0,1,null,1,!0,1,!1,1),l.count_emval_handles=()=>On.length/2-5-Hp.length;var b_=[Up,kh,Lh,jh,Nh,Vh,Wh,Gh,Kh,Hh,qh,Qh,Xh,Yh,Jh,Zh,hm,mm,ym,Mm,bm,vm,Tm,xm],Bt=function(){function a($,F){return Bt=$.exports,Bt=function(){var W=Bt,be={};for(let[Ge,st]of Object.entries(W))be[Ge]=typeof st=="function"?(...yt)=>{mp.push(Ge);try{return st(...yt)}finally{bs||(mp.pop(),yn&&ao===1&&mp.length===0&&(ao=0,Ko+=1,hp(zm),typeof Fibers<"u"&&Fibers.sc()))}}:st;return be}(),Bt=function(){var W=Bt,be=st=>yt=>st(yt)>>>0,Ge=st=>()=>st()>>>0;return(W=Object.assign({},W)).Ca=be(W.Ca),W.fb=Ge(W.fb),W.gb=be(W.gb),W.emscripten_main_runtime_thread_id=Ge(W.emscripten_main_runtime_thread_id),W.sb=be(W.sb),W.tb=Ge(W.tb),W}(),Ah.push(Bt.ib),es.unshift(Bt.Ba),Er=F,dp(),Bt}var m=$h();if(Gs++,l.instantiateWasm)try{return l.instantiateWasm(m,a)}catch($){zt(`Module.instantiateWasm callback failed with error: ${$}`),x($)}return Bp||(Bp=l.locateFile?xh("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":l.locateFile?l.locateFile("ort-wasm-simd-threaded.jsep.wasm",rt):rt+"ort-wasm-simd-threaded.jsep.wasm":new URL(c("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),c.b).href),function($,F){var W=Bp;return vt||typeof WebAssembly.instantiateStreaming!="function"||xh(W)||Eh(W)||typeof fetch!="function"?Ch(W,$,F):fetch(W,{credentials:"same-origin"}).then(be=>WebAssembly.instantiateStreaming(be,$).then(F,function(Ge){return zt(`wasm streaming compile failed: ${Ge}`),zt("falling back to ArrayBuffer instantiation"),Ch(W,$,F)}))}(m,function($){a($.instance,$.module)}).catch(x),{}}(),Sm=a=>(Sm=Bt.Ca)(a),km=()=>(km=Bt.Da)();l._OrtInit=(a,m)=>(l._OrtInit=Bt.Ea)(a,m),l._OrtGetLastError=(a,m)=>(l._OrtGetLastError=Bt.Fa)(a,m),l._OrtCreateSessionOptions=(a,m,$,F,W,be,Ge,st,yt,Pt)=>(l._OrtCreateSessionOptions=Bt.Ga)(a,m,$,F,W,be,Ge,st,yt,Pt),l._OrtAppendExecutionProvider=(a,m)=>(l._OrtAppendExecutionProvider=Bt.Ha)(a,m),l._OrtAddFreeDimensionOverride=(a,m,$)=>(l._OrtAddFreeDimensionOverride=Bt.Ia)(a,m,$),l._OrtAddSessionConfigEntry=(a,m,$)=>(l._OrtAddSessionConfigEntry=Bt.Ja)(a,m,$),l._OrtReleaseSessionOptions=a=>(l._OrtReleaseSessionOptions=Bt.Ka)(a),l._OrtCreateSession=(a,m,$)=>(l._OrtCreateSession=Bt.La)(a,m,$),l._OrtReleaseSession=a=>(l._OrtReleaseSession=Bt.Ma)(a),l._OrtGetInputOutputCount=(a,m,$)=>(l._OrtGetInputOutputCount=Bt.Na)(a,m,$),l._OrtGetInputName=(a,m)=>(l._OrtGetInputName=Bt.Oa)(a,m),l._OrtGetOutputName=(a,m)=>(l._OrtGetOutputName=Bt.Pa)(a,m),l._OrtFree=a=>(l._OrtFree=Bt.Qa)(a),l._OrtCreateTensor=(a,m,$,F,W,be)=>(l._OrtCreateTensor=Bt.Ra)(a,m,$,F,W,be),l._OrtGetTensorData=(a,m,$,F,W)=>(l._OrtGetTensorData=Bt.Sa)(a,m,$,F,W),l._OrtReleaseTensor=a=>(l._OrtReleaseTensor=Bt.Ta)(a),l._OrtCreateRunOptions=(a,m,$,F)=>(l._OrtCreateRunOptions=Bt.Ua)(a,m,$,F),l._OrtAddRunConfigEntry=(a,m,$)=>(l._OrtAddRunConfigEntry=Bt.Va)(a,m,$),l._OrtReleaseRunOptions=a=>(l._OrtReleaseRunOptions=Bt.Wa)(a),l._OrtCreateBinding=a=>(l._OrtCreateBinding=Bt.Xa)(a),l._OrtBindInput=(a,m,$)=>(l._OrtBindInput=Bt.Ya)(a,m,$),l._OrtBindOutput=(a,m,$,F)=>(l._OrtBindOutput=Bt.Za)(a,m,$,F),l._OrtClearBoundOutputs=a=>(l._OrtClearBoundOutputs=Bt._a)(a),l._OrtReleaseBinding=a=>(l._OrtReleaseBinding=Bt.$a)(a),l._OrtRunWithBinding=(a,m,$,F,W)=>(l._OrtRunWithBinding=Bt.ab)(a,m,$,F,W),l._OrtRun=(a,m,$,F,W,be,Ge,st)=>(l._OrtRun=Bt.bb)(a,m,$,F,W,be,Ge,st),l._OrtEndProfiling=a=>(l._OrtEndProfiling=Bt.cb)(a),l._JsepOutput=(a,m,$)=>(l._JsepOutput=Bt.db)(a,m,$),l._JsepGetNodeName=a=>(l._JsepGetNodeName=Bt.eb)(a);var yp,Ia=()=>(Ia=Bt.fb)(),Mp=l._malloc=a=>(Mp=l._malloc=Bt.gb)(a),Mn=l._free=a=>(Mn=l._free=Bt.hb)(a),sh=(a,m,$,F,W,be)=>(sh=Bt.kb)(a,m,$,F,W,be),Am=()=>(Am=Bt.lb)(),Im=(a,m,$,F,W)=>(Im=Bt.mb)(a,m,$,F,W),nh=a=>(nh=Bt.nb)(a),bp=a=>(bp=Bt.ob)(a),Fm=()=>(Fm=Bt.pb)(),Om=(a,m)=>(Om=Bt.qb)(a,m),vp=a=>(vp=Bt.rb)(a),oh=a=>(oh=Bt.sb)(a),ih=()=>(ih=Bt.tb)(),Dm=l.dynCall_ii=(a,m)=>(Dm=l.dynCall_ii=Bt.vb)(a,m),Lm=a=>(Lm=Bt.wb)(a),zm=()=>(zm=Bt.xb)(),Bm=a=>(Bm=Bt.yb)(a),Rm=()=>(Rm=Bt.zb)();function jm(){0<Gs||(te?(P(l),te||cp(es),startWorker(l)):(cp(Go),0<Gs||yp||(yp=!0,l.calledRun=!0,bs||(te||cp(es),P(l),te||cp(ds)))))}return l.___start_em_js=882450,l.___stop_em_js=882672,l.stackSave=()=>ih(),l.stackRestore=a=>vp(a),l.stackAlloc=a=>oh(a),l.UTF8ToString=ls,l.stringToUTF8=ka,l.lengthBytesUTF8=Wp,so=function a(){yp||jm(),yp||(so=a)},jm(),O}),vn=Ds,((e=globalThis.self)==null?void 0:e.name)==="em-pthread"&&Ds()}),Ts,Ls,Xs,un,Ys,xs,Js,Zs,zs=g(()=>{var e,t;Ct(),Ts=self.location.href??(typeof document<"u"?(e=document.currentScript)==null?void 0:e.src:typeof self<"u"?(t=self.location)==null?void 0:t.href:void 0),Ls=typeof location>"u"?void 0:location.origin,Xs=(r,s)=>{try{let n=s??Ts;return(n?new URL(r,n):new URL(r)).origin===Ls}catch{return!1}},un=async r=>{let s=await(await fetch(r,{credentials:"same-origin"})).blob();return URL.createObjectURL(s)},Ys=(as(),y(ar)).default,xs=async()=>{if(!Ts)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(Xs(Ts))return[void 0,Ys()];let r=await un(Ts);return[r,Ys(r)]},Js=(Dt(),y(qs)).default,Zs=async(r,s,n)=>[void 0,Js]}),ps,it,Mt,It,Wr,en,Bs,Sr,ts=g(()=>{zs(),it=!1,Mt=!1,It=!1,Wr=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},en=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Bs=async e=>{if(it)return Promise.resolve();if(Mt)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(It)throw new Error("previous call to 'initializeWebAssembly()' failed.");Mt=!0;let t=e.initTimeout,r=e.numThreads;if(!en())throw new Error("WebAssembly SIMD is not supported in the current environment.");let s=Wr();r>1&&!s&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+r+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=r=1);let n=e.wasmPaths,i=typeof n=="string"?n:void 0,o=n==null?void 0:n.mjs,d=(o==null?void 0:o.href)??o,p=n==null?void 0:n.wasm,h=(p==null?void 0:p.href)??p,P=e.wasmBinary,[x,l]=await Zs(d,i,r>1),O=!1,z=[];if(t>0&&z.push(new Promise(B=>{setTimeout(()=>{O=!0,B()},t)})),z.push(new Promise((B,te)=>{let se={numThreads:r};P?se.wasmBinary=P:(h||i)&&(se.locateFile=(H,pe)=>h??(i??pe)+H),l(se).then(H=>{Mt=!1,it=!0,ps=H,B(),x&&URL.revokeObjectURL(x)},H=>{Mt=!1,It=!0,te(H)})})),await Promise.race(z),O)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Sr=()=>{if(it&&ps)return ps;throw new Error("WebAssembly is not initialized yet.")}}),Br,As,br,Tn=g(()=>{ts(),Br=(e,t)=>{let r=Sr(),s=r.lengthBytesUTF8(e)+1,n=r._malloc(s);return r.stringToUTF8(e,n,s),t.push(n),n},As=(e,t,r,s)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([n,i])=>{let o=t?t+n:n;if(typeof i=="object")As(i,o+".",r,s);else if(typeof i=="string"||typeof i=="number")s(o,i.toString());else if(typeof i=="boolean")s(o,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},br=e=>{let t=Sr(),r=t.stackSave();try{let s=t.stackAlloc(8);t._OrtGetLastError(s,s+4);let n=t.HEAP32[s/4],i=t.HEAPU32[s/4+1],o=i?t.UTF8ToString(i):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${o}`)}finally{t.stackRestore(r)}}}),tn,uo=g(()=>{ts(),Tn(),tn=e=>{let t=Sr(),r=0,s=[],n=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)n.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)n.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(n.terminate=!1);let i=0;return(e==null?void 0:e.tag)!==void 0&&(i=Br(e.tag,s)),r=t._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,i),r===0&&br("Can't create run options."),(e==null?void 0:e.extra)!==void 0&&As(e.extra,"",new WeakSet,(o,d)=>{let p=Br(o,s),h=Br(d,s);t._OrtAddRunConfigEntry(r,p,h)!==0&&br(`Can't set a run config entry: ${o} - ${d}.`)}),[r,s]}catch(i){throw r!==0&&t._OrtReleaseRunOptions(r),s.forEach(o=>t._free(o)),i}}}),Dn,Ln,zn,Rs,Bn,co=g(()=>{ts(),Tn(),Dn=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Ln=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},zn=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Rs=(e,t,r)=>{for(let s of t){let n=typeof s=="string"?s:s.name;switch(n){case"webnn":if(n="WEBNN",typeof s!="string"){let o=s==null?void 0:s.deviceType;if(o){let d=Br("deviceType",r),p=Br(o,r);Sr()._OrtAddSessionConfigEntry(e,d,p)!==0&&br(`Can't set a session config entry: 'deviceType' - ${o}.`)}}break;case"webgpu":if(n="JS",typeof s!="string"){let o=s;if(o!=null&&o.preferredLayout){if(o.preferredLayout!=="NCHW"&&o.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${o.preferredLayout}`);let d=Br("preferredLayout",r),p=Br(o.preferredLayout,r);Sr()._OrtAddSessionConfigEntry(e,d,p)!==0&&br(`Can't set a session config entry: 'preferredLayout' - ${o.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${n}`)}let i=Br(n,r);Sr()._OrtAppendExecutionProvider(e,i)!==0&&br(`Can't append execution provider: ${n}.`)}},Bn=e=>{let t=Sr(),r=0,s=[],n=e||{};zn(n);try{let i=Dn(n.graphOptimizationLevel??"all"),o=Ln(n.executionMode??"sequential"),d=typeof n.logId=="string"?Br(n.logId,s):0,p=n.logSeverityLevel??2;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log serverity level is not valid: ${p}`);let h=n.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let P=typeof n.optimizedModelFilePath=="string"?Br(n.optimizedModelFilePath,s):0;if(r=t._OrtCreateSessionOptions(i,!!n.enableCpuMemArena,!!n.enableMemPattern,o,!!n.enableProfiling,0,d,p,h,P),r===0&&br("Can't create session options."),n.executionProviders&&Rs(r,n.executionProviders,s),n.enableGraphCapture!==void 0){if(typeof n.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${n.enableGraphCapture}`);let x=Br("enableGraphCapture",s),l=Br(n.enableGraphCapture.toString(),s);t._OrtAddSessionConfigEntry(r,x,l)!==0&&br(`Can't set a session config entry: 'enableGraphCapture' - ${n.enableGraphCapture}.`)}if(n.freeDimensionOverrides)for(let[x,l]of Object.entries(n.freeDimensionOverrides)){if(typeof x!="string")throw new Error(`free dimension override name must be a string: ${x}`);if(typeof l!="number"||!Number.isInteger(l)||l<0)throw new Error(`free dimension override value must be a non-negative integer: ${l}`);let O=Br(x,s);t._OrtAddFreeDimensionOverride(r,O,l)!==0&&br(`Can't set a free dimension override: ${x} - ${l}.`)}return n.extra!==void 0&&As(n.extra,"",new WeakSet,(x,l)=>{let O=Br(x,s),z=Br(l,s);t._OrtAddSessionConfigEntry(r,O,z)!==0&&br(`Can't set a session config entry: ${x} - ${l}.`)}),[r,s]}catch(i){throw r!==0&&t._OrtReleaseSessionOptions(r),s.forEach(o=>t._free(o)),i}}}),rn,Es,js,Ns,dn,xn,En,Pn,Ot=g(()=>{rn=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Es=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},js=(e,t)=>{let r=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],s=typeof t=="number"?t:t.reduce((n,i)=>n*i,1);return r>0?Math.ceil(s*r):void 0},Ns=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},dn=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},xn=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",En=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool",Pn=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),Cn,Rn=g(()=>{Ct(),Cn=async e=>{if(typeof e=="string"){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),s=r?parseInt(r,10):0;if(s<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let n=t.body.getReader(),i;try{i=new ArrayBuffer(s)}catch(d){if(d instanceof RangeError){let p=Math.ceil(s/65536);i=new WebAssembly.Memory({initial:p,maximum:p}).buffer}else throw d}let o=0;for(;;){let{done:d,value:p}=await n.read();if(d)break;let h=p.byteLength;new Uint8Array(i,o,h).set(p),o+=h}return new Uint8Array(i,0,s)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),jn,Nn,$n,Un,Sn,kn,_r,xe=g(()=>{Ot(),jn=["V","I","W","E","F"],Nn=(e,t)=>{console.log(`[${jn[e]},${new Date().toISOString()}]${t}`)},Sn=(e,t)=>{$n=e,Un=t},kn=(e,t)=>{let r=dn(e),s=dn($n);r>=s&&Nn(r,typeof t=="function"?t():t)},_r=(...e)=>{Un&&kn(...e)}}),T,K=g(()=>{Ot(),T=(e,t)=>new(Ns(t))(e)}),oe=g(()=>{}),Me,Pe,Ue,lt,mt,pt,Tt,Wt,gr,Jt=g(()=>{xe(),oe(),Me=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Pe=[],Ue=e=>Math.ceil(e/16)*16,lt=e=>{for(let t=0;t<Pe.length;t++){let r=Pe[t];if(e<=r)return r}return Math.ceil(e/16)*16},mt=1,pt=()=>mt++,Tt=async(e,t,r,s)=>{let n=Ue(r),i=e.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=e.getCommandEncoder();e.endComputePass(),o.copyBufferToBuffer(t,0,i,0,n),e.flush(),await i.mapAsync(GPUMapMode.READ);let d=i.getMappedRange();if(s){let p=s();return p.set(new Uint8Array(d,0,r)),p}else return new Uint8Array(d.slice(0,r))}finally{i.destroy()}},Wt=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[t]of Me)Pe.push(t),this.freeBuffers.set(t,[]),this.freeUniformBuffers.set(t,[])}upload(e,t){let r=t.buffer,s=t.byteOffset,n=t.byteLength,i=Ue(n),o=this.storageCache.get(e);if(!o)throw new Error("gpu data for uploading does not exist");if(o.originalSize!==n)throw new Error(`inconsistent data size. gpu data size=${o.originalSize}, data size=${n}`);let d=this.backend.device.createBuffer({mappedAtCreation:!0,size:i,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),p=d.getMappedRange();new Uint8Array(p).set(new Uint8Array(r,s,n)),d.unmap();let h=this.backend.getCommandEncoder();this.backend.endComputePass(),h.copyBufferToBuffer(d,0,o.gpuData.buffer,0,i),_r("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(d)}memcpy(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(t);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(r.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let n=Ue(r.originalSize),i=this.backend.getCommandEncoder();this.backend.endComputePass(),i.copyBufferToBuffer(r.gpuData.buffer,0,s.gpuData.buffer,0,n)}registerExternalBuffer(e,t,r){let s;if(r){if(s=r[0],e===r[1])return _r("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else s=pt();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:e},originalSize:t}),_r("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${s}, registered.`),s}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),_r("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let r=lt(e),s,n=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,i=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(n||i){let d=(n?this.freeBuffers:this.freeUniformBuffers).get(r);d?d.length>0?s=d.pop():s=this.backend.device.createBuffer({size:r,usage:t}):s=this.backend.device.createBuffer({size:r,usage:t})}else s=this.backend.device.createBuffer({size:r,usage:t});let o={id:pt(),type:0,buffer:s};return this.storageCache.set(o.id,{gpuData:o,originalSize:e}),_r("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${o.id}`),o}get(e){var t;return(t=this.storageCache.get(e))==null?void 0:t.gpuData}release(e){let t=this.storageCache.get(e);if(!t)throw new Error("releasing data does not exist");return _r("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("data does not exist");await Tt(this.backend,r.gpuData.buffer,r.originalSize,t)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let t=Me.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let r=this.freeBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let r=this.freeUniformBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach(r=>{r.destroy()}),this.capturedPendingBuffers.delete(e))}},gr=(...e)=>new Wt(...e)}),Cr,qt,lr=g(()=>{Cr=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},qt=e=>new Cr(e)}),hs,Gr,De,wr,qr,ms,Ps,Ut=g(()=>{hs=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},Gr=class{static calcShape(e,t,r=!1){let s=e.length,n=t.length;if(s===0)return t;if(n===0)return e;let i=Math.max(e.length,t.length),o=new Array(i);if(r){if(s<2||n<2)return;let d=hs.calcMatMulShape([e[s-2],e[s-1]],[t[n-2],t[n-1]]);if(d===void 0)return;[o[i-2],o[i-1]]=d}for(let d=r?3:1;d<=i;d++){let p=s-d<0?1:e[s-d],h=n-d<0?1:t[n-d];if(p!==h&&p>1&&h>1)return;let P=Math.max(p,h);if(p&&h)o[i-d]=Math.max(p,h);else{if(P>1)return;o[i-d]=0}}return o}static isValidBroadcast(e,t){let r=e.length,s=t.length;if(r>s)return!1;for(let n=1;n<=r;n++)if(e[r-n]!==1&&e[r-n]!==t[s-n])return!1;return!0}},De=class Tp{static size(t){return Tp.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let s=t.length;if(s===0)return[];let n=new Array(s),i=s-1;for(;i>=0;){if(t[i]%r===0){n[i]=t[i]/r;break}if(r%t[i]!==0)throw new Error("cannot convert shape");n[i]=1,r/=t[i],i--}for(i--;i>=0;i--)n[i]=t[i];return n}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return Tp.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return Tp.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,s){let n=1;for(let i=r;i<s;i++){if(t[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");n*=t[i]}return n}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let s=new Array(r);s[r-1]=1,s[r-2]=t[r-1];for(let n=r-3;n>=0;--n)s[n]=s[n+1]*t[n+1];return s}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(s=>this.normalizeAxis(s,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(s=>t[s]):t.slice().reverse()}static padShape(t,r){let s=t.length;return t.map((n,i)=>n+r[i]+r[i+s])}static areEqual(t,r){return t.length!==r.length?!1:t.every((s,n)=>s===r[n])}},wr=class wc{static adjustPoolAttributes(t,r,s,n,i,o){if(!t&&s.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let d=0;d<r.length-2;d++)d>=s.length?s.push(r[d+2]):s[d]=r[d+2];for(let d=0;d<s.length;d++)if(d<n.length){if(n[d]<0)throw new Error("strides should be greater than or equal to 1")}else n.push(1);for(let d=0;d<s.length;d++)if(d<i.length){if(i[d]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let d=0;d<s.length*2;d++)if(d<o.length){if(o[d]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let d=0;d<s.length;d++){if(s[d]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[d]>=s[d]||o[d+s.length]>=s[d])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,s,n,i,o,d){if(d){if(i.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let p=0;p<t.length-2;p++)wc.adjustPadAndReturnShape(t[p+(o?1:2)],r[p],s[p],n[p],i,p,p+t.length-2,d)}}static computePoolOutputShape(t,r,s,n,i,o,d){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let p=[r[0],r[1]];return wc.computeShapeHelper(t,r,p,s,n,i,o,d),p}static computeConvOutputShape(t,r,s,n,i,o,d){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let p=[t[0],r[0]];return wc.computeShapeHelper(!1,t,p,s,n,i,o,d),p}static computeShapeHelper(t,r,s,n,i,o,d,p){if(t)for(let h=0;h<r.length-2;h++)s.push(1);else for(let h=0;h<r.length-2;h++)s.push(wc.adjustPadAndReturnShape(r[h+2],n[h],i[h],o[h],d,h,h+r.length-2,p))}static adjustPadAndReturnShape(t,r,s,n,i,o,d,p){let h=s*(n-1)+1;if(p&&p!=="NOTSET")switch(p){case"VALID":return i[o]=0,i[d]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(s!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let P=((t+r-1)/r-1)*r+n-t;return i[o]=Math.floor(p==="SAME_LOWER"?(P+1)/2:P/2),i[d]=P-i[o],Math.floor((t+P-n)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+i[o]+i[d]-h)/r+1)}},qr=class{static getShapeOfGemmResult(e,t,r,s,n){if(e.length!==2||r.length!==2)throw new Error("shape need to be of size 2");let i,o,d;t?(i=e[1],o=e[0]):(i=e[0],o=e[1]);let p=-1;if(s?(d=r[0],p=1):(d=r[1],p=0),r[p]!==o)throw new Error("dimension mismatch");if(i<=0||d<=0||o<=0)throw new Error("invalid shape specified");if(n&&!Gr.isValidBroadcast(n,[i,d]))throw new Error("gemm: invalid bias shape for broadcast");return[i,d,o]}},ms=-34028234663852886e22,Ps=34028234663852886e22}),Rr,us,or,yr,wt,Zt,Dr,Is,Fs,St,po,Ze,kt,Xo,Oa,Yo,Vn,er=g(()=>{Ot(),Ut(),Rr=64,us=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},or=(e,t=1)=>{let r=us(e,t);return typeof r=="string"?r:r[0]},yr=(e,t=1)=>{let r=us(e,t);return typeof r=="string"?r:r[1]},wt=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:De.computeStrides(r)})}),t},Zt=e=>e%4===0?4:e%2===0?2:1,Dr=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,Is=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,Fs=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,St=(e,t,r,s)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?s==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:s==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,po=(e,t,r,s,n)=>{let i=typeof r=="number",o=i?r:r.length,d=[...new Array(o).keys()],p=o<2?"u32":o<=4?`vec${o}<u32>`:`array<u32, ${o}>`,h=us(t,n),P=typeof h=="string"?h:h[1],x=typeof h=="string"?h:h[0],l={indices:p,value:P,storage:x,tensor:t},O=Ve=>typeof Ve=="string"?Ve:`${Ve}u`,z={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},B=i?"uniforms.":"",te=`${B}${e}_shape`,se=`${B}${e}_strides`,H="";for(let Ve=0;Ve<o-1;Ve++)H+=`
    let dim${Ve} = current / ${St(se,Ve,o)};
    let rest${Ve} = current % ${St(se,Ve,o)};
    indices[${Ve}] = dim${Ve};
    current = rest${Ve};
    `;H+=`indices[${o-1}] = current;`;let pe=o<2?"":`
  fn o2i_${e}(offset: u32) -> ${l.indices} {
    var indices: ${l.indices};
    var current = offset;
    ${H}
    return indices;
  }`,ae=Ve=>(z.offsetToIndices=!0,o<2?Ve:`o2i_${e}(${Ve})`),ge=[];if(o>=2)for(let Ve=o-1;Ve>=0;Ve--)ge.push(`${St(se,Ve,o)} * (indices[${Ve}])`);let Ne=o<2?"":`
  fn i2o_${e}(indices: ${l.indices}) -> u32 {
    return ${ge.join("+")};
  }`,Fe=Ve=>(z.indicesToOffset=!0,o<2?Ve:`i2o_${e}(${Ve})`),rt=(...Ve)=>o===0?"0u":`${l.indices}(${Ve.map(O).join(",")})`,vt=(Ve,ct)=>o<2?`${Ve}`:`${St(Ve,ct,o)}`,$t=(Ve,ct,Vt)=>o<2?`${Ve}=${Vt};`:`${St(Ve,ct,o)}=${Vt};`,Yt={},rr=(Ve,ct)=>{z.broadcastedIndicesToOffset=!0;let Vt=`${ct.name}broadcastedIndicesTo${e}Offset`;if(Vt in Yt)return`${Vt}(${Ve})`;let xr=[];for(let Hr=o-1;Hr>=0;Hr--){let Qr=ct.indicesGet("outputIndices",Hr+ct.rank-o);xr.push(`${vt(se,Hr)} * (${Qr} % ${vt(te,Hr)})`)}return Yt[Vt]=`fn ${Vt}(outputIndices: ${ct.type.indices}) -> u32 {
             return ${xr.length>0?xr.join("+"):"0u"};
           }`,`${Vt}(${Ve})`},zt=(Ve,ct)=>(()=>{if(l.storage===l.value)return`${e}[${Ve}]=${ct};`;if(l.storage==="vec2<u32>"&&l.value==="i32")return`${e}[${Ve}]=vec2<u32>(u32(${ct}), select(0u, 0xFFFFFFFFu, ${ct} < 0));`;if(l.storage==="vec2<u32>"&&l.value==="u32")return`${e}[${Ve}]=vec2<u32>(u32(${ct}), 0u);`;if(l.storage==="u32"&&l.value==="vec4<bool>")return`${e}[${Ve}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ct}));`;throw new Error(`not supported combination of storage type ${l.storage} and value type ${l.value} yet`)})(),Tr=Ve=>(()=>{if(l.storage===l.value)return`${e}[${Ve}]`;if(l.storage==="vec2<u32>"&&l.value==="i32")return`i32(${e}[${Ve}].x)`;if(l.storage==="vec2<u32>"&&l.value==="u32")return`u32(${e}[${Ve}].x)`;if(l.storage==="u32"&&l.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${Ve}] & 0xFFu), bool(${e}[${Ve}] & 0xFF00u), bool(${e}[${Ve}] & 0xFF0000u), bool(${e}[${Ve}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${l.storage} and value type ${l.value} yet`)})(),Ir=o<2?"":`
  fn get_${e}ByIndices(indices: ${l.indices}) -> ${P} {
    return ${Tr(`i2o_${e}(indices)`)};
  }`,nr=o<2?"":(()=>{let Ve=d.map(Vt=>`d${Vt}: u32`).join(", "),ct=d.map(Vt=>`d${Vt}`).join(", ");return`
  fn get_${e}(${Ve}) -> ${P} {
    return get_${e}ByIndices(${rt(ct)});
  }`})(),Er=(...Ve)=>{if(Ve.length!==o)throw new Error(`indices length must be ${o}`);let ct=Ve.map(O).join(",");return o===0?Tr("0u"):o===1?Tr(ct[0]):(z.get=!0,z.getByIndices=!0,z.indicesToOffset=!0,`get_${e}(${ct})`)},Ft=Ve=>o<2?Tr(Ve):(z.getByIndices=!0,z.indicesToOffset=!0,`get_${e}ByIndices(${Ve})`),Nt=o<2?"":`
  fn set_${e}ByIndices(indices: ${l.indices}, value: ${P}) {
    ${zt(`i2o_${e}(indices)`,"value")}
  }`,hr=o<2?"":(()=>{let Ve=d.map(Vt=>`d${Vt}: u32`).join(", "),ct=d.map(Vt=>`d${Vt}`).join(", ");return`
  fn set_${e}(${Ve}, value: ${P}) {
    set_${e}ByIndices(${rt(ct)}, value);
  }`})();return{impl:()=>{let Ve=[],ct=!1;return z.offsetToIndices&&(Ve.push(pe),ct=!0),z.indicesToOffset&&(Ve.push(Ne),ct=!0),z.broadcastedIndicesToOffset&&(Object.values(Yt).forEach(Vt=>Ve.push(Vt)),ct=!0),z.set&&(Ve.push(hr),ct=!0),z.setByIndices&&(Ve.push(Nt),ct=!0),z.get&&(Ve.push(nr),ct=!0),z.getByIndices&&(Ve.push(Ir),ct=!0),!i&&ct&&Ve.unshift(`const ${te} = ${l.indices}(${r.join(",")});`,`const ${se} = ${l.indices}(${De.computeStrides(r).join(",")});`),Ve.join(`
`)},type:l,offsetToIndices:ae,indicesToOffset:Fe,broadcastedIndicesToOffset:rr,indices:rt,indicesGet:vt,indicesSet:$t,set:(...Ve)=>{if(Ve.length!==o+1)throw new Error(`indices length must be ${o}`);let ct=Ve[o];if(typeof ct!="string")throw new Error("value must be string");let Vt=Ve.slice(0,o).map(O).join(",");return o===0?zt("0u",ct):o===1?zt(Vt[0],ct):(z.set=!0,z.setByIndices=!0,z.indicesToOffset=!0,`set_${e}(${Vt}, ${ct})`)},setByOffset:zt,setByIndices:(Ve,ct)=>o<2?zt(Ve,ct):(z.setByIndices=!0,z.indicesToOffset=!0,`set_${e}ByIndices(${Ve}, ${ct});`),get:Er,getByOffset:Tr,getByIndices:Ft,usage:s,name:e,strides:se,shape:te,rank:o}},Ze=(e,t,r,s=1)=>po(e,t,r,"input",s),kt=(e,t,r,s=1)=>po(e,t,r,"output",s),Xo=(e,t,r,s=1)=>po(e,t,r,"internal",s),Oa=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=Rr){let t=typeof e=="number"?e:e[0],r=typeof e=="number"?1:e[1],s=typeof e=="number"?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||r>this.limits.maxComputeWorkgroupSizeY||s>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${r}, ${s}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*r*s>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${r}, ${s}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let n=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,i=n?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,o=n?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${t*r*s}u + local_idx;`;return`@compute @workgroup_size(${t}, ${r}, ${s})
  fn main(${i}) {
    ${o}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let r=e.usage==="input"?"read":"read_write",s=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${r}> ${e.name}: array<${s}>;`}declareVariables(...e){return e.map(t=>this.declareVariable(t,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(e,t,r=1){return this.uniforms.push({name:e,type:t,length:r}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:t,type:r,length:s}of this.uniforms)if(s&&s>4)r==="f16"?e.push(`@align(16) ${t}:array<mat2x4<${r}>, ${Math.ceil(s/8)}>`):e.push(`${t}:array<vec4<${r}>, ${Math.ceil(s/4)}>`);else{let n=s==null||s===1?r:`vec${s}<${r}>`;e.push(`${t}:${n}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=t=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(t)];return this.uniforms.map(t=>[e(t.type),t.length??1])}},Yo=(e,t)=>new Oa(e,t),Vn=(e,t)=>{let r=e.length,s=[];for(let n=0;n<r;n++){let i=r-1-n,o=e[i]||1;(t[t.length-1-n]||1)>1&&o===1&&s.unshift(i)}return s}}),Jo,Zo,ho,Da,La,fs,za,Ba,Us=g(()=>{Ot(),Ut(),lr(),er(),Jo=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Zo=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,ho=(e,t)=>De.sortBasedOnPerm(e,Zo(e.length,t)),Da=(e,t,r,s)=>{let n=`fn perm(i: ${s.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`;for(let i=0;i<t;++i)n+=r.indicesSet("a",e[i],`i[${i}]`);return n+="return a;}"},La=(e,t)=>{let r=[],s=[];for(let n=0;n<e.length;++n)e[n]!==1&&r.push(e[n]),e[t[n]]!==1&&s.push(t[n]);return{newShape:r,newPerm:s}},fs=(e,t)=>{let r=e.dataType,s=e.dims.length,n=Zo(s,t),i=ho(e.dims,n),{newShape:o,newPerm:d}=La(e.dims,n),p=De.areEqual(d,[2,3,1]),h=De.areEqual(d,[3,1,2]),P=o.length===2&&d[0]>d[1]||p||h,x=P?o:e.dims,l=i;P&&(x=p?[o[0],o[1]*o[2]]:h?[o[0]*o[1],o[2]]:o,l=[x[1],x[0]]);let O=Ze("a",r,x.length),z=kt("output",r,l.length),B=16,te;return P?te=se=>`
  ${se.registerUniform("output_size","u32").declareVariables(O,z)}
  var<workgroup> tile : array<array<${z.type.value}, ${B+1}>, ${B}>;
  ${se.mainStart([B,B,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${B} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${B}u + local_id.x;
    let input_row = workgroup_id_x * ${B}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${O.getByIndices(`${O.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${B}u + local_id.x;
    let output_row = workgroup_id_y * ${B}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${z.setByIndices(`${z.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`:te=se=>`
  ${se.registerUniform("output_size","u32").declareVariables(O,z)}

  ${Da(n,s,O,z)}

  ${se.mainStart()}
    ${se.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${z.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${z.setByOffset("global_idx",O.getByIndices("aIndices"))}
  }`,{name:P?"TransposeShared":"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>{let se=De.size(i);return{outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:P?{x:Math.ceil(l[1]/B),y:Math.ceil(l[0]/B)}:{x:Math.ceil(se/64)},programUniforms:[{type:12,data:se},...wt(x,l)]}},getShaderSource:te}},za=(e,t)=>{Jo(e.inputs),e.compute(fs(e.inputs[0],t.perm))},Ba=e=>qt({perm:e.perm})}),cn,Ra,yc,ja,Mc,Na,ei,Ua,Va,Wa,Cs,Ga,mo,Ka,Ha,qa,ti,Qa,Xa,ri,Ya,bc=g(()=>{Ot(),Ut(),er(),ui(),Us(),cn={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Ra={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},yc={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},ja={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Mc=(e,t)=>{let r=[];for(let s=t-e;s<t;++s)r.push(s);return r},Na=(e,t)=>{let r=[],s=e.length;for(let i=0;i<s;i++)t.indexOf(i)===-1&&r.push(e[i]);let n=t.map(i=>e[i]);return[r,n]},ei=(e,t)=>{let r=e.length+t.length,s=[],n=0;for(let i=0;i<r;i++)t.indexOf(i)===-1?s.push(e[n++]):s.push(1);return s},Ua=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},Va=(e,t)=>{let r=[];if(!Ua(e,t)){for(let s=0;s<t;++s)e.indexOf(s)===-1&&r.push(s);e.forEach(s=>r.push(s))}return r},Wa=(e,t,r,s,n,i,o)=>{let d=r[0].dims,p=De.size(i),h=De.size(o),P=Ze("_A",r[0].dataType,d),x=kt("output",n,i),l=32,O=`
          var<workgroup> aBestValues : array<f32, ${l}>;
       `;return{name:e,shaderCache:t,getShaderSource:z=>`
        ${z.registerUniform("reduceSize","u32").declareVariables(P,x)}
        ${O}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${z.mainStart(l)}

          let outputIndex = global_idx / ${l};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${yc[s]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${l}) {
           let candidate = f32(${P.getByOffset("offset + k")});
           bestValue = ${cn[s]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${l}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Ra[s]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${x.setByOffset("outputIndex",`${s==="mean"?`${x.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${x.type.storage}(${ja[s]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:i,dataType:n}],dispatchGroup:{x:p},programUniforms:[{type:12,data:h}]})}},Cs=(e,t,r,s)=>{let n=e.inputs.length===1?r:_o(e.inputs,r),i=n.axes;i.length===0&&!n.noopWithEmptyAxes&&(i=e.inputs[0].dims.map((O,z)=>z));let o=De.normalizeAxes(i,e.inputs[0].dims.length),d=o,p=e.inputs[0],h=Va(d,e.inputs[0].dims.length);h.length>0&&(p=e.compute(fs(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],d=Mc(d.length,p.dims.length));let[P,x]=Na(p.dims,d),l=P;n.keepDims&&(l=ei(P,o)),e.compute(Wa(t,{hint:n.cacheKey,inputDependencies:["type"]},[p],s,e.inputs[0].dataType,l,x),{inputs:[p]})},Ga=(e,t)=>{Cs(e,"ReduceMeanShared",t,"mean")},mo=(e,t)=>{Cs(e,"ReduceL1Shared",t,"l1")},Ka=(e,t)=>{Cs(e,"ReduceL2Shared",t,"l2")},Ha=(e,t)=>{Cs(e,"ReduceLogSumExpShared",t,"logSumExp")},qa=(e,t)=>{Cs(e,"ReduceMaxShared",t,"max")},ti=(e,t)=>{Cs(e,"ReduceMinShared",t,"min")},Qa=(e,t)=>{Cs(e,"ReduceProdShared",t,"prod")},Xa=(e,t)=>{Cs(e,"ReduceSumShared",t,"sum")},ri=(e,t)=>{Cs(e,"ReduceSumSquareShared",t,"sumSquare")},Ya=(e,t)=>{Cs(e,"ReduceLogSumShared",t,"logSum")}}),ws,Ja,fo,_o,$s,Za,si,el,tl,ni,rl,sl,oi,nl,ol,ys,il,al,ii,ll,ul,ai,dl,cl,li,pl,ui=g(()=>{Ot(),Ut(),lr(),er(),bc(),ws=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Ja=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],fo=(e,t,r,s,n,i,o=!1,d=!1)=>{let p=[],h=r[0].dims,P=h.length,x=De.normalizeAxes(n,P),l=!d&&x.length===0;h.forEach((B,te)=>{l||x.indexOf(te)>=0?o&&p.push(1):p.push(B)});let O=p.length,z=De.size(p);return{name:e,shaderCache:t,getShaderSource:B=>{let te=[],se=Ze("_A",r[0].dataType,P),H=kt("output",i,O),pe=s(se,H,x),ae=pe[2];for(let ge=0,Ne=0;ge<P;ge++)l||x.indexOf(ge)>=0?(o&&Ne++,ae=`for(var j${ge}: u32 = 0; j${ge} < ${h[ge]}; j${ge}++) {
                  ${pe[2].includes("last_index")?`let last_index = j${ge};`:""}
                  ${se.indicesSet("input_indices",ge,`j${ge}`)}
                  ${ae}
                }`):(te.push(`${se.indicesSet("input_indices",ge,H.indicesGet("output_indices",Ne))};`),Ne++);return`

        ${B.registerUniform("output_size","u32").declareVariables(se,H)}

        ${B.mainStart()}
          ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${se.type.indices};
          let output_indices = ${H.offsetToIndices("global_idx")};

          ${te.join(`
`)}
          ${pe[0]}       // init ops for reduce max/min
          ${pe[1]}
          ${ae}
          ${pe[3]}
          ${pe.length===4?H.setByOffset("global_idx","value"):pe.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:p,dataType:i}],dispatchGroup:{x:Math.ceil(z/64)},programUniforms:[{type:12,data:z},...wt(h,p)]})}},_o=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(s=>r.push(Number(s))),qt({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},$s=(e,t,r,s)=>{let n=e.inputs,i=n.length===1?r:_o(n,r);e.compute(fo(t,{hint:i.cacheKey,inputDependencies:["rank"]},[n[0]],i.noopWithEmptyAxes&&i.axes.length===0?Ja:s,i.axes,n[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},Za=(e,t)=>{ws(e.inputs),$s(e,"ReduceLogSum",t,(r,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,"value = log(value);"])},si=(e,t)=>{ws(e.inputs),$s(e,"ReduceL1",t,(r,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${r.getByIndices("input_indices")});`,""])},el=(e,t)=>{ws(e.inputs),$s(e,"ReduceL2",t,(r,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},tl=(e,t)=>{ws(e.inputs),$s(e,"ReduceLogSumExp",t,(r,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${r.getByIndices("input_indices")});`,"value = log(value);"])},ni=(e,t)=>{ws(e.inputs),$s(e,"ReduceMax",t,(r,s,n)=>{let i=[];for(let o=0;o<r.rank;o++)(n.indexOf(o)>=0||n.length===0)&&i.push(r.indicesSet("input_indices",o,0));return[`${i.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = max(value, ${r.getByIndices("input_indices")});`,""]})},rl=(e,t)=>{ws(e.inputs),$s(e,"ReduceMean",t,(r,s,n)=>{let i=1;for(let o=0;o<r.rank;o++)(n.indexOf(o)>=0||n.length===0)&&(i*=e.inputs[0].dims[o]);return["var sum = f32(0);","",`sum += f32(${r.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${i});`]})},sl=(e,t)=>{ws(e.inputs),$s(e,"ReduceMin",t,(r,s,n)=>{let i=[];for(let o=0;o<r.rank;o++)(n.indexOf(o)>=0||n.length===0)&&i.push(`input_indices[${o}] = 0;`);return[`${i.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = min(value, ${r.getByIndices("input_indices")});`,""]})},oi=(e,t)=>{ws(e.inputs),$s(e,"ReduceProd",t,(r,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${r.getByIndices("input_indices")};`,""])},nl=(e,t)=>{ws(e.inputs),$s(e,"ReduceSum",t,(r,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,""])},ol=(e,t)=>{ws(e.inputs),$s(e,"ReduceSumSquare",t,(r,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += t * t;`,""])},ys=(e,t,r)=>{if(t.length===0)return r;let s=1,n=1;for(let i=0;i<t.length;i++)t.indexOf(i)===-1?s*=e[i]:n*=e[i];return n<32&&s>1024},il=(e,t)=>{ys(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?rl(e,t):Ga(e,t)},al=(e,t)=>{ys(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?si(e,t):mo(e,t)},ii=(e,t)=>{ys(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?el(e,t):Ka(e,t)},ll=(e,t)=>{ys(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?tl(e,t):Ha(e,t)},ul=(e,t)=>{ys(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ni(e,t):qa(e,t)},ai=(e,t)=>{ys(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?sl(e,t):ti(e,t)},dl=(e,t)=>{ys(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?oi(e,t):Qa(e,t)},cl=(e,t)=>{ys(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?nl(e,t):Xa(e,t)},li=(e,t)=>{ys(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ol(e,t):ri(e,t)},pl=(e,t)=>{ys(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Za(e,t):Ya(e,t)}}),go,hl,ml,wo,vc=g(()=>{Ot(),lr(),ui(),go=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},hl=(e,t)=>{go(e.inputs);let r=(s,n,i)=>{let o=[];for(let d=0;d<s.rank;d++)(i.indexOf(d)>=0||i.length===0)&&o.push(`input_indices[${d}] = 0;`);return[`${o.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",n.setByOffset("global_idx","best_index")]};e.compute(fo("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ml=(e,t)=>{go(e.inputs);let r=(s,n,i)=>{let o=[];for(let d=0;d<s.rank;d++)(i.indexOf(d)>=0||i.length===0)&&o.push(`input_indices[${d}] = 0;`);return[`${o.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",n.setByOffset("global_idx","best_index")]};e.compute(fo("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},wo=e=>qt(e)}),fl,di,_l,gl,An,wl,yl,yo=g(()=>{Ot(),Ut(),oe(),er(),fl=(e,t)=>{let r=e[0],s=e[1],n=e[2],i=e[3],o=e[4],d=e[5];if(o&&d)throw new Error("Attention cannot have both past and attention_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let p=r.dims[0],h=r.dims[1],P=r.dims[2];if(n.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(s.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(s.dims[0]!==P)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(n.dims[0]!==s.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let x=n.dims[0]/3,l=x,O=l;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let pe of t.qkvHiddenSizes)if(pe%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");x=t.qkvHiddenSizes[0],l=t.qkvHiddenSizes[1],O=t.qkvHiddenSizes[2]}let z=h;if(x!==l)throw new Error("qkv_hidden_sizes first element should be same as the second");if(n.dims[0]!==x+l+O)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let B=0;if(o){if(l!==O)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(o.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(o.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(o.dims[1]!==p)throw new Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==l/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(B=o.dims[3])}let te=z+B,se=-1,H=0;if(i)throw new Error("Mask not supported");if(o)throw new Error("past is not supported");if(d){if(d.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(d.dims[0]!==p||d.dims[1]!==t.numHeads||d.dims[2]!==h||d.dims[3]!==te)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:p,sequenceLength:h,pastSequenceLength:B,kvSequenceLength:z,totalSequenceLength:te,maxSequenceLength:se,inputHiddenSize:P,hiddenSize:x,vHiddenSize:O,headSize:Math.floor(x/t.numHeads),vHeadSize:Math.floor(O/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:H,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},di=(e,t,r)=>{let s=Zt(r),n=64,i=r/s;i<n&&(n=32);let o=Math.ceil(r/s/n),d=[{type:1,data:1/r},{type:12,data:i},{type:12,data:o}],p=or(e.dataType,s),h=yr(1,s),P=["type"],x=l=>{let O=kt("x",e.dataType,e.dims,s),z=yr(e.dataType),B=[{name:"d_inv",type:"f32"},{name:"d_comp",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${n}>;
  var<workgroup> thread_sum: array<f32, ${n}>;
  ${l.registerUniforms(B).declareVariables(O)}
  ${l.mainStart([n,1,1])}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${n}) * uniforms.d_comp + local_offset;

    var thread_max_vector = ${h}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
      thread_max_vector = max(${h}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(s){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${s}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${n}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${h}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
      sum_vector += exp(${h}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(s){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${s}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${n}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
        x[offset + i] = ${O.type.value}(${z}(uniforms.d_inv));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
        var f32input = ${h}(x[offset + i]);
        x[offset + i] = ${O.type.value}(exp(f32input - max_value) / sum);
      }
    }
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${n};${p};${s}`,inputDependencies:P},getShaderSource:x,getRunData:()=>({outputs:[],dispatchGroup:{x:t},programUniforms:d})}},_l=(e,t,r,s,n,i,o,d)=>{let p=d+i.kvSequenceLength,h=[i.batchSize,i.numHeads,i.sequenceLength,p],P=i.kvNumHeads===void 0&&e>1&&s,x=P?[i.batchSize,i.numHeads,p,i.headSize]:void 0,l=o.scale===0?1/Math.sqrt(i.headSize):o.scale,O=Zt(i.headSize),z=i.headSize/O,B=12,te={x:Math.ceil(p/B),y:Math.ceil(i.sequenceLength/B),z:i.batchSize*i.numHeads},se=[{type:12,data:i.sequenceLength},{type:12,data:z},{type:12,data:p},{type:12,data:i.numHeads},{type:1,data:l},{type:12,data:d},{type:12,data:i.kvSequenceLength}],H=P&&s&&De.size(s.dims)>0,pe=["type","type"];H&&pe.push("type"),n&&pe.push("type");let ae=[{dims:h,dataType:t.dataType,gpuDataType:0}];P&&ae.push({dims:x,dataType:t.dataType,gpuDataType:0});let ge=Ne=>{let Fe=Ze("q",t.dataType,t.dims,O),rt=Ze("key",r.dataType,r.dims,O),vt=[Fe,rt];if(H){let Tr=Ze("past_key",s.dataType,s.dims,O);vt.push(Tr)}n&&vt.push(Ze("attention_bias",n.dataType,n.dims));let $t=kt("output",t.dataType,h),Yt=[$t];P&&Yt.push(kt("present_key",t.dataType,x,O));let rr=yr(1,O),zt=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"}];return`
  const TILE_SIZE = ${B}u;

  var<workgroup> tileQ: array<${Fe.type.storage}, ${B*B}>;
  var<workgroup> tileK: array<${Fe.type.storage}, ${B*B}>;
  ${Ne.registerUniforms(zt).declareVariables(...vt,...Yt)}
  ${Ne.mainStart([B,B,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    ${H&&P?`
    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx;
    let pastKeyOffset = uniforms.past_sequence_length * uniforms.K * headIdx;`:`
    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;`}
    ${P?"let presentKeyOffset = headIdx * uniforms.N * uniforms.K;":""}
    var value = ${rr}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${H&&P?`
              if (n + local_id.y < uniforms.past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else {
                tileK[idx] =
                         key[kOffset + (n + local_id.y - uniforms.past_sequence_length) * uniforms.K + w + local_id.x];
              }`:"tileK[idx] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];"}
      ${P?"present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];":""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
        value += ${rr}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(O){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${O}`)}})()};
        output[outputIdx] = ${$t.type.value} (sum * uniforms.alpha) + ${n?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${O};${n!==void 0};${s!==void 0};${e}`,inputDependencies:pe},getRunData:()=>({outputs:ae,dispatchGroup:te,programUniforms:se}),getShaderSource:ge}},gl=(e,t,r,s,n,i)=>{let o=i+n.kvSequenceLength,d=n.nReps?n.nReps:1,p=n.vHiddenSize*d,h=n.kvNumHeads==null&&e>1&&s,P=h?[n.batchSize,n.numHeads,o,n.headSize]:void 0,x=[n.batchSize,n.sequenceLength,p],l=12,O={x:Math.ceil(n.vHeadSize/l),y:Math.ceil(n.sequenceLength/l),z:n.batchSize*n.numHeads},z=[{type:12,data:n.sequenceLength},{type:12,data:o},{type:12,data:n.vHeadSize},{type:12,data:n.numHeads},{type:12,data:p},{type:12,data:i},{type:12,data:n.kvSequenceLength}],B=h&&s&&De.size(s.dims)>0,te=["type","type"];B&&te.push("type");let se=[{dims:x,dataType:t.dataType,gpuDataType:0}];h&&se.push({dims:P,dataType:t.dataType,gpuDataType:0});let H=pe=>{let ae=Ze("probs",t.dataType,t.dims),ge=Ze("v",r.dataType,r.dims),Ne=[ae,ge];B&&Ne.push(Ze("past_value",s.dataType,s.dims));let Fe=[kt("output",t.dataType,x)];h&&Fe.push(kt("present_value",t.dataType,P));let rt=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"}];return`
  const TILE_SIZE = ${l}u;
  var<workgroup> tileQ: array<${ae.type.value}, ${l*l}>;
  var<workgroup> tileK: array<${ae.type.value}, ${l*l}>;
  ${pe.registerUniforms(rt).declareVariables(...Ne,...Fe)}
  ${pe.mainStart([l,l,1])}
   let headIdx = workgroup_id.z;
   let m = global_id.y;
   let n = global_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   ${B&&h?`
    let pastValueOffset = headIdx * uniforms.N * uniforms.past_sequence_length + n;
    let vOffset = headIdx * uniforms.N * uniforms.kv_sequence_length + n;
      `:`
   let offsetB = headIdx * uniforms.N * uniforms.K + n;
            `}
    ${h?"let presentValueOffset = headIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${ae.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${B&&h?`
        if (w + local_id.y < uniforms.past_sequence_length) {
          tileK[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else {
          tileK[idx] = v[vOffset + (w + local_id.y - uniforms.past_sequence_length) * uniforms.N];
        }
      `:`
        tileK[idx] = v[offsetB + (w + local_id.y) * uniforms.N];
      `}
        ${h?"present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileK[idx];":""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${s!==void 0};${e}`,inputDependencies:te},getRunData:()=>({outputs:se,dispatchGroup:O,programUniforms:z}),getShaderSource:H}},An=(e,t,r,s,n,i,o,d,p,h,P)=>{let x=Math.min(e.outputCount,1+(o?1:0)+(d?1:0)),l=h.kvNumHeads!==void 0||x>1?h.pastSequenceLength:0,O=l+h.kvSequenceLength,z=p&&De.size(p.dims)>0?p:void 0,B=[t,r];h.kvNumHeads===void 0&&x>1&&o&&De.size(o.dims)>0&&B.push(o),z&&B.push(z);let te=e.compute(_l(x,t,r,o,z,h,P,l),{inputs:B,outputs:h.kvNumHeads===void 0&&x>1?[-1,1]:[-1]})[0];e.compute(di(te,h.batchSize*h.numHeads*h.sequenceLength,O),{inputs:[te],outputs:[]});let se=[te,s];h.kvNumHeads===void 0&&x>1&&d&&De.size(d.dims)>0&&se.push(d),e.compute(gl(x,te,s,d,h,l),{inputs:se,outputs:h.kvNumHeads===void 0&&x>1?[0,2]:[0]})},wl=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],s=t.sequenceLength,n=t.inputHiddenSize,i=t.headSize,o=12,d={x:Math.ceil(t.headSize/o),y:Math.ceil(t.sequenceLength/o),z:t.batchSize*t.numHeads},p=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:12,data:s},{type:12,data:n},{type:12,data:i},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],P=x=>{let l=kt("output_q",p[0].dataType,r),O=kt("output_k",p[0].dataType,r),z=kt("output_v",p[0].dataType,r),B=Ze("input",p[0].dataType,p[0].dims),te=Ze("weight",p[1].dataType,p[1].dims),se=Ze("bias",p[2].dataType,p[2].dims),H=B.type.storage,pe=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${o}u;
  var<workgroup> tileInput: array<${H}, ${o*o}>;
  var<workgroup> tileWeightQ: array<${H}, ${o*o}>;
  var<workgroup> tileWeightK: array<${H}, ${o*o}>;
  var<workgroup> tileWeightV: array<${H}, ${o*o}>;
  ${x.registerUniforms(pe).declareVariables(B,te,se,l,O,z)}
  ${x.mainStart([o,o,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${H}(0);
    var valueK = ${H}(0);
    var valueV = ${H}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:d,programUniforms:h}),getShaderSource:P},{inputs:p,outputs:[-1,-1,-1]})},yl=(e,t)=>{let r=fl(e.inputs,t),[s,n,i]=wl(e,r);return An(e,s,n,i,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}}),Ml,bl,ci,vl,Tc=g(()=>{Et(),Ot(),Ut(),lr(),er(),Ml=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(s,n,i)=>{let o=n.length;if(o!==s.length)throw new Error(`${i}: num dimensions != ${o}`);n.forEach((d,p)=>{if(d!==s[p])throw new Error(`${i}: dim[${p}] do not match`)})};if(e[0].dims.length>1){let s=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,s,"Invalid input scale"),r(e[2].dims,s,"Invalid input B"),r(e[3].dims,s,"Invalid input mean"),r(e[4].dims,s,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},bl=(e,t)=>{let{epsilon:r,spatial:s,format:n}=t,i=e[0].dims,o=s?Zt(i[i.length-1]):1,d=n==="NHWC"&&i.length>1?o:1,p=De.size(i)/o,h=s,P=h?i.length:i,x=Ze("x",e[0].dataType,e[0].dims,o),l=Ze("scale",e[1].dataType,e[1].dims,d),O=Ze("bias",e[2].dataType,e[2].dims,d),z=Ze("inputMean",e[3].dataType,e[3].dims,d),B=Ze("inputVar",e[4].dataType,e[4].dims,d),te=kt("y",e[0].dataType,P,o),se=()=>{let pe="";if(s)pe=`let cOffset = ${i.length===1?"0u":n==="NHWC"?`outputIndices[${i.length-1}] / ${o}`:"outputIndices[1]"};`;else if(n==="NCHW")pe=`
            ${te.indicesSet("outputIndices","0","0")}
            let cOffset = ${te.indicesToOffset("outputIndices")};`;else{pe=`var cIndices = ${l.type.indices}(0);
                       cIndices[0] = outputIndices[${i.length-1}];`;for(let ae=1;ae<l.rank;ae++)pe+=`cIndices[${ae}] = outputIndices[${ae}];`;pe+=`let cOffset = ${l.indicesToOffset("cIndices")};`}return pe},H=pe=>`
  const epsilon = ${r};
  ${pe.registerUniform("outputSize","u32").declareVariables(x,l,O,z,B,te)}
  ${pe.mainStart()}
  ${pe.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${te.offsetToIndices(`global_idx * ${o}`)};
    ${se()}
    let scale = ${l.getByOffset("cOffset")};
    let bias = ${O.getByOffset("cOffset")};
    let inputMean = ${z.getByOffset("cOffset")};
    let inputVar = ${B.getByOffset("cOffset")};
    let x = ${x.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${te.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${s}_${o}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:H,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h?[{type:12,data:p},...wt(i)]:[{type:12,data:p}]})}},ci=e=>qt(e),vl=(e,t)=>{let{inputs:r,outputCount:s}=e,n=ci({...t,outputCount:s});if(E.webgpu.validateInputContent&&Ml(r,n),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(bl(r,n))}}),Tl,xl,pi,xc=g(()=>{Ut(),er(),Tl=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},xl=e=>{let t=e[0].dims,r=e[0].dims[2],s=De.size(t)/4,n=e[0].dataType,i=Ze("input",n,t,4),o=Ze("bias",n,[r],4),d=Ze("residual",n,t,4),p=kt("output",n,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:h=>`
  const channels = ${r}u / 4;
  ${h.declareVariables(i,o,d,p)}

  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let value = ${i.getByOffset("global_idx")}
      + ${o.getByOffset("global_idx % channels")} + ${d.getByOffset("global_idx")};
    ${p.setByOffset("global_idx","value")}
  }`}},pi=e=>{Tl(e.inputs),e.compute(xl(e.inputs))}}),El,ur,Pl,Cl,hi,$l,Sl,mi,kl,Al,fi,Il,Fl,_i,Ol,Dl,Wn,Ll,Gn,zl,Bl,Rl,jl,gi,Nl,Ul,Vl,Wl,wi,Gl,Kl,Hl,ql,yi,Ql,Mi,bi,vi,Ti,xi,Xl,Yl,Ei,Jl,Zl,Mo=g(()=>{Ot(),Ut(),lr(),er(),El=(e,t,r,s,n,i,o)=>{let d=Math.ceil(t/4),p="";typeof n=="string"?p=`${n}(a)`:p=n("a");let h=Ze("inputData",r,[d],4),P=kt("outputData",s,[d],4),x=[{name:"vec_size",type:"u32"}];return o&&x.push(...o),`
      ${e.registerUniforms(x).declareVariables(h,P)}

  ${i??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${h.getByOffset("global_idx")};
    ${P.setByOffset("global_idx",p)}
  }`},ur=(e,t,r,s,n,i=e.dataType,o,d)=>{let p=[{type:12,data:Math.ceil(De.size(e.dims)/4)}];return o&&p.push(...o),{name:t,shaderCache:{hint:n,inputDependencies:["type"]},getShaderSource:h=>El(h,De.size(e.dims),e.dataType,i,r,s,d),getRunData:h=>({outputs:[{dims:e.dims,dataType:i}],dispatchGroup:{x:Math.ceil(De.size(h[0].dims)/64/4)},programUniforms:p})}},Pl=e=>{e.compute(ur(e.inputs[0],"Abs","abs"))},Cl=e=>{e.compute(ur(e.inputs[0],"Acos","acos"))},hi=e=>{e.compute(ur(e.inputs[0],"Acosh","acosh"))},$l=e=>{e.compute(ur(e.inputs[0],"Asin","asin"))},Sl=e=>{e.compute(ur(e.inputs[0],"Asinh","asinh"))},mi=e=>{e.compute(ur(e.inputs[0],"Atan","atan"))},kl=e=>{e.compute(ur(e.inputs[0],"Atanh","atanh"))},Al=e=>qt(e),fi=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(ur(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},Il=e=>{let t,r,s=e.length>=2&&e[1].data!==0,n=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:t=s?e[1].getFloat32Array()[0]:-34028234663852886e22,r=n?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=s?e[1].getUint16Array()[0]:64511,r=n?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return qt({min:t,max:r})},Fl=(e,t)=>{let r=t||Il(e.inputs),s=yr(e.inputs[0].dataType);e.compute(ur(e.inputs[0],"Clip",n=>`clamp(${n}, vec4<${s}>(uniforms.min), vec4<${s}>(uniforms.max))`,void 0,r.cacheKey,void 0,[{type:e.inputs[0].dataType,data:r.min},{type:e.inputs[0].dataType,data:r.max}],[{name:"min",type:s},{name:"max",type:s}]),{inputs:[0]})},_i=e=>{e.compute(ur(e.inputs[0],"Ceil","ceil"))},Ol=e=>{e.compute(ur(e.inputs[0],"Cos","cos"))},Dl=e=>{e.compute(ur(e.inputs[0],"Cosh","cosh"))},Wn=e=>qt(e),Ll=(e,t)=>{let r=yr(e.inputs[0].dataType);e.compute(ur(e.inputs[0],"Elu",s=>`elu_vf32(${s})`,`
  const elu_alpha_ = ${r}(${t.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},Gn=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,zl=e=>{let t=yr(e.inputs[0].dataType);e.compute(ur(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,Gn(t)))},Bl=e=>{e.compute(ur(e.inputs[0],"Exp","exp"))},Rl=e=>{e.compute(ur(e.inputs[0],"Floor","floor"))},jl=e=>{let t=yr(e.inputs[0].dataType);e.compute(ur(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,Gn(t)))},gi=(e,t)=>{let r=yr(e.inputs[0].dataType);e.compute(ur(e.inputs[0],"LeakyRelu",s=>`select(leaky_relu_alpha_ * ${s}, ${s}, ${s} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},Nl=e=>{e.compute(ur(e.inputs[0],"Not",t=>`!${t}`))},Ul=e=>{e.compute(ur(e.inputs[0],"Neg",t=>`-${t}`))},Vl=e=>{e.compute(ur(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},Wl=e=>{let t=yr(e.inputs[0].dataType);e.compute(ur(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},wi=e=>{e.compute(ur(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},Gl=e=>qt(e),Kl=(e,t)=>{let r=yr(e.inputs[0].dataType);e.compute(ur(e.inputs[0],"HardSigmoid",s=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${s} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},Hl=e=>{e.compute(ur(e.inputs[0],"Sin","sin"))},ql=e=>{e.compute(ur(e.inputs[0],"Sinh","sinh"))},yi=e=>{e.compute(ur(e.inputs[0],"Sqrt","sqrt"))},Ql=e=>{e.compute(ur(e.inputs[0],"Tan","tan"))},Mi=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,bi=e=>{e.compute(ur(e.inputs[0],"Tanh",Mi))},vi=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${Mi("v")};
}
`,Ti=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,xi=e=>{let t=yr(e.inputs[0].dataType);e.compute(ur(e.inputs[0],"FastGelu",Ti,vi(t),void 0,e.inputs[0].dataType))},Xl=(e,t)=>{let r=yr(e.inputs[0].dataType);return e.compute(ur(e.inputs[0],"ThresholdedRelu",s=>`select(vec4<${r}>(0.0), ${s}, ${s} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},Yl=e=>{e.compute(ur(e.inputs[0],"Log","log"))},Ei=(e,t)=>`
const alpha = vec4<${e}>(${t});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,Jl=e=>`quick_gelu_impl(${e})`,Zl=(e,t)=>{let r=yr(e.inputs[0].dataType);e.compute(ur(e.inputs[0],"QuickGelu",Jl,Ei(r,t.alpha),t.cacheKey,e.inputs[0].dataType))}}),eu,tu,bo,Ec=g(()=>{Ut(),er(),Mo(),eu=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},tu=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=Ze("input",e[0].dataType,e[0].dims,4),s=Ze("bias",e[0].dataType,[e[0].dims[2]],4),n=kt("output",e[0].dataType,t,4),i=De.size(t)/4,o=or(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:d=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${d.declareVariables(r,s,n)}

  ${Gn(o)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${n.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},bo=e=>{eu(e.inputs),e.compute(tu(e.inputs))}}),ru,Pi,Ms,su,Ci,nu,ou,iu,$i,au,lu,uu,Si,Pc=g(()=>{Ot(),Ut(),er(),ru=(e,t,r,s,n,i,o,d,p,h,P,x)=>{let l,O;typeof d=="string"?l=O=(H,pe)=>`${d}((${H}),(${pe}))`:typeof d=="function"?l=O=d:(l=d.scalar,O=d.vector);let z=kt("outputData",P,s.length,4),B=Ze("aData",p,t.length,4),te=Ze("bData",h,r.length,4),se;if(n)if(i){let H=De.size(t)===1,pe=De.size(r)===1,ae=t.length>0&&t[t.length-1]%4===0,ge=r.length>0&&r[r.length-1]%4===0;H||pe?se=z.setByOffset("global_idx",O(H?`${B.type.value}(${B.getByOffset("0")}.x)`:B.getByOffset("global_idx"),pe?`${te.type.value}(${te.getByOffset("0")}.x)`:te.getByOffset("global_idx"))):se=`
            let outputIndices = ${z.offsetToIndices("global_idx * 4u")};
            let offsetA = ${B.broadcastedIndicesToOffset("outputIndices",z)};
            let offsetB = ${te.broadcastedIndicesToOffset("outputIndices",z)};
            ${z.setByOffset("global_idx",O(o||ae?B.getByOffset("offsetA / 4u"):`${B.type.value}(${B.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||ge?te.getByOffset("offsetB / 4u"):`${te.type.value}(${te.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else se=z.setByOffset("global_idx",O(B.getByOffset("global_idx"),te.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let H=(pe,ae,ge="")=>{let Ne=`aData[indexA${ae}][componentA${ae}]`,Fe=`bData[indexB${ae}][componentB${ae}]`;return`
            let outputIndices${ae} = ${z.offsetToIndices(`global_idx * 4u + ${ae}u`)};
            let offsetA${ae} = ${B.broadcastedIndicesToOffset(`outputIndices${ae}`,z)};
            let offsetB${ae} = ${te.broadcastedIndicesToOffset(`outputIndices${ae}`,z)};
            let indexA${ae} = offsetA${ae} / 4u;
            let indexB${ae} = offsetB${ae} / 4u;
            let componentA${ae} = offsetA${ae} % 4u;
            let componentB${ae} = offsetB${ae} % 4u;
            ${pe}[${ae}] = ${ge}(${l(Ne,Fe)});
          `};P===9?se=`
            var data = vec4<u32>(0);
            ${H("data",0,"u32")}
            ${H("data",1,"u32")}
            ${H("data",2,"u32")}
            ${H("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:se=`
            ${H("outputData[global_idx]",0)}
            ${H("outputData[global_idx]",1)}
            ${H("outputData[global_idx]",2)}
            ${H("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(B,te,z)}

        ${x??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${se}
      }`},Pi=(e,t,r,s,n,i,o=r.dataType)=>{let d=!De.areEqual(r.dims,s.dims),p=r.dims,h=De.size(r.dims),P=!1,x=!1,l=[d];if(d){let O=Gr.calcShape(r.dims,s.dims,!1);if(!O)throw new Error("Can't perform binary op on the given tensors");p=O,h=De.size(p);let z=De.size(r.dims)===1,B=De.size(s.dims)===1,te=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,se=s.dims.length>0&&s.dims[s.dims.length-1]%4===0;l.push(z),l.push(B),l.push(te),l.push(se);let H=1;for(let pe=1;pe<p.length;pe++){let ae=r.dims[r.dims.length-pe]??1,ge=s.dims[s.dims.length-pe]??1;if(ae===ge)H*=ae;else break}H%4===0?(x=!0,P=!0):(z||B||te||se)&&(P=!0)}else P=!0;return l.push(P),{name:e,shaderCache:{hint:t+l.map(O=>O.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:O=>ru(O,r.dims,s.dims,p,P,d,x,n,r.dataType,s.dataType,o,i),getRunData:()=>({outputs:[{dims:p,dataType:o}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:12,data:Math.ceil(De.size(p)/4)},...wt(r.dims,s.dims,p)]})}},Ms=(e,t,r,s,n,i)=>{e.compute(Pi(t,n??"",e.inputs[0],e.inputs[1],r,s,i))},su=e=>{Ms(e,"Add",(t,r)=>`${t}+${r}`)},Ci=e=>{Ms(e,"Div",(t,r)=>`${t}/${r}`)},nu=e=>{Ms(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},ou=e=>{Ms(e,"Mul",(t,r)=>`${t}*${r}`)},iu=e=>{let t=Ze("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Ms(e,"Pow",{scalar:(r,s)=>`pow_custom(${r},${s})`,vector:(r,s)=>`pow_vector_custom(${r},${s})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},$i=e=>{Ms(e,"Sub",(t,r)=>`${t}-${r}`)},au=e=>{Ms(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},lu=e=>{Ms(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},uu=e=>{Ms(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Si=e=>{Ms(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}}),du,ki,cu,pu,Ai,hu,Cc=g(()=>{Ot(),Ut(),lr(),er(),du=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,s=e[r],n=s.dataType,i=s.dims.length;e.forEach((o,d)=>{if(d!==r){if(o.dataType!==n)throw new Error("input tensors should be one type");if(o.dims.length!==i)throw new Error("input tensors should have the same shape");o.dims.forEach((p,h)=>{if(h!==t&&p!==s.dims[h])throw new Error("non concat dimensions must match")})}})},ki=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,cu=(e,t)=>{let r=e.length,s=[];for(let n=0;n<r;++n){let i=t.setByOffset("global_idx",e[n].getByIndices("indices"));r===1?s.push(i):n===0?s.push(`if (inputIndex == ${n}u) { ${i} }`):n===r-1?s.push(`else { ${i} }`):s.push(`else if (inputIndex == ${n}) { ${i} }`)}return s.join(`
`)},pu=(e,t,r,s)=>{let n=De.size(r),i=new Array(e.length),o=new Array(e.length),d=0,p=[],h=[],P=[{type:12,data:n}];for(let B=0;B<e.length;++B)d+=e[B].dims[t],i[B]=d,h.push(e[B].dims.length),o[B]=Ze(`input${B}`,s,h[B]),p.push("rank"),P.push({type:12,data:i[B]});for(let B=0;B<e.length;++B)P.push(...wt(e[B].dims));P.push(...wt(r));let x=kt("output",s,r.length),l=x.indicesGet("indices",t),O=Array.from(Array(i.length).keys()).map(B=>`uniforms.sizeInConcatAxis${B}`).join(","),z=B=>`

  ${(()=>{B.registerUniform("outputSize","u32");for(let te=0;te<e.length;te++)B.registerUniform(`sizeInConcatAxis${te}`,"u32");return B.declareVariables(...o,x)})()}

  ${ki(i.length,O)}

  ${B.mainStart()}
    ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${x.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${l});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${i.length}u>(${O});
      ${l} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${cu(o,x)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:r,dataType:s}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:P}),getShaderSource:z}},Ai=(e,t)=>{let r=e.inputs,s=r[0].dims,n=De.normalizeAxis(t.axis,s.length);du(r,n);let i=s.slice();i[n]=r.reduce((d,p)=>d+(p.dims.length>n?p.dims[n]:0),0);let o=r.filter(d=>De.size(d.dims)>0);e.compute(pu(o,n,i,r[0].dataType),{inputs:o})},hu=e=>qt({axis:e.axis})}),Vs,sn,nn,vo,on=g(()=>{Ot(),Ut(),Vs=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},sn=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},nn=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},vo=e=>{let t=(e==null?void 0:e.activation)||"";if(t==="HardSigmoid"){let[r,s]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:t,alpha:r,beta:s}}else if(t==="Clip"){let[r,s]=(e==null?void 0:e.activation_params)||[ms,Ps];return{activation:t,clipMax:s,clipMin:r}}else if(t==="LeakyRelu"){let[r]=(e==null?void 0:e.activation_params)||[.01];return{activation:t,alpha:r}}return{activation:t}}}),rs,To,xo=g(()=>{rs=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},To=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),Ii,mu=g(()=>{Ii=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),fu,Eo,Po,Fi,_u,Co,gu,$o,So=g(()=>{Ot(),Ut(),er(),on(),xo(),fu=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,Eo=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Po=(e,t,r="f32",s,n=!1,i=32,o=!1,d=32)=>{let p=t[1]*e[1],h=t[0]*e[0],P=n?p:i,x=n?i:p,l=P/t[0],O=i/t[1];if(!((n&&l===4&&e[1]===4||!n&&(l===3||l===4))&&P%t[0]===0&&i%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${n} is true, innerElementSize ${l} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${l} must be 3 or 4.
  tileAWidth ${P} must be divisible by workgroupSize[0]${t[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${l}<${r}>, ${P/l}>, ${x}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${i}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${l};
const tileInner = ${i};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${p};

  let num_tiles = ${o?`${Math.ceil(d/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${d}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${O};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${fu(n,s)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${O}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${s?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${l===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Eo(n,l)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},Fi=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,_u=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Co=(e,t,r="f32",s,n=!1,i=32,o=!1,d=32,p=!1)=>{let h=e[1]*t[1],P=e[0]*t[0],x=n?h:i,l=n?i:h;if(!(l%t[1]===0&&x%t[0]===0&&i%t[1]===0))throw new Error(`tileAHight ${l} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${x} must be divisible by workgroupSize[0]${t[0]}, tileInner ${i} must be divisible by workgroupSize[1]${t[1]}`);let O=l/t[1],z=x/t[0],B=i/t[1],te=p?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${h};
    let globalColStart = i32(workgroupId.x) * ${P};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${l}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${x}; inputCol = inputCol + ${t[0]}) {
          ${Fi(n,s)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${P}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${s?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${h};

let tileRowA = i32(localId.y) * ${O};
let tileColA = i32(localId.x) * ${z};
let tileRowB = i32(localId.y) * ${B};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${O}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${z}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${Fi(n,s)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${B}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${s?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${_u(n)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${x}>, ${l}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${P}>, ${i}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${i};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(d/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${d}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;
    ${te}
  }
`},gu=(e,t,r,s,n,i=!1)=>{let[o,d,p]=n,[h,P,x,l]=s,O=Vn(o,p),z=Vn(d,p),B=or(s[0].type.tensor),te=()=>{let H=P.rank,pe=h.rank,ae=`var aIndices: ${P.type.indices};`;for(let ge=H-2-1,Ne=pe-1;ge>=0;ge--,Ne--)ae+=`
aIndices[${ge}] = ${pe>1?`batchIndices[${Ne}]`:"batchIndices"};`;return O.forEach(ge=>{ae+=`
aIndices[${ge}] = 0;`}),ae+=`
aIndices[${H-2}] = u32(row);
                   aIndices[${H-1}] = u32(colIn);`,ae},se=()=>{let H=x.rank,pe=h.rank,ae=`var bIndices: ${x.type.indices};`;for(let ge=H-2-1,Ne=pe-1;ge>=0;ge--,Ne--)ae+=`
bIndices[${ge}] = ${pe>1?`batchIndices[${Ne}]`:"batchIndices"};`;return z.forEach(ge=>{ae+=`
bIndices[${ge}] = 0;`}),ae+=`
bIndices[${H-2}] = u32(row);
                   bIndices[${H-1}] = u32(colIn);`,ae};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${rs(e,B)} {
      var value = ${rs(e,B)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${te()}
        value = ${P.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${rs(e,B)} {
      var value = ${rs(e,B)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${se()}
        value = ${x.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${rs(e,B)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${i?"bias[colIn]":`${rs(e,B)}(bias[row])`};`:""}
        ${r}
        ${l.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},$o=(e,t,r,s,n=!1,i)=>{let o=e[0].dims,d=e[1].dims,p=o.slice(0,-2),h=d.slice(0,-2),P=s?s.slice(0,-2):r.slice(0,-2),x=De.size(P),l=o[o.length-2],O=o[o.length-1],z=d[d.length-1],B=O%4===0&&z%4===0,te=l<=8?[4,1,1]:[4,4,1],se=[8,8,1],H=[Math.ceil(z/se[0]/te[0]),Math.ceil(l/se[1]/te[1]),Math.ceil(x/se[2]/te[2])],pe=B?4:1,ae=[...p,l,O/pe],ge=ae.length,Ne=[...h,O,z/pe],Fe=Ne.length,rt=[x,l,z/pe],vt=[{type:6,data:l},{type:6,data:z},{type:6,data:O}];sn(t,vt),vt.push(...wt(P,ae,Ne));let $t=["rank","rank"],Yt=e.length>2;Yt&&(vt.push(...wt(e[2].dims)),$t.push("rank")),vt.push(...wt(rt));let rr=zt=>{let Tr=P.length,Ir=Xo("batchDims",e[0].dataType,Tr,1),nr=or(e[0].dataType),Er=Ze("a",e[0].dataType,ge,pe),Ft=Ze("b",e[1].dataType,Fe,pe),Nt=kt("result",e[0].dataType,rt.length,pe),hr=[Er,Ft];if(Yt){let Hr=n?pe:1;hr.push(Ze("bias",e[2].dataType,e[2].dims.length,Hr))}let Ve=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];nn(t,Ve);let ct=or(Nt.type.tensor),Vt=Vs(t,Nt.type.value,ct),xr=gu(pe,Yt,Vt,[Ir,Er,Ft,Nt],[p,h,P],n);return`
  ${zt.registerUniforms(Ve).registerInternalVariables(Ir).declareVariables(...hr,Nt)}
  ${xr}
  ${B?Po(te,se,nr,Ir):Co(te,se,nr,Ir)}
                   `};return{name:"MatMul",shaderCache:{hint:`${te};${t.activation};${B};${n}`,inputDependencies:$t},getRunData:()=>({outputs:[{dims:i?i(r):r,dataType:e[0].dataType}],dispatchGroup:{x:H[0],y:H[1],z:H[2]},programUniforms:vt}),getShaderSource:rr}}}),wu,Oi,$c=g(()=>{Ot(),xe(),er(),on(),xo(),mu(),So(),wu=(e,t,r,s,n=!1,i,o=4,d=4,p=4,h="f32")=>{let P=vt=>{switch(vt){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${vt} is not supported.`)}},x=vt=>{switch(vt){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${vt} is not supported.`)}},l=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,O=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,z=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",B=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",te=e?"row":"col",se=e?"col":"row",H=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${te} / outWidth;
    let outCol = ${te} % outWidth;

    let WRow = ${se} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${se} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${se} % inChannels;
    var resData = ${rs(o,h)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${z} && xCol >= 0 && xCol < ${B}) {
      ${l}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${P(o)}
    }
    return resData;`,pe=e?t&&s?`
    let col = colIn * ${o};
    ${H}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${H}
    }
    return ${rs(o,h)}(0.0);`:s&&r?`
    let col = colIn * ${o};
    ${H}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${H}
    }
    return ${rs(o,h)}(0.0);`,ae=`${x(d)}`,ge=rs(p,h),Ne=rs(e?o:d,h),Fe=rs(e?d:o,h),rt=Vs(i,ge,h);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Ne} {
      ${e?pe:ae}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Fe} {
      ${e?ae:pe}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${ge}) {
      let col = colIn * ${p};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${O}
      ${To(n)}
      ${rt}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Oi=(e,t,r,s,n,i,o,d,p)=>{let h=t.format==="NHWC",P=h?e[0].dims[3]:e[0].dims[1],x=r[0],l=h?r[2]:r[3],O=h?r[1]:r[2],z=h?r[3]:r[1],B=h&&(P%4===0||P%3===0)&&z%4===0,te=h?z:l*O,se=h?l*O:z,H=[8,8,1],pe=s<=8?[4,1,1]:[4,4,1],ae=[Math.ceil(te/H[0]/pe[0]),Math.ceil(se/H[1]/pe[1]),Math.ceil(x/H[2]/pe[2])];_r("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${ae}`);let ge=B?h&&P%4!==0?3:4:1,Ne=H[1]*pe[1],Fe=H[0]*pe[0],rt=Math.max(H[0]*ge,H[1]),vt=s%Ne===0,$t=n%Fe===0,Yt=i%rt===0,rr=B?[ge,4,4]:[1,1,1],zt=[{type:6,data:s},{type:6,data:n},{type:6,data:i},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];sn(t,zt),zt.push(...wt(e[0].dims,e[1].dims));let Tr=["rank","rank"];o&&(zt.push(...wt(e[2].dims)),Tr.push("rank")),zt.push(...wt(r));let Ir=nr=>{let Er=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];nn(t,Er);let Ft=B?4:1,Nt=or(e[0].dataType),hr=`
      fn setOutputAtIndex(flatIndex : i32, value : ${B?`vec4<${Nt}>`:Nt}) {
        result[flatIndex] = ${B?`vec4<${Nt}>`:Nt}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${B?`vec4<${Nt}>`:Nt}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${B?"/ 4":""}, value);
      }`,Ve=Ze("x",e[0].dataType,e[0].dims.length,ge===3?1:ge),ct=Ze("w",e[1].dataType,e[1].dims.length,Ft),Vt=[Ve,ct],xr=kt("result",e[0].dataType,r.length,Ft);if(o){let Hr=Ze("bias",e[2].dataType,e[2].dims.length,Ft);Vt.push(Hr),hr+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${B?`vec4<${Nt}>`:Nt} {
          return bias[coords.${h?"w":"y"}${B?"/ 4":""}];
        }`}return`
        ${Ii("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${nr.registerUniforms(Er).declareVariables(...Vt,xr)}
        ${hr}
        ${wu(h,vt,$t,Yt,o,t,rr[0],rr[1],rr[2],Nt)}
        ${B?Po(pe,H,Nt,void 0,!h,rt):Co(pe,H,Nt,void 0,!h,rt,!1,void 0,d)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${ge};${B};${vt};${$t};${Yt};${Ne};${Fe};${rt}`,inputDependencies:Tr},getRunData:()=>({outputs:[{dims:p?p(r):r,dataType:e[0].dataType}],dispatchGroup:{x:ae[0],y:ae[1],z:ae[2]},programUniforms:zt}),getShaderSource:Ir}}}),yu,Di,Kn,Li,zi,Mu,Bi,bu,Sc=g(()=>{Ot(),xe(),Ut(),er(),on(),xo(),yu=e=>{let t=1;for(let r=0;r<e.length;r++)t*=e[r];return t},Di=e=>typeof e=="number"?[e,e,e]:e,Kn=(e,t)=>t<=1?e:e+(e-1)*(t-1),Li=(e,t,r,s=1)=>{let n=Kn(t,s);return Math.floor((e[0]*(r-1)-r+n)/2)},zi=(e,t,r,s,n)=>{n==null&&(n=Li(e,t[0],s[0]));let i=[0,0,0,r];for(let o=0;o<3;o++)e[o]+2*n>=t[o]&&(i[o]=Math.trunc((e[o]-t[o]+2*n)/s[o]+1));return i},Mu=(e,t,r,s,n,i,o,d,p,h)=>{let P,x,l,O;if(e==="VALID"&&(e=0),typeof e=="number"){P={top:e,bottom:e,left:e,right:e,front:e,back:e};let z=zi([t,r,s,1],[d,p,h],1,[n,i,o],e);x=z[0],l=z[1],O=z[2]}else if(Array.isArray(e)){if(!e.every((B,te,se)=>B===se[0]))throw Error(`Unsupported padding parameter: ${e}`);P={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let z=zi([t,r,s,1],[d,p,h],1,[n,i,o],e[0]);x=z[0],l=z[1],O=z[2]}else if(e==="SAME_UPPER"){x=Math.ceil(t/n),l=Math.ceil(r/i),O=Math.ceil(s/o);let z=(x-1)*n+d-t,B=(l-1)*i+p-r,te=(O-1)*o+h-s,se=Math.floor(z/2),H=z-se,pe=Math.floor(B/2),ae=B-pe,ge=Math.floor(te/2),Ne=te-ge;P={top:pe,bottom:ae,left:ge,right:Ne,front:se,back:H}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:P,outDepth:x,outHeight:l,outWidth:O}},Bi=(e,t,r,s,n,i=!1,o="channelsLast")=>{let d,p,h,P,x;if(o==="channelsLast")[d,p,h,P,x]=e;else if(o==="channelsFirst")[d,x,p,h,P]=e;else throw new Error(`Unknown dataFormat ${o}`);let[l,,O,z,B]=t,[te,se,H]=Di(r),[pe,ae,ge]=Di(s),Ne=Kn(O,pe),Fe=Kn(z,ae),rt=Kn(B,ge),{padInfo:vt,outDepth:$t,outHeight:Yt,outWidth:rr}=Mu(n,p,h,P,te,se,H,Ne,Fe,rt),zt=i?l*x:l,Tr=[0,0,0,0,0];return o==="channelsFirst"?Tr=[d,zt,$t,Yt,rr]:o==="channelsLast"&&(Tr=[d,$t,Yt,rr,zt]),{batchSize:d,dataFormat:o,inDepth:p,inHeight:h,inWidth:P,inChannels:x,outDepth:$t,outHeight:Yt,outWidth:rr,outChannels:zt,padInfo:vt,strideDepth:te,strideHeight:se,strideWidth:H,filterDepth:O,filterHeight:z,filterWidth:B,effectiveFilterDepth:Ne,effectiveFilterHeight:Fe,effectiveFilterWidth:rt,dilationDepth:pe,dilationHeight:ae,dilationWidth:ge,inShape:e,outShape:Tr,filterShape:t}},bu=(e,t,r,s,n,i)=>{let o=i==="channelsLast";o?e[0].dims[3]:e[0].dims[1];let d=[64,1,1],p={x:r.map((te,se)=>se)},h=[Math.ceil(yu(p.x.map(te=>r[te]))/d[0]),1,1];_r("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${h}`);let P=1,x=De.size(r),l=[{type:12,data:x},{type:12,data:s},{type:12,data:n},{type:12,data:t.strides},{type:12,data:t.dilations}];sn(t,l),l.push(...wt(e[0].dims,e[1].dims));let O=["rank","rank"],z=e.length===3;z&&(l.push(...wt(e[2].dims)),O.push("rank")),l.push(...wt(r));let B=te=>{let se=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:s.length},{name:"pads",type:"u32",length:n.length},{name:"strides",type:"u32",length:t.strides.length},{name:"dilations",type:"u32",length:t.dilations.length}];nn(t,se);let H=1,pe=or(e[0].dataType),ae=Ze("x",e[0].dataType,e[0].dims.length,P),ge=Ze("W",e[1].dataType,e[1].dims.length,H),Ne=[ae,ge],Fe=kt("result",e[0].dataType,r.length,H),rt="";if(z){let Yt=Ze("bias",e[2].dataType,e[2].dims.length,H);Ne.push(Yt),rt+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${pe} {
          return bias[${o?St("coords",4,5):St("coords",1,5)}];
        }`}let vt=rs(P,pe),$t=Vs(t,vt,pe);return`
            ${rt}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${ae.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${ge.getByIndices("aIndices")};
            }
          ${te.registerUniforms(se).declareVariables(...Ne,Fe)}
          ${te.mainStart()}
          ${te.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${Fe.offsetToIndices("global_idx")};
              let batch = ${St("coords",0,ae.rank)};
              let d2 = ${o?St("coords",ae.rank-1,ae.rank):St("coords",1,ae.rank)};
              let xFRCCorner = vec3<u32>(${o?St("coords",1,ae.rank):St("coords",2,ae.rank)},
              ${o?St("coords",2,ae.rank):St("coords",3,ae.rank)},
              ${o?St("coords",3,ae.rank):St("coords",4,ae.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${o?St("uniforms.x_shape",1,ae.rank):St("uniforms.x_shape",2,ae.rank)};
              let xShapeZ = ${o?St("uniforms.x_shape",2,ae.rank):St("uniforms.x_shape",3,ae.rank)};
              let xShapeW = ${o?St("uniforms.x_shape",3,ae.rank):St("uniforms.x_shape",4,ae.rank)};
              let xShapeU = ${o?St("uniforms.x_shape",4,ae.rank):St("uniforms.x_shape",1,ae.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${o?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${o?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${o?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${o?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${z?"value = value + getBiasByOutputCoords(coords)":""};
              ${$t}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${t.cacheKey};${o};${P};${z}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:h[0],y:h[1],z:h[2]},programUniforms:l}),getShaderSource:B}}}),Ri,vu,kc=g(()=>{Ot(),Ut(),er(),on(),Ri=(e,t,r,s)=>{let n=e.length>2,i=n?"value += b[output_channel];":"",o=e[0].dims,d=e[1].dims,p=t.format==="NHWC",h=p?r[3]:r[1],P=h/t.group,x=p&&P>=4?Zt(h):1,l=De.size(r)/x,O=[{type:12,data:l},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:P}];sn(t,O),O.push(...wt(o,[d[0],d[1],d[2],d[3]/x]));let z=n?["rank","rank","rank"]:["rank","rank"];O.push(...wt([r[0],r[1],r[2],r[3]/x]));let B=te=>{let se=kt("output",e[0].dataType,r.length,x),H=or(se.type.tensor),pe=Vs(t,se.type.value,H),ae=Ze("x",e[0].dataType,o.length),ge=Ze("w",e[1].dataType,d.length,x),Ne=[ae,ge];n&&Ne.push(Ze("b",e[2].dataType,e[2].dims,x));let Fe=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];nn(t,Fe);let rt=p?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${ae.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${ge.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${ae.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${ge.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${te.registerUniforms(Fe).declareVariables(...Ne,se)}

  ${te.mainStart()}
    ${te.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${se.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${p?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${p?1:2}], outputIndices[${p?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${x} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${p?2:1}];

    var value: ${se.type.value} = ${se.type.value}(0);
    ${rt}
    ${i}
    ${pe}
    ${se.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${t.cacheKey}_${x}`,inputDependencies:z},getRunData:()=>({outputs:[{dims:s?s(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:O}),getShaderSource:B}},vu=(e,t,r,s)=>{let n=e.length>2,i=Zt(r[3]),o=Zt(r[2]),d=De.size(r)/i/o,p=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/i],h=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/i],P=[r[0],r[1],r[2],r[3]/i],x=[{type:12,data:d},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];sn(t,x),x.push(...wt(p,h,P));let l=(o-1)*t.strides[1]+h[1],O=z=>{let B=kt("output",e[0].dataType,P.length,i),te=or(B.type.tensor),se=Vs(t,B.type.value,te),H=Ze("x",e[0].dataType,p.length,i),pe=Ze("w",e[1].dataType,h.length,i),ae=[H,pe];n&&ae.push(Ze("b",e[2].dataType,e[2].dims,i));let ge=n?"value += b[output_channel];":"",Ne=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return nn(t,Ne),`
  ${z.registerUniforms(Ne).declareVariables(...ae,B)}
  ${z.mainStart()}
    ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${o}u;
    let col = (index1 % width1) * ${o}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${H.type.value}, ${l}>;
    var values: array<${B.type.value}, ${o}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${h[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${l}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${H.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${H.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${h[1]}; w_width++) {
          let w_val = ${pe.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${o}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${o}u; i++) {
      var value = values[i];
      ${ge}
      ${se}
      ${B.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${i};${o};${l};${h[0]};${h[1]}`,inputDependencies:n?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:x}),getShaderSource:O}}}),ko,Tu,xu,Eu=g(()=>{Ot(),Ut(),So(),er(),on(),ko=(e,t,r,s,n=!1,i)=>{let o=e[0].dims,d=e[1].dims,p=o[o.length-2],h=d[d.length-1],P=o[o.length-1],x=Zt(h),l=Zt(P),O=Zt(p),z=De.size(r)/x/O,B=e.length>2,te=s?s.slice(0,-2):r.slice(0,-2),se=[De.size(te),p,h],H=[{type:12,data:z},{type:12,data:p},{type:12,data:h},{type:12,data:P}];sn(t,H),H.push(...wt(te,o,d)),B&&H.push(...wt(e[2].dims)),H.push(...wt(se));let pe=ae=>{let ge=Xo("batch_dims",e[0].dataType,te.length),Ne=Ze("a",e[0].dataType,o.length,l),Fe=Ze("b",e[1].dataType,d.length,x),rt=kt("output",e[0].dataType,se.length,x),vt=or(rt.type.tensor),$t=Vs(t,rt.type.value,vt),Yt=[Ne,Fe],rr="";if(B){let hr=n?x:1;Yt.push(Ze("bias",e[2].dataType,e[2].dims.length,hr)),rr=`${n?`value += bias[col / ${hr}];`:`value += ${rt.type.value}(bias[row + i]);`}`}let zt=o.slice(0,-2),Tr=d.slice(0,-2),Ir=Vn(zt,te),nr=Vn(Tr,te),Er=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];nn(t,Er);let Ft=(hr,Ve)=>{let ct=hr.rank,Vt=hr.name;if(ct===2)return`var ${Vt}_indices = ${hr.type.indices}(0u, 0u);`;let xr=ge.rank,Hr=`var ${Vt}_indices: ${hr.type.indices};`;for(let Qr=ct-2-1,ro=xr-1;Qr>=0;Qr--,ro--)Hr+=`
${Vt}_indices[${Qr}] = ${xr>1?`batch_indices[${ro}]`:"batch_indices"};`;return Ve.forEach(Qr=>{Hr+=`
${Vt}_indices[${Qr}] = 0;`}),Hr+=`${Vt}_indices[${ct-2}] = 0u;
                     ${Vt}_indices[${ct-1}] = 0u;`,Hr},Nt=()=>{let hr=`var a_data: ${Ne.type.value};`;for(let Ve=0;Ve<l;Ve++)hr+=`
              let b_data${Ve} = b[(b_offset + (k + ${Ve}) * uniforms.N + col) / ${x}];`;for(let Ve=0;Ve<O;Ve++){hr+=`a_data = a[(a_offset + (row + ${Ve}) * uniforms.K + k) / ${l}];`;for(let ct=0;ct<l;ct++)hr+=`
            values[${Ve}] = fma(${Fe.type.value}(a_data${l===1?"":`[${ct}]`}), b_data${ct}, values[${Ve}]);
`}return hr};return`
  ${ae.registerUniforms(Er).registerInternalVariables(ge).declareVariables(...Yt,rt)}
  ${ae.mainStart()}
    ${ae.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${x})) * ${x};
    var index1 = global_idx / (uniforms.N / ${x});
    let stride1 = uniforms.M / ${O};
    let row = (index1 % stride1) * ${O};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${ge.offsetToIndices("batch")};`}
    ${Ft(Ne,Ir)}
    let a_offset = ${Ne.indicesToOffset("a_indices")};
    ${Ft(Fe,nr)}
    let b_offset = ${Fe.indicesToOffset("b_indices")};
    var values: array<${rt.type.value}, ${O}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${l}) {
      ${Nt()}
    }
    for (var i = 0u; i < ${O}u; i++) {
      var value = values[i];
      ${rr}
      ${$t}
      let cur_indices = ${rt.type.indices}(batch, row + i, col);
      let offset = ${rt.indicesToOffset("cur_indices")};
      ${rt.setByOffset(`offset / ${x}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${x};${l};${O};${n}`,inputDependencies:B?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:i?i(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(z/64)},programUniforms:H}),getShaderSource:pe}},Tu=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},xu=e=>{Tu(e.inputs);let t=Gr.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let r=t[t.length-1],s=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&s<8?e.compute(ko(e.inputs,{activation:""},t)):e.compute($o(e.inputs,{activation:""},t))}}),Pu,Ao,Cu,Hn,ji,Ni,Ui,$u,Vi,pn=g(()=>{Ut(),$c(),Sc(),So(),kc(),on(),Eu(),Us(),Pu=(e,t,r,s,n,i)=>{let o=e[0],d=e.slice(i?1:2,i?3:4),p=d.length,h=t[0],P=t.slice(2).map((l,O)=>l+(l-1)*(r[O]-1)),x=d.map((l,O)=>l+s[O]+s[O+p]).map((l,O)=>Math.floor((l-P[O]+n[O])/n[O]));return x.splice(0,0,o),x.splice(i?3:1,0,h),x},Ao=[2,3,1,0],Cu=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[1]*t.group;if(r!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Hn=(e,t)=>{let r=e.kernelShape.slice();r.length<t[1].dims.length-2&&r.push(...Array(t[1].dims.length-2-r.length).fill(0));for(let i=2;i<t[1].dims.length;++i)r[i-2]===0&&(r[i-2]=t[1].dims[i]);let s=e.pads.slice();wr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,s,e.format==="NHWC",e.autoPad);let n=Object.assign({},e);return Object.assign(n,{kernelShape:r,pads:s}),n},ji=e=>{let t=vo(e),r=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],n=e.dilations,i=e.group,o=e.kernel_shape,d=e.pads,p=e.strides,h=e.w_is_const();return{autoPad:s,format:r,dilations:n,group:i,kernelShape:o,pads:d,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},Ni=(e,t,r,s)=>{let n=r.format==="NHWC",i=Pu(t[0].dims,t[1].dims,r.dilations,r.pads,r.strides,n);if(r.group!==1){let Ne=[t[0]];if(n){let Fe=e.kernelCustomData.wT??e.compute(fs(t[1],Ao),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Fe),Ne.push(Fe)}else Ne.push(t[1]);t.length===3&&Ne.push(t[2]),!e.adapterInfo.isArchitecture("ampere")&&n&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1?e.compute(vu(Ne,r,i,s),{inputs:Ne}):e.compute(Ri(Ne,r,i,s),{inputs:Ne});return}let o=t.length===3,d=t[0].dims[n?1:2],p=t[0].dims[n?2:3],h=t[0].dims[n?3:1],P=t[1].dims[2],x=t[1].dims[3],l=i[n?1:2],O=i[n?2:3],z=i[n?3:1],B=n&&P===d&&x===p&&r.pads[0]===0&&r.pads[1]===0;if(B||P===1&&x===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let Ne=i[0],Fe,rt,vt,$t=[];if(n){let zt=e.kernelCustomData.wT??e.compute(fs(t[1],Ao),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=zt),B){let Tr=d*p*h;Fe=t[0].reshape([1,Ne,Tr]),rt=zt.reshape([1,Tr,z]),vt=[1,Ne,z]}else Fe=t[0].reshape([Ne,d*p,h]),rt=zt.reshape([1,h,z]),vt=[Ne,l*O,z];$t.push(Fe),$t.push(rt)}else Fe=t[0].reshape([Ne,h,d*p]),rt=t[1].reshape([1,z,h]),vt=[Ne,z,l*O],$t.push(rt),$t.push(Fe);o&&$t.push(t[2]);let Yt=vt[2],rr=$t[0].dims[$t[0].dims.length-1];Yt<8&&rr<8?e.compute(ko($t,r,i,vt,n,s),{inputs:$t}):e.compute($o($t,r,i,vt,n,s),{inputs:$t});return}let te=!0,se=e.kernelCustomData.wT??e.compute(fs(t[1],Ao),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=se);let H=[t[0],se];o&&H.push(t[2]);let pe=n?l*O:z,ae=n?z:l*O,ge=P*x*h;e.compute(Oi(H,r,i,pe,ae,ge,o,te,s),{inputs:H})},Ui=(e,t)=>{let r=t.format==="NHWC",s=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let n=[0,t.pads[0],0,t.pads[1]],i=[1].concat(t.strides),o=[1].concat(t.dilations),d=[1].concat(t.kernelShape),p=Hn({...t,pads:n,strides:i,dilations:o,kernelShape:d},s);Ni(e,s,p,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]])},$u=(e,t,r)=>{let s=r.format==="NHWC"?"channelsLast":"channelsFirst",n=Hn(r,t),i=r.autoPad==="NOTSET"?r.pads:r.autoPad,o=Bi(t[0].dims,t[1].dims,r.strides,r.dilations,i,!1,s);e.compute(bu(t,n,o.outShape,[o.filterDepth,o.filterHeight,o.filterWidth],[o.padInfo.front,o.padInfo.top,o.padInfo.left],s))},Vi=(e,t)=>{if(Cu(e.inputs,t),e.inputs[0].dims.length===3)Ui(e,t);else if(e.inputs[0].dims.length===5)$u(e,e.inputs,t);else{let r=Hn(t,e.inputs);Ni(e,e.inputs,r)}}}),Su,ku,Ac=g(()=>{Ot(),xe(),er(),on(),xo(),mu(),So(),Su=(e,t=!1,r,s,n=4)=>{let i=te=>{switch(te){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${s}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${te} is not supported.`)}},o=e?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,d=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,p=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",P=e?"row":"col",x=e?"col":"row",l=`
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${P} / outWidth;
      let outCol = ${P} % outWidth;

      let WRow = ${x} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${x} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${p}) || fract(xR) > 0.0) {
        return ${s}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${h}) || fract(xC) > 0.0) {
        return ${s}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${x} % inChannels;
      ${o}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${n}];`,O=e?`
      let col = colIn * ${n};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${l}
      }
      return ${s}(0.0);`:`
      let col = colIn * ${n};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${l}
      }
      return ${s}(0.0);`,z=`
      let col = colIn * ${n};
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${i(n)}
      }
      return ${s}(0.0);
      `,B=Vs(r,s);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${s} {
    ${e?O:z}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${s} {
    ${e?z:O}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${s}) {
    let col = colIn * ${n};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${d}
      ${To(t)}
      ${B}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${n}] = value;
    }
  }`},ku=(e,t,r,s,n,i,o,d)=>{let p=t.format==="NHWC",h=p?e[0].dims[3]:e[0].dims[1],P=r[0],x=p?r[2]:r[3],l=p?r[1]:r[2],O=p?r[3]:r[1],z=p&&h%4===0&&h%3&&O%4===0,B=p?O:x*l,te=p?x*l:O,se=[8,8,1],H=s<=8?[4,1,1]:[4,4,1],pe=[Math.ceil(B/se[0]/H[0]),Math.ceil(te/se[1]/H[1]),Math.ceil(P/se[2]/H[2])];_r("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${pe}`);let ae=z?4:1,ge=Math.max(se[0]*ae,se[1]),Ne=z?4:1,Fe=[t.kernelShape[p?1:2],t.kernelShape[p?2:3]],rt=[Fe[0]+(t.dilations[0]<=1?0:(Fe[0]-1)*(t.dilations[0]-1)),Fe[1]+(t.dilations[1]<=1?0:(Fe[1]-1)*(t.dilations[1]-1))],vt=[rt[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),rt[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],$t=[{type:6,data:s},{type:6,data:n},{type:6,data:i},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:Fe},{type:6,data:vt}];sn(t,$t),$t.push(...wt(e[0].dims,e[1].dims));let Yt=["rank","rank"];o&&($t.push(...wt(e[2].dims)),Yt.push("rank")),$t.push(...wt(r));let rr=zt=>{let Tr=Ze("x",e[0].dataType,e[0].dims.length,Ne),Ir=Ze("w",e[1].dataType,e[1].dims.length,1),nr=kt("result",e[0].dataType,r.length,Ne),Er=[Tr,Ir],Ft="";if(o){let Ve=Ze("bias",e[2].dataType,e[2].dims.length,Ne);Er.push(Ve),Ft+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${Ve.type.value} {
            return bias[coords.${p?"w":"y"}${z?"/ 4":""}];
          }`}let Nt=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:Fe.length},{name:"pads",type:"i32",length:vt.length}];nn(t,Nt);let hr=or(e[0].dataType,1);if(hr!=="f16"&&hr!=="f32")throw new Error(`elemType ${hr} is not supported.`);return`
        ${Ii("uniforms.result_strides")}
        ${zt.registerUniforms(Nt).declareVariables(...Er,nr)};
        ${Ft}
        ${Su(p,o,t,Tr.type.value,ae)}
        ${z?Po(H,se,hr,void 0,!p,ge):Co(H,se,hr,void 0,!p,ge,!1,void 0,d)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${H};${se};${z}`,inputDependencies:Yt},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:pe[0],y:pe[1],z:pe[2]},programUniforms:$t}),getShaderSource:rr}}}),Au,Io,Ic=g(()=>{Ot(),xe(),Ut(),er(),Au=(e,t,r,s,n,i=!1,o,d,p=!1)=>{let h=p?1:2,P=p?2:3,x=p?3:1,l=i?2:1,O=`
  fn setOutputAtIndex(flatIndex : u32, value : ${i?`vec4<${o}>`:o}) {
    result[flatIndex] = ${i?`vec4<${o}>`:o}(value);
  }`;s&&(O+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${i?`vec4<${o}>`:o} {
      return bias[coords.${p?"w":"y"}${i?"/ 4":""}];
    }`);let z=i?4:1,B=Ze("W",t[1].dataType,t[1].dims.length,z),te=Ze("Dy",t[0].dataType,t[0].dims.length,z),se=[te,B];s&&se.push(Ze("bias",t[2].dataType,[r[x]].length,z));let H=kt("result",t[0].dataType,r.length,z),pe=`{
        let batch: u32 = ${n?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${n?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${n?"global_id.y":"workgroup_id.y"} * ${l};
        let d1: u32 = ${n?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${o}>, ${l}>;
        for (var i = 0; i < ${l}; i++) {
          dotProd[i] = vec4<${o}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${o}(dyCorner.x) + ${o}(wR)) / ${o}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${o}(dyCorner.y) + ${o}(wC)) / ${o}(uniforms.strides.y);
            let dyC2 = (${o}(dyCorner.y) + 1.0 + ${o}(wC)) / ${o}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${o}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${te.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${te.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${o}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${x}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${te.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${te.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${l}; i = i + 1) {
          let value = dotProd[i] + ${s?"bias[c+i]":`vec4<${o}>(0.0)`};
          ${H.set("batch","r","c + i","d1","value")};
        }
      }`,ae=`
          let outputIndices = ${H.offsetToIndices("global_idx")};
          let batch = ${H.indicesGet("outputIndices",0)};
          let d1 = ${H.indicesGet("outputIndices",x)};
          let r = ${H.indicesGet("outputIndices",h)};
          let c = ${H.indicesGet("outputIndices",P)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${o}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${o}(dyRCorner) + ${o}(wR)) / ${o}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[${h}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${o}(dyCCorner) + ${o}(wC)) / ${o}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[${P}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${p?te.get("batch","idyR","idyC","inputChannel"):te.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${B.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${s?"bias[d1]":`${o}(0.0)`};
          ${H.setByOffset("global_idx","value")};
        `;return`
  ${e.registerUniforms(d).declareVariables(...se,H)}
  ${O}

    ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${i?pe:ae}}`},Io=(e,t,r)=>{let s=e.length>2,n=t.outputShape,i=De.size(n),o=[Math.ceil(i/64),1,1];_r("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${o}`);let d=t.format==="NHWC",p=["rank","rank"],h=[t.strides[0],t.strides[1]],P=[t.kernelShape[d?1:2],t.kernelShape[d?2:3]],x=[t.dilations[0],t.dilations[1]],l=[P[0]+(t.dilations[0]<=1?0:(t.kernelShape[d?1:2]-1)*(t.dilations[0]-1)),P[1]+(t.dilations[1]<=1?0:(t.kernelShape[d?2:3]-1)*(t.dilations[1]-1))],O=[l[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),l[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],z=!1,B=t.group,te=e[1].dims,se=te[0]/B,H=te[1],pe=[{type:12,data:i},{type:12,data:h},{type:12,data:P},{type:12,data:x},{type:12,data:l},{type:6,data:O},{type:12,data:se},{type:12,data:H},...wt(e[0].dims,e[1].dims)];s&&(pe.push(...wt(e[2].dims)),p.push("rank")),pe.push(...wt(n));let ae=o[1]===1&&o[2]===1,ge=Ne=>{let Fe=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:h.length},{name:"filter_dims",type:"u32",length:P.length},{name:"dilations",type:"u32",length:P.length},{name:"effective_filter_dims",type:"u32",length:l.length},{name:"pads",type:"i32",length:O.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],rt=or(e[0].dataType);return`${Au(Ne,e,n,s,ae,z,rt,Fe,d)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:p},getRunData:()=>({dispatchGroup:{x:o[0],y:o[1],z:o[2]},outputs:[{dims:r?r(n):n,dataType:e[0].dataType}],programUniforms:pe}),getShaderSource:ge}}}),Iu,Fu,Ou,qn,Du,Lu,zu,Qn,Bu,Ru,Fc=g(()=>{Ac(),Ic(),on(),Us(),Iu=(e,t,r,s,n,i)=>(e-1)*t+r+(s-1)*n+1-i,Fu=(e,t,r,s,n)=>{let i=Math.floor(e/2);t==="SAME_UPPER"?(r[s]=i,r[n]=e-i):t==="SAME_LOWER"&&(r[s]=e-i,r[n]=i)},Ou=(e,t,r,s,n,i,o,d,p,h)=>{let P=e.length-2,x=h.length===0;p.length<P&&p.push(...Array(P-p.length).fill(0));let l=e[0],O=t[d?3:1]*n;for(let z=0,B=e.length-P-(d?1:0);z<P;++z,++B){let te=e[B],se=x?te*o[z]:h[z],H=Iu(te,o[z],i[z],t[B],r[z],se);Fu(H,s,i,z,z+P),x&&h.push(o[z]*(te-1)+p[z]+(t[B]-1)*r[z]+1-i[z]-i[z+P])}h.splice(0,0,l),h.splice(d?3:1,0,O)},qn=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((x,l)=>x*l,1)===0){r.length=0;for(let x=2;x<t[1].dims.length;++x)r.push(t[1].dims[x])}let s=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(s?3:1,0,t[1].dims[1]);let n=e.pads.slice(),i=e.outputShape.slice(),o=e.outputPadding.slice(),d=t[0].dims,p=e.dilations.slice();if(p.reduce((x,l)=>x+l,0)===0){let x=t[0].dims.length-2;p=new Array(x).fill(1)}let h=e.strides.slice();if(h.reduce((x,l)=>x+l,0)===0){let x=t[0].dims.length-2;h=new Array(x).fill(1)}Ou(d,r,p,e.autoPad,e.group,n,h,s,o,i);let P=Object.assign({},e);return Object.assign(P,{kernelShape:r,pads:n,outputPadding:o,outputShape:i,dilations:p,strides:h}),P},Du=e=>{let t=vo(e),r=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],n=e.dilations,i=e.group,o=e.kernelShape,d=e.pads,p=e.strides,h=e.wIsConst(),P=e.outputPadding,x=e.outputShape;return{autoPad:s,format:r,dilations:n,group:i,kernelShape:o,outputPadding:P,outputShape:x,pads:d,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},Lu=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[0];if(r!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==n))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.reduce((o,d)=>o+d,0)>0&&t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.reduce((o,d)=>o+d,0)>0&&t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.reduce((o,d)=>o+d,0)>0&&t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.outputPadding.length!==i&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(t.kernelShape.reduce((o,d)=>o+d,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},zu=[2,3,1,0],Qn=(e,t,r)=>{let s=qn(r,t),n=r.format==="NHWC",i=s.outputShape,o=i[n?3:1],d=t[0].dims[n?3:1];if(s.group!==1||o===1&&d===1){e.compute(Io(t,s));return}let p=i[n?1:2],h=i[n?2:3],P=t[1].dims[2],x=t[1].dims[3],l=n?p*h:o,O=n?o:p*h,z=P*x*d,B=!0,te=e.kernelCustomData.wT??e.compute(fs(t[1],zu),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=te);let se=[t[0],te],H=t.length===3;H&&(!n&&t[2].dims.length===1?se.push(t[2].reshape([t[2].dims[0],1,1])):se.push(t[2])),e.compute(ku(se,s,i,l,O,z,H,B),{inputs:se})},Bu=(e,t)=>{let r=t.format==="NHWC",s=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let n=t.kernelShape;(n.length===0||n[0]===0)&&(n=[e.inputs[1].dims[2]]);let i=t.dilations;(i.length===0||i[0]===0)&&(i=[1]);let o=t.strides;(o.length===0||o[0]===0)&&(o=[1]);let d=t.pads;d.length===0&&(d=[0,0]),d=[0,d[0],0,d[1]],o=[1].concat(o),i=[1].concat(i),n=[1].concat(n);let p=qn({...t,pads:d,strides:o,dilations:i,kernelShape:n},s);e.compute(Io(s,p,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]]))},Ru=(e,t)=>{Lu(e.inputs,t),e.inputs[0].dims.length===3?Bu(e,t):Qn(e,e.inputs,t)}}),ju,Fo,Nu,Oc=g(()=>{Ot(),Ut(),lr(),er(),ju=(e,t,r,s)=>{let n=De.size(t),i=t.length,o=Ze("input",e,i),d=kt("output",e,i),p=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=De.normalizeAxis(p,i),P=x=>{let l=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,O=St("uniforms.input_shape","uniforms.axis",i),z=s.reverse?l+(s.exclusive?" + 1":""):"0",B=s.reverse?O:l+(s.exclusive?"":" + 1");return`
                ${x.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,d)}
                ${x.mainStart()}
                  ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${d.offsetToIndices("global_idx")};
                  var sum = ${d.type.value}(0);
                  let first : i32 = ${z};
                  let last : i32 = ${B};
                  for (var i : i32 = first; i < last; i++) {
                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${o.getByIndices("inputIndices")};
                  }
                  ${d.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:s.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},{type:12,data:h},...wt(t,t)]}),getShaderSource:P}},Fo=(e,t)=>{let r=e.inputs[0].dims,s=e.inputs[0].dataType,n=e.inputs[1];e.compute(ju(s,r,n,t),{inputs:[0]})},Nu=e=>{let t=e.exclusive===1,r=e.reverse===1;return qt({exclusive:t,reverse:r})}}),Uu,Dc,Vu,Wu,Gu,Xn=g(()=>{Ot(),Ut(),lr(),er(),Uu=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Dc=(e,t,r,s)=>{let n=[];n.push(`fn perm(i: ${s.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let i=0;i<t;++i)n.push(r.indicesSet("a",e[i],`i[${i}]`));return n.push("return a;}"),n.join(`
`)},Vu=(e,t)=>{let r,s,n,i,o,d,p=t.format==="NHWC",h=t.blocksize,P=t.mode==="DCR";p?([r,s,n,i]=e.dims,o=P?[r,s,n,h,h,i/h**2]:[r,s,n,i/h**2,h,h],d=P?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,s,n,i]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],o=P?[r,h,h,i/h**2,s,n]:[r,i/h**2,h,h,s,n],d=P?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let x=e.reshape(o),l=x.dims.length,O=e.dataType,z=Ze("a",O,l),B=kt("output",O,l),te=se=>`
  ${se.registerUniform("output_size","u32").declareVariables(z,B)}

  ${Dc(d,l,z,B)}

  ${se.mainStart()}
    ${se.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${B.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${B.setByOffset("global_idx",z.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:se=>{let H=p?[r,s*h,n*h,i/h**2]:[r,i/h**2,s*h,n*h],pe=De.size(H),ae=x.dims,ge=De.sortBasedOnPerm(ae,d);return{outputs:[{dims:H,dataType:se[0].dataType}],dispatchGroup:{x:Math.ceil(pe/64)},programUniforms:[{type:12,data:pe},...wt(ae,ge)]}},getShaderSource:te}},Wu=(e,t)=>{Uu(e.inputs),e.compute(Vu(e.inputs[0],t))},Gu=e=>qt({blocksize:e.blocksize,mode:e.mode,format:e.format})}),Oo,Yn,Wi,Ku,Hu,Do,Lc,Gi,qu,Qu,Xu,zc=g(()=>{Ot(),Ut(),lr(),er(),Oo="[a-zA-Z]|\\.\\.\\.",Yn="("+Oo+")+",Wi="^"+Yn+"$",Ku="("+Yn+",)*"+Yn,Hu="^"+Ku+"$",Do=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let r=this.symbolToIndices.get(e);r===void 0?r=[t]:r.push(t),this.symbolToIndices.set(e,r)}},Lc=class{constructor(e,t){var n;this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[r,s]=t.includes("->")?t.split("->",2):[t,""];if(!r.match(RegExp(Hu)))throw new Error("Invalid LHS term");if(r.split(",").forEach((i,o)=>{let d=e[o].dims.slice();if(!i.match(RegExp(Wi)))throw new Error("Invalid LHS term");let p=this.processTerm(i,!0,d,o);this.lhs.push(p)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([i,o])=>o.count===1||i==="...").map(([i])=>i).join("");else if(!s.match(RegExp(Yn)))throw new Error("Invalid RHS");(n=s.match(RegExp(Oo,"g")))==null||n.forEach(i=>{if(i==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let o=this.symbolToInfo.get(i);if(o===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(o.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(e,t,r){let s=this.symbolToInfo.get(e);if(s!==void 0){if(s.dimValue!==t&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(r)}else s={count:1,dimValue:t,inputIndices:[r]};this.symbolToInfo.set(e,s)}processTerm(e,t,r,s=-1){let n=r.length,i=!1,o=[],d=0;if(!e.match(RegExp(Wi))&&!t&&e!=="")throw new Error("Invalid LHS term");let p=e.match(RegExp(Oo,"g")),h=new Do(s);return p==null||p.forEach((P,x)=>{if(P==="..."){if(i)throw new Error("Only one ellipsis is allowed per input term");i=!0;let l=n-p.length+1;if(l<0)throw new Error("Ellipsis out of bounds");if(o=r.slice(d,d+l),this.hasEllipsis){if(this.ellipsisDims.length!==o.length||this.ellipsisDims.toString()!==o.toString())throw new Error("Ellipsis dimensions mismatch")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=o;else throw new Error("Ellipsis must be specified in the LHS");for(let O=0;O<o.length;O++){let z=String.fromCharCode(48+O);h.addSymbol(z,x+O),this.addSymbol(z,r[d++],s)}}else h.addSymbol(P,x+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(P,r[d++],s)}),h}},Gi=e=>e+"_max",qu=(e,t,r,s)=>{let n=e.map(h=>h.length).map((h,P)=>Ze(`input${P}`,t,h)),i=De.size(s),o=kt("output",t,s.length),d=[...r.symbolToInfo.keys()].filter(h=>!r.rhs.symbolToIndices.has(h)),p=h=>{let P=[],x="var prod = 1.0;",l="var sum = 0.0;",O="sum += prod;",z=[],B=[],te=[],se=[],H=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((ae,ge)=>{var Ne;if(r.rhs.symbolToIndices.has(ge)){let Fe=(Ne=r.rhs.symbolToIndices.get(ge))==null?void 0:Ne[0];Fe!==void 0&&r.lhs.forEach((rt,vt)=>{if(ae.inputIndices.includes(vt)){let $t=rt.symbolToIndices.get(ge);if($t===void 0)throw new Error("Invalid symbol error");$t.forEach(Yt=>{P.push(`${n[vt].indicesSet(`input${vt}Indices`,Yt,o.indicesGet("outputIndices",Fe))}`)})}})}else r.lhs.forEach((Fe,rt)=>{if(ae.inputIndices.includes(rt)){let vt=Fe.symbolToIndices.get(ge);if(vt===void 0)throw new Error("Invalid symbol error");vt.forEach($t=>{z.push(`${n[rt].indicesSet(`input${rt}Indices`,$t,`${ge}`)}`)}),se.push(`prod *= ${n[rt].getByIndices(`input${rt}Indices`)};`)}}),B.push(`for(var ${ge}: u32 = 0; ${ge} < uniforms.${Gi(ge)}; ${ge}++) {`),te.push("}")});let pe=H?[...P,`let sum = ${n.map((ae,ge)=>ae.getByIndices(`input${ge}Indices`)).join(" * ")};`]:[...P,l,...B,...z,x,...se,O,...te];return`
            ${h.registerUniforms(d.map(ae=>({name:`${Gi(ae)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...n,o)}

            ${h.mainStart()}
            ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${o.offsetToIndices("global_idx")};
            ${n.map((ae,ge)=>`var input${ge}Indices: ${n[ge].type.indices};`).join(`
`)}
            ${pe.join(`
`)};
            ${o.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let h=d.filter(x=>r.symbolToInfo.has(x)).map(x=>{var l;return{type:12,data:((l=r.symbolToInfo.get(x))==null?void 0:l.dimValue)||0}});h.push({type:12,data:i});let P=e.map((x,l)=>[...wt(x)]).reduce((x,l)=>x.concat(l),h);return P.push(...wt(s)),{outputs:[{dims:s,dataType:t}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:P}},getShaderSource:p}},Qu=(e,t)=>{let r=new Lc(e.inputs,t.equation),s=r.outputDims,n=e.inputs.map((i,o)=>i.dims);e.compute(qu(n,e.inputs[0].dataType,r,s))},Xu=e=>{let t=e.equation.replace(/\s+/g,"");return qt({equation:t})}}),Ki,Hi,Yu,qi,Ju,Bc=g(()=>{Ot(),Ut(),er(),Ki=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),s=r.length<t.length?0:r.length-t.length,n=t.length<r.length?0:t.length-r.length;for(;s<r.length&&n<t.length;++s,++n)if(r[s]!==t[n]&&r[s]!==1&&t[n]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Hi=(e,t)=>{let r=e.length-t.length,s=[];for(let n=0;n<r;++n)s.push(e[n]);for(let n=0;n<t.length;++n)s.push(t[n]===1?e[n+r]:t[n]);return s},Yu=(e,t)=>e.length>t.length?Hi(e,t):Hi(t,e),qi=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),s=Yu(t,r),n=e[0].dataType,i=n===9?4:1,o=Math.ceil(De.size(s)/i),d=h=>{let P=Ze("input",n,t.length,i),x=kt("output",n,s.length,i),l;if(n===9){let O=(z,B,te="")=>`
          let outputIndices${B} = ${x.offsetToIndices(`outputOffset + ${B}u`)};
          let offset${B} = ${P.broadcastedIndicesToOffset(`outputIndices${B}`,x)};
          let index${B} = offset${B} / 4u;
          let component${B} = offset${B} % 4u;
          ${z}[${B}] = ${te}(${P.getByOffset(`index${B}`)}[component${B}]);
        `;l=`
        let outputOffset = global_idx * ${i};
        var data = vec4<u32>(0);
        ${O("data",0,"u32")}
        ${O("data",1,"u32")}
        ${O("data",2,"u32")}
        ${O("data",3,"u32")}
        ${x.setByOffset("global_idx","data")}
      }`}else l=`
        let outputIndices = ${x.offsetToIndices("global_idx")};
        let inputOffset = ${P.broadcastedIndicesToOffset("outputIndices",x)};
        ${x.setByOffset("global_idx",P.getByOffset("inputOffset"))}
      }`;return`
    ${h.registerUniform("vec_size","u32").declareVariables(P,x)}
    ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${l}`},p=[{type:12,data:o},...wt(t,s)];return{name:"Expand",shaderCache:{hint:`${s.length}`,inputDependencies:["rank"]},getShaderSource:d,getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:p})}},Ju=e=>{Ki(e.inputs),e.compute(qi(e.inputs),{inputs:[0]})}}),Qi,Zu,Rc=g(()=>{Ot(),Ut(),er(),Mo(),Qi=e=>{let t=e[0].dataType,r=De.size(e[0].dims),s=De.size(e[1].dims),n=s%4===0,i=o=>{let d=Ze("x",t,[1],4),p=Ze("bias",t,[1],4),h=kt("y",t,[1],4),P=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],x=O=>`
      let bias${O}_offset: u32 = (global_idx * 4 + ${O}) % uniforms.bias_size;
      let bias${O} = ${p.getByOffset(`bias${O}_offset / 4`)}[bias${O}_offset % 4];`,l=n?`
      let bias = ${p.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${x(0)}${x(1)}${x(2)}${x(3)}
      let bias = ${d.type.value}(bias0, bias1, bias2, bias3);`;return`${o.registerUniforms(P).declareVariables(d,p,h)}

    ${vi(yr(t))}

    ${o.mainStart(Rr)}
      ${o.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${d.getByOffset("global_idx")};
      ${l}
      let x_in = x + bias;
      ${h.setByOffset("global_idx",Ti("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${n}`,inputDependencies:["type","type"]},getShaderSource:i,getRunData:o=>({outputs:[{dims:o[0].dims,dataType:o[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:s}],dispatchGroup:{x:Math.ceil(r/Rr/4)}})}},Zu=e=>{e.inputs.length<2||De.size(e.inputs[1].dims)===0?xi(e):e.compute(Qi(e.inputs))}}),Lo,ed,td,rd,jc=g(()=>{Ot(),Ut(),lr(),er(),Lo=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},ed=(e,t)=>{let r=e[0].dims,s=e[1].dims,n=r.length,i=De.normalizeAxis(t.axis,n),o=r.slice(0);o.splice(i,1,...s);let d=r[i],p=e[0].dataType===9?4:1,h=Math.ceil(De.size(o)/p),P=[{type:12,data:h},{type:6,data:d},{type:12,data:i},...wt(e[0].dims,e[1].dims,o)],x=l=>{let O=Ze("data",e[0].dataType,e[0].dims.length,p),z=Ze("inputIndices",e[1].dataType,e[1].dims.length),B=kt("output",e[0].dataType,o.length,p),te=H=>{let pe=s.length,ae=`var indicesIndices${H}  = ${z.type.indices}(0);`;for(let ge=0;ge<pe;ge++)ae+=`${pe>1?`indicesIndices${H}[${ge}]`:`indicesIndices${H}`} = ${o.length>1?`outputIndices${H}[uniforms.axis + ${ge}]`:`outputIndices${H}`};`;ae+=`
          var idx${H} = ${z.getByIndices(`indicesIndices${H}`)};
          if (idx${H} < 0) {
            idx${H} = idx${H} + uniforms.axisDimLimit;
          }
          var dataIndices${H} : ${O.type.indices};
        `;for(let ge=0,Ne=0;ge<n;ge++)ge===i?(ae+=`${n>1?`dataIndices${H}[${ge}]`:`dataIndices${H}`} = u32(idx${H});`,Ne+=pe):(ae+=`${n>1?`dataIndices${H}[${ge}]`:`dataIndices${H}`} = ${o.length>1?`outputIndices${H}[${Ne}]`:`outputIndices${H}`};`,Ne++);return ae},se;if(e[0].dataType===9){let H=(pe,ae,ge="")=>`
          let outputIndices${ae} = ${B.offsetToIndices(`outputOffset + ${ae}u`)};
          ${te(ae)};
          let offset${ae} = ${O.indicesToOffset(`dataIndices${ae}`)};
          let index${ae} = offset${ae} / 4u;
          let component${ae} = offset${ae} % 4u;
          ${pe}[${ae}] = ${ge}(${O.getByOffset(`index${ae}`)}[component${ae}]);
        `;se=`
        let outputOffset = global_idx * ${p};
        var value = vec4<u32>(0);
        ${H("value",0,"u32")}
        ${H("value",1,"u32")}
        ${H("value",2,"u32")}
        ${H("value",3,"u32")}
        ${B.setByOffset("global_idx","value")}
      `}else se=`
      let outputIndices = ${B.offsetToIndices("global_idx")};
      ${te("")};
      let value = ${O.getByIndices("dataIndices")};
      ${B.setByOffset("global_idx","value")};
      `;return`
      ${l.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(O,z,B)}
      ${l.mainStart()}
        ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${se}
      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:P}),getShaderSource:x}},td=e=>qt({axis:e.axis}),rd=(e,t)=>{let r=e.inputs;Lo(r),e.compute(ed(e.inputs,t))}}),Xi,zo,Nc,sd,Uc=g(()=>{Ot(),Ut(),lr(),er(),Xi=(e,t)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let r=De.normalizeAxis(t.quantizeAxis,e[0].dims.length),s=t.blockSize,n=e[0],i=e[2],o=e.length===4?e[3]:void 0;if(i.dims.length!==n.dims.length||!n.dims.map((d,p)=>p===r?Math.ceil(d/s)===i.dims[p]:d===i.dims[p]).reduce((d,p)=>d&&p,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(o){if(o.dataType!==n.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(o.dims.length!==i.dims.length||!o.dims.map((d,p)=>d===i.dims[p]).reduce((d,p)=>d&&p,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},zo=(e,t)=>{let r=e[0].dims,s=e[1].dims,n=r.length,i=De.normalizeAxis(t.gatherAxis,n),o=De.normalizeAxis(t.quantizeAxis,n),d=r.slice(0);d.splice(i,1,...s);let p=De.size(d),h=e[2].dataType,P=e[0].dataType===22,x=[{type:12,data:p},{type:12,data:o},{type:12,data:i},{type:12,data:t.blockSize},...wt(...e.map((O,z)=>O.dims),d)],l=O=>{let z=Ze("data",e[0].dataType,e[0].dims.length),B=Ze("inputIndices",e[1].dataType,e[1].dims.length),te=Ze("scales",e[2].dataType,e[2].dims.length),se=e.length>3?Ze("zeroPoint",e[3].dataType,e[3].dims.length):void 0,H=kt("output",h,d.length),pe=[z,B,te];se&&pe.push(se);let ae=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${O.registerUniforms(ae).declareVariables(...pe,H)}
        ${O.mainStart()}
        let output_indices = ${H.offsetToIndices("global_idx")};
        var indices_indices = ${B.type.indices}(0);
        ${s.length>1?`
          for (var i: u32 = 0; i < ${s.length}; i++) {
            let index = ${H.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${B.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${H.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${z.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${H.indicesGet("output_indices","i")};
          ${z.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${B.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${r[i]};
        }
        ${z.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${d.length}; i++) {
          let index = ${H.indicesGet("output_indices",`i + ${s.length} - 1`)};
          ${z.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${z.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${z.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${P?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${te.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${te.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${te.getByIndices("scale_indices")};
        ${se?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${se.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${se.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${P?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${yr(h)}(quantized_data - zero_point) * scale;
        ${H.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${t.cacheKey};${e.filter((O,z)=>z!==1).map(O=>O.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(O,z)=>"rank")},getRunData:()=>({outputs:[{dims:d,dataType:h}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:x}),getShaderSource:l}},Nc=(e,t)=>{let r=e.inputs;Xi(r,t),e.compute(zo(e.inputs,t))},sd=e=>qt({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),Yi,nd,od,Ji,Vc=g(()=>{Ot(),Ut(),lr(),er(),Yi=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},nd=(e,t)=>{let r=e[0].dims,s=e[0].dataType,n=r.length,i=e[1].dims,o=e[1].dataType,d=De.normalizeAxis(t.axis,n),p=r[d],h=i.slice(0),P=De.size(h),x=Ze("input",s,n),l=Ze("indicesInput",o,i.length),O=kt("output",s,h.length),z=[{type:12,data:P},{type:6,data:p},{type:12,data:d}];return z.push(...wt(r,i,h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(P/64)},programUniforms:z}),getShaderSource:B=>`
      ${B.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(x,l,O)}
      ${B.mainStart()}
      ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${O.offsetToIndices("global_idx")};

      var idx = ${l.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${x.type.indices}(outputIndices);
      ${x.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${x.getByIndices("inputIndices")};

      ${O.setByOffset("global_idx","value")};
  }`}},od=e=>qt({axis:e.axis}),Ji=(e,t)=>{let r=e.inputs;Yi(r),e.compute(nd(e.inputs,t))}}),id,Zi,Wc,Gc,ad=g(()=>{Ot(),Ut(),er(),id=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Zi=(e,t)=>{let r=e[0].dims.slice(),s=e[1].dims.slice(),[n,i,o]=qr.getShapeOfGemmResult(r,t.transA,s,t.transB,e.length===3?e[2].dims:void 0),d=[n,i];if(!d)throw new Error("Can't use gemm on the given tensors");let p=De.size(d),h=[{type:12,data:p},{type:12,data:n},{type:12,data:i},{type:12,data:o},{type:1,data:t.alpha},{type:1,data:t.beta}],P=["type","type"];e.length===3&&(h.push(...wt(e[2].dims)),P.push("rank")),h.push(...wt(d));let x=l=>{let O="";t.transA&&t.transB?O="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?O="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?O="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(O="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let z=t.alpha===1?"":"value *= uniforms.alpha;",B=Ze("a",e[0].dataType,e[0].dims),te=Ze("b",e[1].dataType,e[1].dims),se=B.type.value,H=null,pe=[B,te];e.length===3&&(H=Ze("c",e[2].dataType,e[2].dims.length),pe.push(H));let ae=kt("output",e[0].dataType,d.length);pe.push(ae);let ge=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${l.registerUniforms(ge).declareVariables(...pe)}

  ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${se}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${O}
    }

    ${z}
    ${H!=null?`let cOffset = ${H.broadcastedIndicesToOffset("vec2(m, n)",ae)}; value += ${se}(uniforms.beta) * ${H.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:x}},Wc=e=>{let t=e.transA,r=e.transB,s=e.alpha,n=e.beta;return{transA:t,transB:r,alpha:s,beta:n,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Gc=(e,t)=>{id(e.inputs),e.compute(Zi(e.inputs,t))}}),ss,ld,ud,Bo,dd,Jn,ea,cd=g(()=>{Ot(),Ut(),lr(),oe(),yo(),er(),Us(),ss=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,ld=(e,t)=>{let r=e[0],s=ss(e,1),n=ss(e,2),i=ss(e,3),o=ss(e,4),d=ss(e,5),p=ss(e,6),h=ss(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let P=r.dims[0],x=r.dims[1],l=r.dims.length===3?r.dims[2]:t.numHeads*r.dims[4],O=x,z=0,B=0,te=Math.floor(l/t.numHeads);if(p&&h&&De.size(p.dims)&&De.size(h.dims)){if(p.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(p.dims[0]!==P||p.dims[1]!==t.numHeads||p.dims[3]!==te)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(h.dims[0]!==P||h.dims[1]!==t.numHeads||h.dims[3]!==te)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(p.dims[2]!==h.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(h.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');z=p.dims[2],B=p.dims[2]}else if(p&&De.size(p.dims)||h&&De.size(h.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let se;if(s&&De.size(s.dims)>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(s.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');se=2,O=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==t.numHeads||s.dims[3]!==2||s.dims[4]!==te)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(n)throw new Error('Expect "value" be none when "key" has packed kv format.');se=5,O=s.dims[1]}else{if(s.dims[1]!==t.numHeads||s.dims[3]!==te)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');se=0,O=s.dims[2]}}else{if(r.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(r.dims[2]!==t.numHeads||r.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');se=3}if(i&&De.size(i.dims)>0){if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(s&&s.dims.length===5&&s.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let H=z+O,pe=0;if(o&&De.size(o.dims)>0){pe=8;let Fe=o.dims;throw Fe.length===1?Fe[0]===P?pe=1:Fe[0]===3*P+2&&(pe=3):Fe.length===2&&Fe[0]===P&&Fe[1]===H&&(pe=5),pe===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let ae=!1,ge=l;if(n&&De.size(n.dims)>0){if(n.dims.length!==3&&n.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(n.dims.length===3){if(O!==n.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');ge=n.dims[2]}else{if(O!==n.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');ge=n.dims[1]*n.dims[3],ae=!0}}let Ne=!1;if(o&&De.size(o.dims)>0)throw new Error("Key padding mask is not supported");if(d&&De.size(d.dims)>0){if(d.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(d.dims[0]!==P||d.dims[1]!==t.numHeads||d.dims[2]!==x||d.dims[3]!==H)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:P,sequenceLength:x,pastSequenceLength:z,kvSequenceLength:O,totalSequenceLength:H,maxSequenceLength:B,inputHiddenSize:0,hiddenSize:l,vHiddenSize:ge,headSize:te,vHeadSize:Math.floor(ge/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:pe,scale:t.scale,broadcastResPosBias:Ne,passPastInKv:ae,qkvFormat:se}},ud=e=>qt({...e}),Bo=qt({perm:[0,2,1,3]}),dd=(e,t,r,s,n,i,o)=>{let d=[s,n,i],p=De.size(d),h=[{type:12,data:p},{type:12,data:o},{type:12,data:i}],P=x=>{let l=kt("qkv_with_bias",t.dataType,d),O=Ze("qkv",t.dataType,d),z=Ze("bias",r.dataType,d),B=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${x.registerUniforms(B).declareVariables(O,z,l)}
  ${x.mainStart()}
    ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:d,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:P},{inputs:[t,r],outputs:[-1]})[0]},Jn=(e,t,r,s,n,i,o,d)=>{let p=i;if(o&&De.size(o.dims)>0){if(s===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return p=dd(e,i,o,t,s,r*n,d),p=p.reshape([t,s,r,n]),r===1||s===1?p:e.compute(fs(p,Bo.perm),{inputs:[p],outputs:[-1]})[0]}else return i.dims.length===3&&(p=i.reshape([t,s,r,n])),r===1||s===1?p:e.compute(fs(p,Bo.perm),{inputs:[p],outputs:[-1]})[0]},ea=(e,t)=>{let r=ld(e.inputs,t),s=e.inputs[0],n=ss(e.inputs,1),i=ss(e.inputs,2),o=ss(e.inputs,3),d=ss(e.inputs,4),p=ss(e.inputs,5),h=ss(e.inputs,6),P=ss(e.inputs,7);if(s.dims.length===5)throw new Error("Packed QKV is not implemented");if((n==null?void 0:n.dims.length)===5)throw new Error("Packed KV is not implemented");let x=n&&i&&n.dims.length===4&&i.dims.length===4,l=Jn(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,s,o,0);if(x)return An(e,l,n,i,d,void 0,h,P,p,r,t);if(!n||!i)throw new Error("key and value must be provided");let O=Jn(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,n,o,r.hiddenSize),z=Jn(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,i,o,2*r.hiddenSize);An(e,l,O,z,d,void 0,h,P,p,r,t)}}),ta,ra,pd,sa,hd,md=g(()=>{Ot(),Ut(),er(),ta=e=>Array.from(e.getBigInt64Array(),Number),ra=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(ta(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},pd=(e,t)=>{let r=[];for(let s=0;s<e.length;++s)r.push(e[s]*t[s]);return r},sa=(e,t)=>{let r=e[0].dims,s=t??ta(e[1]),n=pd(r,s),i=De.size(n),o=e[0].dataType,d=Ze("input",o,r.length),p=kt("output",o,n.length),h=P=>`
      const inputShape = ${d.indices(...r)};
      ${P.registerUniform("output_size","u32").declareVariables(d,p)}
      ${P.mainStart()}
      ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${p.offsetToIndices("global_idx")};
      var input_indices: ${d.type.indices};
      for (var i = 0; i < ${r.length}; i++) {
        let input_dim_i = ${d.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${p.indicesGet("output_indices","i")}  % input_dim_i;

        ${d.indicesSet("input_indices","i","input_dim_value")}
      }
      ${p.setByOffset("global_idx",d.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${s}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...wt(e[0].dims,n)]}),getShaderSource:h}},hd=e=>{ra(e.inputs),e.compute(sa(e.inputs),{inputs:[0]})}}),fd,na,_d,gd,oa,ia,Kc=g(()=>{Ot(),Ut(),lr(),yo(),er(),cd(),md(),Us(),fd=(e,t)=>{let r=e[0],s=e[1],n=e[2],i=e[3],o=e[4];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,p=r.dims[0],h=r.dims[1],P=r.dims.length===3?d?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],x=h,l=0,O=0,z=Math.floor(P/t.numHeads),B=i&&i.dims.length!==0,te=o&&o.dims.length!==0,se=!0;if(B&&te){if(i.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(o.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');l=i.dims[1],O=i.dims[1]}else if(B||te)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let H;if(s){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(r.dims[2]%s.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');H=2,x=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==t.numHeads||s.dims[3]!==2||s.dims[4]!==z)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(n)throw new Error('Expect "value" be none when "key" has packed kv format.');H=5,x=s.dims[1]}else{if(s.dims[1]!==t.numHeads||s.dims[3]!==z)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');H=0,x=s.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');H=3}let pe=0,ae=!1,ge=P;if(n){if(n.dims.length!==3&&n.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(n.dims.length===3){if(x!==n.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');ge=n.dims[2]}else{if(x!==n.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');ge=n.dims[1]*n.dims[3],ae=!0}}let Ne=l+x;return{batchSize:p,sequenceLength:h,pastSequenceLength:l,kvSequenceLength:x,totalSequenceLength:Ne,maxSequenceLength:O,inputHiddenSize:0,hiddenSize:P,vHiddenSize:ge,headSize:z,vHeadSize:Math.floor(ge/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:pe,scale:t.scale,broadcastResPosBias:!1,passPastInKv:ae,qkvFormat:H,isPastkvBSNH:se}},na=(e,t,r,s)=>{let n=[s.batchSize,s.totalSequenceLength,s.kvNumHeads,s.headSize],i=4,o=De.size(n)/i,d=s.totalSequenceLength,p=kt("present_kv",r,n.length,i),h=Ze("new_kv",e.dataType,e.dims.length,i),P=t?Ze("past_kv",t.dataType,t.dims.length,i):void 0,x=Math.ceil(s.headSize/i),l={x:d,y:e.dims[0],z:1},O=t?["rank","rank"]:["rank"],z=[{type:12,data:o},{type:12,data:s.pastSequenceLength},{type:12,data:s.kvSequenceLength},{type:12,data:s.totalSequenceLength}],B=[h];P?(z.push(...wt(e.dims),...wt(t.dims),...wt(n)),B.push(P)):z.push(...wt(e.dims),...wt(n));let te=[{name:"output_size",type:"u32"},{name:"past_seqlen",type:"u32"},{name:"new_seqlen",type:"u32"},{name:"present_seqlen",type:"u32"}],se=`      let past_batch_stride = uniforms.past_seqlen * num_heads * H;
        var past_head_stride = uniforms.past_seqlen * H;
        if (is_bsnh) {
          past_head_stride = H;
        }
        let in_offset = b * past_batch_stride + s * row_stride + n * past_head_stride + h;
        present_kv[out_offset] = past_kv[in_offset];`,H=`      let new_batch_stride = uniforms.new_seqlen * num_heads * H;
        let new_row_stride = num_heads * H;
        let new_head_stride = H;
        let in_offset = b * new_batch_stride + (s - past_seqlen) * new_row_stride + n * new_head_stride + h;
        present_kv[out_offset] = new_kv[in_offset];`,pe=t?`if (s < past_seqlen) {
        ${se}
        } else if (s < past_seqlen + uniforms.new_seqlen) {
        ${H}
        }`:`if (s < past_seqlen + uniforms.new_seqlen) {
          ${H}
        }`,ae=ge=>`

  ${ge.registerUniforms(te).declareVariables(...B,p)}
  ${ge.mainStart([x,s.kvNumHeads,1])}
    ${ge.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    var indices = ${p.offsetToIndices("global_idx")};
    let h = local_id.x;
    let n = local_id.y;
    let s = workgroup_id.x;
    let b = workgroup_id.y;
    let num_heads = ${s.kvNumHeads}u;
    let H = ${x}u;

    let present_seqlen = uniforms.present_seqlen;
    let present_batch_stride = present_seqlen * num_heads * H;
    var row_stride = H;
    let is_bsnh = ${s.isPastkvBSNH};

    if (is_bsnh) {
      row_stride = num_heads * H;
    }
    var present_head_stride = present_seqlen * H;
    if (is_bsnh) {
      present_head_stride = H;
    }

    let past_seqlen = uniforms.past_seqlen;

    let out_offset = b * present_batch_stride + s * row_stride + n * present_head_stride + h;
    ${pe}
  }`;return{name:"ConcatPastNew",shaderCache:{hint:`${s.kvNumHeads}${x}${!!t}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:n,dataType:r}],dispatchGroup:l,programUniforms:z}),getShaderSource:ae}},_d=e=>qt({...e}),gd=qt({perm:[0,2,1,3]}),oa=(e,t,r,s,n)=>{let i=t,o=s.kvNumHeads,d=s.nReps;return t.dims.length===3&&s.kvSequenceLength!==0&&(i=t.reshape([s.batchSize,s.kvSequenceLength,o,s.headSize])),r?i=e.compute(na(i,r,i.dataType,s),{inputs:[i,r],outputs:[s.isPastkvBSNH?n:-1]})[0]:i=e.compute(na(i,void 0,i.dataType,s),{inputs:[i],outputs:[s.isPastkvBSNH?n:-1]})[0],d!==1&&(i=e.compute(sa([i],[1,1,1,d]),{inputs:[i],outputs:[-1]})[0],i=i.reshape([s.batchSize,s.totalSequenceLength,o*d,s.headSize])),e.compute(fs(i,gd.perm),{inputs:[i],outputs:[-1]})[0]},ia=(e,t)=>{var p;let r=fd(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((p=e.inputs[1])==null?void 0:p.dims.length)===5)throw new Error("Packed KV is not implemented");let s=Jn(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],void 0,0),n=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,i=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,o=oa(e,e.inputs[1],n,r,1),d=oa(e,e.inputs[2],i,r,2);An(e,s,o,d,void 0,void 0,void 0,void 0,void 0,r,t)}}),aa,la,wd,yd,vr=g(()=>{Ot(),Ut(),Us(),er(),aa=(e,t,r,s,n,i,o,d)=>{let p=Zt(i),h=p===1?"f32":`vec${p}f`,P=p===1?"vec2f":`mat2x${p}f`,x=n*o,l=[n,o,i/p],O=[n,o,2],z=["rank","type","type"],B=[];B.push(...wt(l,O));let te=se=>{let H=Ze("x",t.dataType,3,p),pe=Ze("scale",r.dataType,r.dims),ae=Ze("bias",s.dataType,s.dims),ge=kt("output",1,3,2),Ne=[H,pe,ae,ge],Fe=64;return`
  var<workgroup> workgroup_shared : array<${P}, ${Fe}>;
  const workgroup_size = ${Fe}u;
  ${se.declareVariables(...Ne)}
  ${se.mainStart(Fe)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${h}(0);
    var squared_sum = ${h}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${h}(${H.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${P}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Fs("workgroup_shared[0][0]",p)} / f32(hight * ${p});
      let squared_sum_final = ${Fs("workgroup_shared[0][1]",p)} / f32(hight * ${p});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${d}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${p};${d}`,inputDependencies:z},getRunData:()=>({outputs:[{dims:O,dataType:1}],dispatchGroup:{x},programUniforms:B}),getShaderSource:te},{inputs:[t,r,s],outputs:[-1]})[0]},la=(e,t,r)=>{let s=t[0].dims,n=s,i=2,o=s[0],d=s[1],p=De.sizeFromDimension(s,i),h=Zt(p),P=De.size(n)/h,x=aa(e,t[0],t[1],t[2],o,p,d,r.epsilon),l=[o,d,p/h],O=[o,d],z=["type","none"],B=te=>{let se=Ze("x",t[0].dataType,l.length,h),H=Ze("scale_shift",1,O.length,2),pe=kt("output",t[0].dataType,l.length,h),ae=[se,H,pe];return`
  ${te.registerUniform("output_size","u32").declareVariables(...ae)}
  ${te.mainStart()}
  ${te.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${pe.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${H.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${se.getByOffset("global_idx")} * ${pe.type.value}(scale_shift.x) + ${pe.type.value}(scale_shift.y);
      ${pe.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${h}`,inputDependencies:z},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(P/64)},programUniforms:[{type:12,data:P},...wt(l,O,l)]}),getShaderSource:B},{inputs:[t[0],x]})},wd=(e,t,r)=>{let s=t[0].dims,n=s,i=s[0],o=s[s.length-1],d=De.sizeFromDimension(s,1)/o,p=Zt(o),h=De.size(n)/p,P=[{type:12,data:d},{type:12,data:Math.floor(o/p)}],x=["type","type"],l=[0,s.length-1];for(let te=0;te<s.length-2;te++)l.push(te+1);let O=e.compute(fs(e.inputs[0],l),{inputs:[e.inputs[0]],outputs:[-1]})[0],z=aa(e,O,t[1],t[2],i,d,o,r.epsilon),B=te=>{let se=or(t[0].dataType),H=p===1?"vec2f":`mat${p}x2f`,pe=Ne=>{let Fe=Ne===0?"x":"y",rt=p===1?"f32":`vec${p}f`;switch(p){case 1:return`${se}(${rt}(scale.${Fe}))`;case 2:return`vec2<${se}>(${rt}(scale[0].${Fe}, scale[1].${Fe}))`;case 4:return`vec4<${se}>(${rt}(scale[0].${Fe}, scale[1].${Fe}, scale[2].${Fe}, scale[3].${Fe}))`;default:throw new Error(`Not supported compoents ${p}`)}},ae=Ze("input",t[0].dataType,t[0].dims,p),ge=kt("output",t[0].dataType,n,p);return`
  @group(0) @binding(0) var<storage, read> input : array<${ae.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${H}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${ge.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${te.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${pe(0)}, ${pe(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${p}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:P}),getShaderSource:B},{inputs:[t[0],z]})},yd=(e,t)=>{t.format==="NHWC"?wd(e,e.inputs,t):la(e,e.inputs,t)}}),Hc,qc,Qc,Md=g(()=>{Ot(),Ut(),er(),Hc=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},qc=(e,t,r)=>{let s=t.simplified,n=e[0].dims,i=e[1],o=!s&&e[2],d=n,p=De.normalizeAxis(t.axis,n.length),h=De.sizeToDimension(n,p),P=De.sizeFromDimension(n,p),x=De.size(i.dims),l=o?De.size(o.dims):0;if(x!==P||o&&l!==P)throw new Error(`Size of X.shape()[axis:] == ${P}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${x} and bias size of ${l}`);let O=[];for(let ge=0;ge<n.length;++ge)ge<p?O.push(n[ge]):O.push(1);let z=Zt(P),B=["type","type"],te=[{type:12,data:h},{type:1,data:P},{type:12,data:Math.floor(P/z)},{type:1,data:t.epsilon}];o&&B.push("type");let se=r>1,H=r>2,pe=ge=>{let Ne=or(e[0].dataType),Fe=[Ze("x",e[0].dataType,e[0].dims,z),Ze("scale",i.dataType,i.dims,z)];o&&Fe.push(Ze("bias",o.dataType,o.dims,z)),Fe.push(kt("output",e[0].dataType,d,z)),se&&Fe.push(kt("mean_data_output",1,O)),H&&Fe.push(kt("inv_std_output",1,O));let rt=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${ge.registerUniforms(rt).declareVariables(...Fe)}
  ${ge.mainStart()}
    ${ge.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Dr("f32",z)};
    var mean_square_vector = ${Dr("f32",z)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Is(Ne,z,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Fs("mean_vector",z)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Fs("mean_square_vector",z)} / uniforms.norm_size ${s?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Is(Ne,z,"x[j + offset]")};
      let f32scale = ${Is(Ne,z,"scale[j]")};
      output[j + offset] = ${Fe[0].type.value}((f32input ${s?"":"- mean"}) * inv_std_dev * f32scale
        ${o?`+ ${Is(Ne,z,"bias[j]")}`:""}
      );
    }

    ${se?"mean_data_output[global_idx] = mean":""};
    ${H?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},ae=[{dims:d,dataType:e[0].dataType}];return se&&ae.push({dims:O,dataType:1}),H&&ae.push({dims:O,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${z};${r};${s}`,inputDependencies:B},getRunData:()=>({outputs:ae,dispatchGroup:{x:Math.ceil(h/64)},programUniforms:te}),getShaderSource:pe}},Qc=(e,t)=>{Hc(e.inputs),e.compute(qc(e.inputs,t,e.outputCount))}}),bd,vd,Td,xd,ua,Ed=g(()=>{Ot(),Ut(),lr(),er(),bd=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],s=r.dims.length;if(r.dims[s-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let n=Math.floor((t.k+t.blockSize-1)/t.blockSize),i=t.blockSize/8*t.bits,o=e[1];if(!De.areEqual(o.dims,[t.n,n,i]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let d=e[2].dims;if(De.size(d)!==t.n*n)throw new Error("scales input size error.");if(e.length===4){let p=e[3].dims,h=t.bits>4?t.n*n:t.n*Math.floor((n+1)/2);if(De.size(p)!==h)throw new Error("zeroPoints input size error.")}},vd=(e,t)=>{let r=e[0].dims,s=r.length,n=r[s-2],i=t.k,o=t.n,d=r.slice(0,s-2),p=De.size(d),h=e[1].dims[2]/4,P=e[0].dataType,x=Zt(t.k),l=Zt(h),O=Zt(o),z=d.concat([n,o]),B=n>1&&o/O%2===0?2:1,te=De.size(z)/O/B,se=64,H=[],pe=[p,n,i/x],ae=De.convertShape(e[1].dims).slice();ae.splice(-1,1,h/l),H.push(...wt(pe)),H.push(...wt(ae)),H.push(...wt(e[2].dims)),e.length===4&&H.push(...wt(De.convertShape(e[3].dims)));let ge=[p,n,o/O];H.push(...wt(ge));let Ne=Fe=>{let rt=pe.length,vt=Ze("a",e[0].dataType,rt,x),$t=Ze("b",12,ae.length,l),Yt=Ze("scales",e[2].dataType,e[2].dims.length),rr=[vt,$t,Yt],zt=e.length===4?Ze("zero_points",12,e[3].dims.length):void 0;zt&&rr.push(zt);let Tr=ge.length,Ir=kt("output",e[0].dataType,Tr,O),nr=or(e[0].dataType),Er=(()=>{switch(x){case 1:return`array<${nr}, 8>`;case 2:return`mat4x2<${nr}>`;case 4:return`mat2x4<${nr}>`;default:throw new Error(`${x}-component is not supported.`)}})(),Ft=()=>{let Ve=`
          // reuse a data
            var input_offset = ${vt.indicesToOffset(`${vt.type.indices}(batch, row, word_offset)`)};
            var a_data: ${Er};
            for (var j: u32 = 0; j < ${8/x}; j++) {
              a_data[j] = ${vt.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let ct=0;ct<O*B;ct++)Ve+=`
            b_value = ${l===1?`b${ct}_data`:`b${ct}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${Er}(${Array.from({length:4},(Vt,xr)=>`${nr}(b_value_lower[${xr}]), ${nr}(b_value_upper[${xr}])`).join(", ")});
            b_dequantized_values = ${x===1?`${Er}(${Array.from({length:8},(Vt,xr)=>`(b_quantized_values[${xr}] - ${zt?`zero_point${ct}`:"zero_point"}) * scale${ct}`).join(", ")});`:`(b_quantized_values - ${Er}(${Array(8).fill(`${zt?`zero_point${ct}`:"zero_point"}`).join(",")})) * scale${ct};`};
            workgroup_shared[local_id.x * ${B} + ${Math.floor(ct/O)}]${O>1?`[${ct%O}]`:""} += ${Array.from({length:8/x},(Vt,xr)=>`${x===1?`a_data[${xr}] * b_dequantized_values[${xr}]`:`dot(a_data[${xr}], b_dequantized_values[${xr}])`}`).join(" + ")};
          `;return Ve},Nt=()=>{let Ve=`
            var col_index = col * ${O};
            ${zt?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${nr}(8);`}
            `;for(let ct=0;ct<O*B;ct++)Ve+=`
            let scale${ct} = ${Yt.getByOffset("col_index * nBlocksPerCol + block")};
            ${zt?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${zt.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${ct} = ${nr}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return Ve},hr=()=>{let Ve=`col_index = col * ${O};`;for(let ct=0;ct<O*B;ct++)Ve+=`
            let b${ct}_data = ${$t.getByIndices(`${$t.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return Ve+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${Er};
            var b_dequantized_values: ${Er};`,Ve};return`
        var<workgroup> workgroup_shared: array<${Ir.type.value}, ${B*se}>;
        ${Fe.declareVariables(...rr,Ir)}
        ${Fe.mainStart([se,1,1])}
          let output_indices = ${Ir.offsetToIndices(`(global_idx / ${se}) * ${B}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${se}) {
            //process one block
            var word_offset: u32 = block * ${t.blockSize/x};
            ${Nt()}
            for (var word: u32 = 0; word < ${h}; word += ${l}) {
              ${hr()}
              for (var i: u32 = 0; i < ${l}; i++) {
                ${Ft()}
                word_offset += ${8/x};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${B}) {
            var output_value: ${Ir.type.value} = ${Ir.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${se}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${B};
            }
            ${Ir.setByIndices(`${Ir.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${t.blockSize};${t.bits};${x};${l};${O};${B};${se}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:z,dataType:P}],dispatchGroup:{x:te},programUniforms:H}),getShaderSource:Ne}},Td=(e,t)=>{let r=e[0].dims,s=r.length,n=r[s-2],i=t.k,o=t.n,d=r.slice(0,s-2),p=De.size(d),h=e[1].dims[2]/4,P=e[0].dataType,x=Zt(t.k),l=Zt(h),O=d.concat([n,o]),z=128,B=o%8===0?8:o%4===0?4:1,te=z/B,se=te*l*8,H=se/x,pe=se/t.blockSize,ae=De.size(O)/B,ge=[],Ne=[p,n,i/x],Fe=De.convertShape(e[1].dims).slice();Fe.splice(-1,1,h/l),ge.push(...wt(Ne)),ge.push(...wt(Fe)),ge.push(...wt(e[2].dims)),e.length===4&&ge.push(...wt(De.convertShape(e[3].dims)));let rt=[p,n,o];ge.push(...wt(rt));let vt=$t=>{let Yt=Ne.length,rr=Ze("a",e[0].dataType,Yt,x),zt=Ze("b",12,Fe.length,l),Tr=Ze("scales",e[2].dataType,e[2].dims.length),Ir=[rr,zt,Tr],nr=e.length===4?Ze("zero_points",12,e[3].dims.length):void 0;nr&&Ir.push(nr);let Er=rt.length,Ft=kt("output",e[0].dataType,Er),Nt=or(e[0].dataType),hr=()=>{switch(x){case 1:return`
          let a_data0 = vec4<${Nt}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${Nt}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${Nt}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${Nt}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${x}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${rr.type.value}, ${H}>;
        var<workgroup> inter_results: array<array<${Ft.type.value}, ${te}>, ${B}>;
        ${$t.declareVariables(...Ir,Ft)}
        ${$t.mainStart([te,B,1])}
          let output_indices = ${Ft.offsetToIndices(`workgroup_index * ${B}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${pe} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${H};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${H}; a_offset += ${z})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${rr.getByIndices(`${rr.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${rr.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${pe} + local_id.x;
            ${nr?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${nr.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${Nt}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Nt}(8);`}
            let scale = ${Tr.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${zt.getByIndices(`${zt.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${t.blockSize/x};
            for (var i: u32 = 0; i < ${l}; i++) {
              ${hr()}
              let b_value = ${l===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${Nt}>(${Array.from({length:4},(Ve,ct)=>`${Nt}(b_value_lower[${ct}]), ${Nt}(b_value_upper[${ct}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${Nt}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(Ve,ct)=>`${`dot(a_data${ct}, b_dequantized_values[${ct}])`}`).join(" + ")};
              word_offset += ${8/x};
            }
            workgroupBarrier();
          }

          if (local_idx < ${B}) {
            var output_value: ${Ft.type.value} = ${Ft.type.value}(0);
            for (var b = 0u; b < ${te}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${Ft.setByIndices(`${Ft.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${t.blockSize};${x};${l};${te};${B}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:O,dataType:P}],dispatchGroup:{x:ae},programUniforms:ge}),getShaderSource:vt}},xd=(e,t)=>{bd(e.inputs,t),t.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(Td(e.inputs,t)):e.compute(vd(e.inputs,t))},ua=e=>qt(e)}),Xc,Pd,Cd,da,Yc,Jc,$d,Sd,kd,Zc=g(()=>{Ot(),Ut(),er(),Xc=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Pd=(e,t,r)=>{let s="";for(let n=t-1;n>=0;--n)s+=`
            k = i32(${e.indicesGet("indices",n)}) - ${St("uniforms.pads",n,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${St("uniforms.x_shape",n,t)})) {
              break;
            }
            offset += k * i32(${St("uniforms.x_strides",n,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${s}
            value = x[offset];
          }
      `},Cd=(e,t,r)=>{let s="";for(let n=t-1;n>=0;--n)s+=`
                k = i32(${e.indicesGet("indices",n)}) - ${St("uniforms.pads",n,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${St("uniforms.x_shape",n,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${St("uniforms.x_shape",n,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${St("uniforms.x_strides",n,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},da=(e,t,r)=>{let s="";for(let n=t-1;n>=0;--n)s+=`
                k = i32(${e.indicesGet("indices",n)}) - ${St("uniforms.pads",n,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${St("uniforms.x_shape",n,t)})) {
                  k = i32(${St("uniforms.x_shape",n,t)}) - 1;
                }
                offset += k * i32(${St("uniforms.x_strides",n,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},Yc=(e,t,r)=>{let s="";for(let n=t-1;n>=0;--n)s+=`
                k = i32(${e.indicesGet("indices",n)}) - ${St("uniforms.pads",n,r)};
                if (k < 0)  {
                  k += i32(${St("uniforms.x_shape",n,t)}]);
                }
                if (k >= i32(${St("uniforms.x_shape",n,t)})) {
                  k -= i32(${St("uniforms.x_shape",n,t)});
                }
                offset += k * i32(${St("uniforms.x_strides",n,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},Jc=(e,t,r)=>{switch(r.mode){case 0:return Pd(e,t,r.pads.length);case 1:return Cd(e,t,r.pads.length);case 2:return da(e,t,r.pads.length);case 3:return Yc(e,t,r.pads.length);default:throw new Error("Invalid mode")}},$d=(e,t)=>{let r=De.padShape(e[0].dims.slice(),t.pads),s=e[0].dims,n=De.size(r),i=[{type:12,data:n},{type:6,data:t.pads}],o=e.length>=3&&e[2].data;t.mode===0&&i.push({type:o?e[2].dataType:1,data:t.value}),i.push(...wt(e[0].dims,r));let d=["rank"],p=h=>{let P=kt("output",e[0].dataType,r.length),x=Ze("x",e[0].dataType,s.length),l=x.type.value,O=Jc(P,s.length,t),z=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&z.push({name:"constant_value",type:o?l:"f32"}),`
            ${h.registerUniforms(z).declareVariables(x,P)}
            ${h.mainStart()}
            ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${P.offsetToIndices("global_idx")};

            var value = ${l}(0);
            ${O}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}${o}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(De.size(r)/64)},programUniforms:i}),getShaderSource:p}},Sd=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),s=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,n=e[0].dims.length,i=new Int32Array(2*n).fill(0);if(e.length>=4){let d=e[3].getBigInt64Array();for(let p=0;p<d.length;p++)i[Number(d[p])]=Number(r[p]),i[Number(d[p])+n]=Number(r[p+d.length])}else r.forEach((d,p)=>i[Number(p)]=Number(d));let o=[];return i.forEach(d=>o.push(d)),{mode:t.mode,value:s,pads:o}}else return t},kd=(e,t)=>{Xc(e.inputs);let r=Sd(e.inputs,t);e.compute($d(e.inputs,r),{inputs:[0]})}}),Zn,ca,pa,ha,ma,Ad,Id,fa,Fd,Od,Dd,_a,Ld,zd,ga,ep,wa,Bd,Rd,tp=g(()=>{Et(),Ot(),Ut(),er(),Zn=e=>{if(E.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},ca=(e,t,r)=>{let s=t.format==="NHWC",n=e.dims.slice();s&&n.splice(1,0,n.pop());let i=Object.hasOwnProperty.call(t,"dilations"),o=t.kernelShape.slice(),d=t.strides.slice(),p=i?t.dilations.slice():[],h=t.pads.slice();wr.adjustPoolAttributes(r,n,o,d,p,h);let P=wr.computePoolOutputShape(r,n,d,p,o,h,t.autoPad),x=Object.assign({},t);i?Object.assign(x,{kernelShape:o,strides:d,pads:h,dilations:p,cacheKey:t.cacheKey}):Object.assign(x,{kernelShape:o,strides:d,pads:h,cacheKey:t.cacheKey});let l=P.slice();return l.push(l.splice(1,1)[0]),[x,s?l:P]},pa=(e,t)=>{let r=t.format==="NHWC",s=De.size(e),n=De.size(t.kernelShape),i=[{type:12,data:s},{type:12,data:n}],o=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let d=t.kernelShape[t.kernelShape.length-1],p=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],P=t.pads[t.pads.length-1],x=!!(h+P);i.push({type:12,data:d},{type:12,data:p},{type:12,data:h},{type:12,data:P}),o.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let l=!1;if(t.kernelShape.length===2){let O=t.kernelShape[t.kernelShape.length-2],z=t.strides[t.strides.length-2],B=t.pads[t.pads.length/2-2],te=t.pads[t.pads.length-2];l=!!(B+te),i.push({type:12,data:O},{type:12,data:z},{type:12,data:B},{type:12,data:te}),o.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,o,!0,x,l]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let d=De.computeStrides(t.kernelShape);i.push({type:12,data:d},{type:12,data:t.pads},{type:12,data:t.strides}),o.push({name:"kernelStrides",type:"u32",length:d.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let p=t.pads.reduce((h,P)=>h+P);return[i,o,!!p,!1,!1]}},ha=(e,t,r,s,n,i,o,d,p,h,P,x)=>{let l=n.format==="NHWC",O=t.type.value,z=kt("output",t.type.tensor,s);if(n.kernelShape.length<=2){let B="",te="",se="",H=r-(l?2:1);if(P?B=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${H}] = indices[${H}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${H}] < 0 || xIndices[${H}]
                      >= uniforms.x_shape[${H}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${i}
                }`:B=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${H}] = indices[${H}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${i}
                }`,n.kernelShape.length===2){let pe=r-(l?3:2);x?te=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${pe}] = indices[${pe}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${pe}] < 0 || xIndices[${pe}] >= uniforms.x_shape[${pe}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:te=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${pe}] = indices[${pe}] * uniforms.sh - uniforms.phStart + j;
                `,se=`
              }
            `}return`
            ${e.registerUniforms(p).declareVariables(t,z)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${z.offsetToIndices("global_idx")};
              var xIndices = ${z.offsetToIndices("global_idx")};

              var value = ${O}(${d});
              var pad = 0;
              ${te}
              ${B}
              ${se}
              ${o}

              output[global_idx] = value;
            }`}else{if(l)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let B=n.kernelShape.length,te=n.pads.length,se="";return h?se=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${i}
              }`:se=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${e.registerUniforms(p).declareVariables(t,z)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${z.offsetToIndices("global_idx")};
              var xIndices = ${z.offsetToIndices("global_idx")};

              var offsets: array<u32, ${B}>;

              var value = ${O}(${d});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${B-1}u; j++) {
                  offsets[j] = offset / ${St("uniforms.kernelStrides","j",B)};
                  offset -= offsets[j] * ${St("uniforms.kernelStrides","j",B)};
                }
                offsets[${B-1}] = offset;

                isPad = false;
                for (var j = ${r-B}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${St("uniforms.strides",`j - ${r-B}u`,B)}
                    + offsets[j - ${r-B}u] - ${St("uniforms.pads","j - 2u",te)};
                  ${se}
              }
              ${o}

              output[global_idx] = value;
            }`}},ma=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Ad=e=>`${ma(e)};${e.countIncludePad}`,Id=e=>`${ma(e)};${e.storageOrder};${e.dilations}`,fa=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Fd=(e,t,r,s)=>{let[n,i]=ca(t,s,r),o=Ze("x",t.dataType,t.dims.length),d=o.type.value,p="value += x_val;",h="";n.countIncludePad?h+=`value /= ${d}(uniforms.kernelSize);`:h+=`value /= ${d}(i32(uniforms.kernelSize) - pad);`;let[P,x,l,O,z]=pa(i,n);P.push(...wt(t.dims,i));let B=["rank"];return{name:e,shaderCache:{hint:`${s.cacheKey};${l};${O};${z}`,inputDependencies:B},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(De.size(i)/64)},programUniforms:P}),getShaderSource:te=>ha(te,o,t.dims.length,i.length,n,p,h,0,x,l,O,z)}},Od=e=>{let t=e.count_include_pad!==0,r=fa(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let s={countIncludePad:t,...r,cacheKey:""};return{...s,cacheKey:Ad(s)}},Dd=(e,t)=>{Zn(e.inputs),e.compute(Fd("AveragePool",e.inputs[0],!1,t))},_a={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Ld=e=>{let t=e.format;return{format:t,..._a,cacheKey:t}},zd=(e,t)=>{Zn(e.inputs),e.compute(Fd("GlobalAveragePool",e.inputs[0],!0,t))},ga=(e,t,r,s)=>{let[n,i]=ca(t,s,r),o=`
      value = max(x_val, value);
    `,d="",p=Ze("x",t.dataType,t.dims.length),h=["rank"],[P,x,l,O,z]=pa(i,n);return P.push(...wt(t.dims,i)),{name:e,shaderCache:{hint:`${s.cacheKey};${l};${O};${z}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(De.size(i)/64)},programUniforms:P}),getShaderSource:B=>ha(B,p,t.dims.length,i.length,n,o,d,t.dataType===10?-65504:-1e5,x,l,O,z)}},ep=(e,t)=>{Zn(e.inputs),e.compute(ga("MaxPool",e.inputs[0],!1,t))},wa=e=>{let t=e.storage_order,r=e.dilations,s=fa(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(s.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let n={storageOrder:t,dilations:r,...s,cacheKey:""};return{...n,cacheKey:Id(n)}},Bd=e=>{let t=e.format;return{format:t,..._a,cacheKey:t}},Rd=(e,t)=>{Zn(e.inputs),e.compute(ga("GlobalMaxPool",e.inputs[0],!0,t))}}),jd,Nd,Ud,Vd,rp=g(()=>{Ot(),Ut(),lr(),er(),jd=(e,t)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((r,s)=>r===e[2].dims[s]).reduce((r,s)=>r&&s,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(t.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((n,i)=>i===t.axis||n===e[0].dims[i]).reduce((n,i)=>n&&i,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let r=e[0].dims[t.axis],s=e[1].dims[t.axis];if(t.blockSize<Math.ceil(r/s)||t.blockSize>Math.ceil(r/(s-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},Nd=(e,t)=>{let r=De.normalizeAxis(t.axis,e[0].dims.length),s=e[0].dataType,n=s===3,i=e[0].dims,o=e[1].dataType,d=De.size(i),p=s===3||s===2,h=p?[Math.ceil(De.size(e[0].dims)/4)]:e[0].dims,P=e[1].dims,x=e.length>2?e[2]:void 0,l=x?p?[Math.ceil(De.size(x.dims)/4)]:x.dims:void 0,O=P.length===0||P.length===1&&P[0]===1,z=O===!1&&P.length===1,B=Zt(d),te=O&&(!p||B===4),se=te?B:1,H=te&&!p?B:1,pe=Ze("input",p?12:s,h.length,H),ae=Ze("scale",o,P.length),ge=x?Ze("zero_point",p?12:s,l.length):void 0,Ne=kt("output",o,i.length,se),Fe=[pe,ae];ge&&Fe.push(ge);let rt=[h,P];x&&rt.push(l);let vt=[{type:12,data:d/se},{type:12,data:r},{type:12,data:t.blockSize},...wt(...rt,i)],$t=Yt=>{let rr=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${Yt.registerUniforms(rr).declareVariables(...Fe,Ne)}
      ${Yt.mainStart()}
          ${Yt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${Ne.offsetToIndices("global_idx")};

          // Set input x
          ${p?`
            let input = ${pe.getByOffset("global_idx / 4")};
            let x_vec = ${n?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${se===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${pe.getByOffset("global_idx")};`};

          // Set scale input
          ${O?`let scale_value= ${ae.getByOffset("0")}`:z?`
            let scale_index = ${Ne.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${ae.getByOffset("scale_index")};`:`
            var scale_indices: ${ae.type.indices} = output_indices;
            let index = ${ae.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${ae.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${ae.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${ge?O?p?`
                let zero_point_input = ${ge.getByOffset("0")};
                let zero_point_vec =  ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${ge.getByOffset("0")}`:z?p?`
                let zero_point_index = ${Ne.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${ge.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${Ne.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${ge.getByOffset("zero_point_index")};`:p?`
                let zero_point_offset = ${ae.indicesToOffset("scale_indices")};
                let zero_point_input = ${ge.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${ge.getByIndices("scale_indices")};`:`let zero_point_value = ${p?n?"i32":"u32":pe.type.value}(0);`};
      // Compute and write output
      ${Ne.setByOffset("global_idx",`${Ne.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:t.cacheKey,inputDependencies:ge?["rank","rank","rank"]:["rank","rank"]},getShaderSource:$t,getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:Math.ceil(d/se/64),y:1,z:1},programUniforms:vt})}},Ud=(e,t)=>{jd(e.inputs,t),e.compute(Nd(e.inputs,t))},Vd=e=>qt({axis:e.axis,blockSize:e.blockSize})}),Wd,Gd,Kd,sp=g(()=>{Et(),Ot(),er(),Wd=(e,t,r)=>{let s=e===t,n=e<t&&r<0,i=e>t&&r>0;if(s||n||i)throw new Error("Range these inputs' contents are invalid.")},Gd=(e,t,r,s)=>{let n=Math.abs(Math.ceil((t-e)/r)),i=[n],o=n,d=[{type:12,data:o},{type:s,data:e},{type:s,data:r},...wt(i)],p=h=>{let P=kt("output",s,i.length),x=P.type.value,l=[{name:"outputSize",type:"u32"},{name:"start",type:x},{name:"delta",type:x}];return`
        ${h.registerUniforms(l).declareVariables(P)}
        ${h.mainStart()}
        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${x}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${s}`},getShaderSource:p,getRunData:()=>({outputs:[{dims:i,dataType:s}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:d})}},Kd=e=>{let t=0,r=0,s=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],s=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],s=e.inputs[2].getFloat32Array()[0]),E.webgpu.validateInputContent&&Wd(t,r,s),e.compute(Gd(t,r,s,e.inputs[0].dataType),{inputs:[]})}}),Hd,qd,Qd,Xd,Yd,Jd,Zd,ec,tc,rc,sc,ya,nc,oc,ic,ac,np,tr,lc,Yr=g(()=>{Ot(),Ut(),lr(),er(),Hd=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},qd=(e,t,r)=>{t.every(n=>n>=0&&n<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let s=new Array(r).fill(1);return t.forEach((n,i)=>s[n]=e[i]),s},Qd=(e,t,r,s,n,i)=>{let[o,d,p]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(o>0&&e.length>o&&e[o].dims.length>0)e[o].getFloat32Array().forEach(P=>i.push(P));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(d>0&&e.length>d&&e[d].dims.length===1&&e[d].dims[0]>0){if(e[d].getFloat32Array().forEach(P=>s.push(P)),s.length!==0&&s.length!==h&&r>=18&&s.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Hd(s,t),t.axes.length>0&&qd(s,t.axes,h).forEach((P,x)=>s[x]=P)}if(p>0&&e.length>p&&e[p].dims.length===1&&e[p].dims[0]>0&&(e[p].getBigInt64Array().forEach(P=>n.push(Number(P))),n.length!==0&&n.length!==h&&r>=18&&n.length!==t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(s.length!==0&&s.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(n.length!==0&&n.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof s<"u"&&typeof n<"u"&&s.length>0&&n.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},Xd=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Yd=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Jd=(e,t,r)=>{let s=new Array(r).fill(0).concat(new Array(r).fill(1)),n=e.length===0?s:e.slice();return t.length>0?(t.forEach((i,o)=>{s[i]=n[o],s[o+r]=n[t.length+o]}),s):n},Zd=(e,t,r,s)=>{let n=[];if(r.length>0)if(s.length>0){if(e.forEach(i=>n.push(i)),Math.max(...s)>e.length)throw new Error("axes is out of bound");s.forEach((i,o)=>n[i]=r[o])}else r.forEach(i=>n.push(i));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");n=e.map((i,o)=>Math.round(i*t[o]))}return n},ec=(e,t,r)=>{let s=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(i=>t[i]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(i=>t[i]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let n=e.slice();return r.axes.length>0?(r.axes.forEach(i=>t[i]=s),r.axes.forEach(i=>n[i]=Math.round(e[i]*t[i]))):(t.fill(s,0,t.length),n.forEach((i,o)=>n[o]=Math.round(i*t[o]))),n},tc=(e,t,r,s,n)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {
      var original_indices: array<${e.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${St("uniforms.scales","i",s)};
        var roi_low = ${St("uniforms.roi","i",n)};
        var roi_hi = ${St("uniforms.roi",`i + ${t.length}`,n)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${St("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${St("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,rc=(e,t,r,s,n,i,o)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${St("uniforms.scales","i",n)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${St("uniforms.roi","i",i)};
          var roi_hi = ${St("uniforms.roi",`i + ${r.length}`,i)};
          var input_shape_i = ${St("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${St("uniforms.output_shape","i",s.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${o} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,sc=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${St("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,ya=(e,t,r,s)=>e.rank>s?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",r,"batch")};
`:"",nc=(e,t,r,s,n)=>{let[i,o,d,p]=r.length===2?[-1,0,1,-1]:[0,2,3,1],h=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${h} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(row, ${r[o]} - 1))`)};
      ${e.indicesSet("input_indices",d,`max(0, min(col, ${r[d]} - 1))`)};
      ${ya(e,p,i,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${h} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${h} = originalIndices[${o}];
      var col:${h} = originalIndices[${d}];
      ${s?`if (row < 0 || row > (${r[o]} - 1) || col < 0 || col > (${r[d]} - 1)) {
        return ${n};
      }`:""};
      row = max(0, min(row, ${r[o]} - 1));
      col = max(0, min(col, ${r[d]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${p}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${i}])`:"0"};
      var x11: ${h} = getInputValue(batch, channel, row1, col1);
      var x12: ${h} = getInputValue(batch, channel, row1, col2);
      var x21: ${h} = getInputValue(batch, channel, row2, col1);
      var x22: ${h} = getInputValue(batch, channel, row2, col2);
      var dx1: ${h} = abs(row - ${h}(row1));
      var dx2: ${h} = abs(${h}(row2) - row);
      var dy1: ${h} = abs(col - ${h}(col1));
      var dy2: ${h} = abs(${h}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},oc=(e,t,r,s,n,i,o,d,p,h)=>{let P=r.length===2,[x,l]=P?[0,1]:[2,3],O=e.type.value,z=B=>{let te=B===x?"row":"col";return`
      fn ${te}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${O} {
        var output_index = ${t.indicesGet("output_indices",B)};
        var originalIdx: ${O} = getOriginalCoordinateFromResizedCoordinate(output_index, ${n[B]},
        ${s[B]}, ${r[B]}, ${i[B]}, ${i[B]} + ${r.length});
        var fractOriginalIdx: ${O} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${d} && (originalIdx < 0 || originalIdx > (${r[B]} - 1))) {
          return ${p};
        }
        var data: array<${O}, 4> = array<${O}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${te}: ${O} = originalIdx + ${O}(i);
          if (${te} < 0 || ${te} >= ${r[B]}) {
            ${h?`coefs[i + 1] = 0.0;
                        continue;`:d?`return ${p};`:`${te} = max(0, min(${te}, ${r[B]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",B,`u32(${te})`)};
          data[i + 1] = ${B===x?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${z(x)};
    ${z(l)};
  fn getCubicInterpolationCoefs(s: ${O}) -> array<${O}, 4> {
    var absS = abs(s);
    var coeffs: array<${O}, 4> = array<${O}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${O} = 1.0 - absS;
    var twoMinusAbsS: ${O} = 2.0 - absS;
    var onePlusAbsS: ${O} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${O}, 4>, coefs: array<${O}, 4>) -> ${O} {
    var coefsSum: ${O} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${O} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},ic=(e,t,r,s,n)=>{let[i,o,d,p,h]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],P=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${P} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(depth, ${r[o]} - 1))`)};
      ${e.indicesSet("input_indices",d,`max(0, min(height, ${r[d]} - 1))`)};
      ${e.indicesSet("input_indices",p,`max(0, min(width, ${r[p]} - 1))`)};
      ${ya(e,h,i,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${P} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${P} = originalIndices[${o}];
      var height:${P} = originalIndices[${d}];
      var width:${P} = originalIndices[${p}];
      ${s?`if (depth < 0 || depth > (${r[o]} - 1) || height < 0 || height > (${r[d]} - 1) || width < 0 || (width > ${r[p]} - 1)) {
      return ${n};
        }`:""};

    depth = max(0, min(depth, ${r[o]} - 1));
      height = max(0, min(height, ${r[d]} - 1));
      width = max(0, min(width, ${r[p]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${h}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${i}])`:"0"};

      var x111: ${P} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${P} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${P} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${P} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${P} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${P} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${P} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${P} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${P} = abs(depth - ${P}(depth1));
      var dx2: ${P} = abs(${P}(depth2) - depth);
      var dy1: ${P} = abs(height - ${P}(height1));
      var dy2: ${P} = abs(${P}(height2) - height);
      var dz1: ${P} = abs(width - ${P}(width1));
      var dz2: ${P} = abs(${P}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},ac=(e,t,r,s,n,i)=>{let o=e.dims,d=Jd(i,t.axes,o.length),p=Zd(o,s,n,t.axes),h=s.slice();s.length===0&&(h=o.map((H,pe)=>H===0?1:p[pe]/H),t.keepAspectRatioPolicy!=="stretch"&&(p=ec(o,h,t)));let P=kt("output",e.dataType,p.length),x=Ze("input",e.dataType,o.length),l=De.size(p),O=o.length===p.length&&o.every((H,pe)=>H===p[pe]),z=t.coordinateTransformMode==="tf_crop_and_resize",B=t.extrapolationValue,te=x.type.value,se=H=>`
      ${O?"":`
      ${Xd(t.coordinateTransformMode,te)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${sc(x,o)};
              ${Yd(t.nearestMode,r,te)};
              ${rc(x,P,o,p,h.length,d.length,z)};
              `;case"linear":return`
              ${tc(P,o,p,h.length,d.length)};
              ${(()=>{if(o.length===2||o.length===4)return`${nc(x,P,o,z,B)}`;if(o.length===3||o.length===5)return`${ic(x,P,o,z,B)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(o.length===2||o.length===4)return`${oc(x,P,o,p,h,d,t.cubicCoeffA,z,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${H.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",d.length).declareVariables(x,P)}
      ${H.mainStart()}
        ${H.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${O?"output[global_idx] = input[global_idx];":`
        let output_indices = ${P.offsetToIndices("global_idx")};
        var input_indices: ${x.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${x.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${o.length===2||o.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${n.length>0?n:""}|${d.length>0?d:""}|${O}|${o}`,inputDependencies:["rank"]},getShaderSource:se,getRunData:()=>({outputs:[{dims:p,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:[{type:12,data:l},{type:1,data:h},{type:1,data:d},...wt(o,p)]})}},np=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},tr=(e,t)=>{let r=[],s=[],n=[],i=np(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Qd(e.inputs,t,i,r,s,n),e.compute(ac(e.inputs[0],t,i,r,s,n),{inputs:[0]})},lc=e=>{let t=e.antialias,r=e.axes,s=e.coordinateTransformMode,n=e.cubicCoeffA,i=e.excludeOutside!==0,o=e.extrapolationValue,d=e.keepAspectRatioPolicy,p=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return qt({antialias:t,axes:r,coordinateTransformMode:s,cubicCoeffA:n,excludeOutside:i,extrapolationValue:o,keepAspectRatioPolicy:d,mode:p,nearestMode:h})}}),Jr,ns,hn,Pp=g(()=>{Ot(),Ut(),lr(),er(),Jr=(e,t)=>{let[r,s,n,i]=e,{numHeads:o,rotaryEmbeddingDim:d}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!De.areEqual(s.dims,[])&&!De.areEqual(s.dims,[1])&&s.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${s.dims.length}`);if(n.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(!De.areEqual(n.dims,i.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(d>0&&o===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let p=r.dims[0],h=r.dims[r.dims.length-2],P=n.dims[0],x=De.sizeFromDimension(r.dims,1)/h,l=d===0?n.dims[1]*2:x/o;if(d>l)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(s.dims.length===2){if(p!==s.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${s.dims[0]}`);if(h!==s.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${s.dims[1]}`)}if(l/2!==n.dims[1]&&d/2!==n.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${n.dims[1]}`);if(h>P)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},ns=(e,t)=>{let{interleaved:r,numHeads:s,rotaryEmbeddingDim:n,scale:i}=t,o=e[0].dims[0],d=De.sizeFromDimension(e[0].dims,1),p=e[0].dims[e[0].dims.length-2],h=d/p,P=e[2].dims[1],x=n===0?P*2:h/s,l=new Array(o,p,h/x,x-P),O=De.computeStrides(l),z=[{type:1,data:i},{type:12,data:l},{type:12,data:O},...e[0].dims.length===3?new Array({type:12,data:[d,h,x,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[d,x,p*x,1]}):[],...wt(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],B=te=>{let se=Ze("input",e[0].dataType,e[0].dims.length),H=Ze("position_ids",e[1].dataType,e[1].dims.length),pe=Ze("cos_cache",e[2].dataType,e[2].dims.length),ae=Ze("sin_cache",e[3].dataType,e[3].dims.length),ge=kt("output",e[0].dataType,e[0].dims.length);return te.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:l.length},{name:"global_strides",type:"u32",length:O.length},{name:"input_output_strides",type:"u32",length:O.length}]),`
        ${te.declareVariables(se,H,pe,ae,ge)}

        ${te.mainStart(Rr)}
          let half_rotary_emb_dim = uniforms.${pe.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${te.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${H.broadcastedIndicesToOffset("bsnh.xy",kt("",H.type.tensor,2))};
            let position_id =
                u32(${H.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});
            let j = i + select(half_rotary_emb_dim, 1, ${r});
            let re = ${se.getByOffset("i")} * ${pe.get("position_id","bsnh[3]")} -
                ${se.getByOffset("j")} * ${ae.get("position_id","bsnh[3]")};
            ${ge.setByOffset("i","re")}
            let im = ${se.getByOffset("i")} * ${ae.get("position_id","bsnh[3]")} +
                ${se.getByOffset("j")} * ${pe.get("position_id","bsnh[3]")};
            ${ge.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${ge.setByOffset("k",se.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:qt({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:B,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(De.size(l)/Rr)},programUniforms:z})}},hn=(e,t)=>{Jr(e.inputs,t),e.compute(ns(e.inputs,t))}}),uc,dc,f,S=g(()=>{Ot(),Ut(),er(),uc=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],s=e[2];if(t.dataType!==r.dataType||t.dataType!==s.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let n=t.dims[t.dims.length-1],i=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==n)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(s.dims.length!==1)throw new Error("Gamma must be 1D");if(s.dims[s.dims.length-1]!==n)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let o=e[3];if(o.dims.length!==1)throw new Error("Beta must be 1D");if(o.dims[o.dims.length-1]!==n)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let o=e[4];if(o.dims.length!==1)throw new Error("Bias must be 1D");if(o.dims[o.dims.length-1]!==n)throw new Error("Bias must have the same hidden size as input")}},dc=(e,t,r,s)=>{let n=t.simplified,i=e[0].dims,o=De.size(i),d=i,p=o,h=i.slice(-1)[0],P=s?i.slice(0,-1).concat(1):[],x=!n&&e.length>3,l=e.length>4,O=s&&r>1,z=s&&r>2,B=r>3,te=64,se=Zt(h),H=[{type:12,data:p},{type:12,data:se},{type:12,data:h},{type:1,data:t.epsilon}],pe=ge=>{let Ne=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],Fe=[Ze("x",e[0].dataType,e[0].dims,se),Ze("skip",e[1].dataType,e[1].dims,se),Ze("gamma",e[2].dataType,e[2].dims,se)];x&&Fe.push(Ze("beta",e[3].dataType,e[3].dims,se)),l&&Fe.push(Ze("bias",e[4].dataType,e[4].dims,se)),Fe.push(kt("output",e[0].dataType,d,se)),O&&Fe.push(kt("mean_output",1,P)),z&&Fe.push(kt("inv_std_output",1,P)),B&&Fe.push(kt("input_skip_bias_sum",e[0].dataType,d,se));let rt=or(e[0].dataType),vt=or(1,se);return`

      ${ge.registerUniforms(Ne).declareVariables(...Fe)}
      var<workgroup> sum_shared : array<${vt}, ${te}>;
      var<workgroup> sum_squared_shared : array<${vt}, ${te}>;

      ${ge.mainStart([te,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${te};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${te};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${te-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${l?"bias[offset1d + i]":rt+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${B?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Is(rt,se,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${te};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Fs("sum",se)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Fs("square_sum",se)} / f32(uniforms.hidden_size) ${n?"":"- mean * mean"} + uniforms.epsilon);
        ${O?"mean_output[global_idx] = mean;":""}
        ${z?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${n?"":`- ${rt}(mean)`}) *
            ${rt}(inv_std_dev) * gamma[offset1d + i]
            ${x?"+ beta[offset1d + i]":""};
        }
      }`},ae=[{dims:d,dataType:e[0].dataType}];return r>1&&ae.push({dims:P,dataType:1}),r>2&&ae.push({dims:P,dataType:1}),r>3&&ae.push({dims:i,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${se};${O};${z};${B}`,inputDependencies:e.map((ge,Ne)=>"type")},getShaderSource:pe,getRunData:()=>({outputs:ae,dispatchGroup:{x:Math.ceil(p/h)},programUniforms:H})}},f=(e,t)=>{uc(e.inputs);let r=[0];e.outputCount>1&&r.push(-3),e.outputCount>2&&r.push(-3),e.outputCount>3&&r.push(3),e.compute(dc(e.inputs,t,e.outputCount,!1),{outputs:r})}}),L,ve,Ie,Se,Xe,tt,ft,bt,Ht=g(()=>{Ot(),Ut(),lr(),er(),L=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,s)=>{if(e[s+1].dataType!==6&&e[s+1].dataType!==7)throw new Error(`Input ${s} must be an array of int32 or int64`)})},ve=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(s=>r.push(Number(s)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(s=>r.push(Number(s)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Ie=(e,t)=>{if(e.length>1){let r=ve(e,1),s=ve(e,2),n=ve(e,3);return n.length===0&&(n=[...Array(e[0].dims.length).keys()]),qt({starts:r,ends:s,axes:n})}else return t},Se=(e,t,r,s,n)=>{let i=e;return e<0&&(i+=r[s[t]]),n[t]<0?Math.max(0,Math.min(i,r[s[t]]-1)):Math.max(0,Math.min(i,r[s[t]]))},Xe=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${St("uniforms.input_shape","i",r.length)};
            let steps_i = ${St("uniforms.steps","i",r.length)};
            let signs_i = ${St("uniforms.signs","i",r.length)};
            let starts_i = ${St("uniforms.starts","i",r.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,tt=(e,t)=>{let r=e[0].dims,s=De.size(r),n=t.axes.length>0?De.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],i=ve(e,4);i.forEach(se=>se!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(n.length).fill(1));let o=t.starts.map((se,H)=>Se(se,H,r,n,i)),d=t.ends.map((se,H)=>Se(se,H,r,n,i));if(n.length!==o.length||n.length!==d.length)throw new Error("start, ends and axes should have the same number of elements");if(n.length!==r.length)for(let se=0;se<r.length;++se)n.includes(se)||(o.splice(se,0,0),d.splice(se,0,r[se]),i.splice(se,0,1));let p=i.map(se=>Math.sign(se));i.forEach((se,H,pe)=>{if(se<0){let ae=(d[H]-o[H])/se,ge=o[H],Ne=ge+ae*i[H];o[H]=Ne,d[H]=ge,pe[H]=-se}});let h=r.slice(0);n.forEach((se,H)=>{h[se]=Math.ceil((d[se]-o[se])/i[se])});let P={dims:h,dataType:e[0].dataType},x=kt("output",e[0].dataType,h.length),l=Ze("input",e[0].dataType,e[0].dims.length),O=De.size(h),z=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:p.length},{name:"steps",type:"u32",length:i.length}],B=[{type:12,data:O},{type:12,data:o},{type:6,data:p},{type:12,data:i},...wt(e[0].dims,h)],te=se=>`
      ${se.registerUniforms(z).declareVariables(l,x)}
        ${Xe(l,x,r)}
        ${se.mainStart()}
          ${se.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${x.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${x.setByOffset("global_idx",l.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${p.length}_${o.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:te,getRunData:()=>({outputs:[P],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:B})}},ft=(e,t)=>{L(e.inputs,t);let r=Ie(e.inputs,t);e.compute(tt(e.inputs,r),{inputs:[0]})},bt=e=>{let t=e.starts,r=e.ends,s=e.axes;return qt({starts:t,ends:r,axes:s})}}),jt,Lt,Gt,sr,ir=g(()=>{Ot(),Ut(),lr(),Us(),er(),jt=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Lt=(e,t)=>{let r=e.inputs[0],s=r.dims,n=De.size(s),i=64,o=s.length,d=De.normalizeAxis(t.axis,o),p=d<s.length-1,h,P=[];p?(P=Array.from({length:o},(Fe,rt)=>rt),P[d]=o-1,P[o-1]=d,h=e.compute(fs(r,P),{inputs:[r],outputs:[-1]})[0]):h=r;let x=h.dims,l=x[o-1],O=n/l,z=Zt(l),B=l/z,te=(Fe,rt)=>rt===4?`max(max(${Fe}.x, ${Fe}.y), max(${Fe}.z, ${Fe}.w))`:rt===2?`max(${Fe}.x, ${Fe}.y)`:rt===3?`max(max(${Fe}.x, ${Fe}.y), ${Fe}.z)`:Fe,se=Ze("x",h.dataType,h.dims,z),H=kt("result",h.dataType,h.dims,z),pe=se.type.value,ae=or(h.dataType)==="f32"?`var threadMax = ${pe}(-3.402823e+38f);`:`var threadMax = ${pe}(-65504.0h);`,ge=Fe=>`
      var<workgroup> rowMaxShared : ${pe};
      var<workgroup> rowSumShared : ${pe};
      var<workgroup> threadShared : array<${pe}, ${i}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${pe} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${pe}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${Fe.registerUniform("packedCols","i32").declareVariables(se,H)}
      ${Fe.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${i};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${ae}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${pe}(${te("threadShared[0]",z)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${pe}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${pe}(${Fs("threadShared[0]",z)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,Ne=e.compute({name:"Softmax",shaderCache:{hint:`${z}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:x,dataType:h.dataType}],dispatchGroup:{x:O},programUniforms:[{type:6,data:B}]}),getShaderSource:ge},{inputs:[h],outputs:[p?-1:0]})[0];p&&e.compute(fs(Ne,P),{inputs:[Ne]})},Gt=(e,t)=>{jt(e.inputs),Lt(e,t)},sr=e=>qt({axis:e.axis})}),Xt,dr,Or,$r,pr,kr,Lr,os=g(()=>{Ot(),Ut(),lr(),er(),Xt=e=>{if(!e||e.length<1)throw new Error("too few inputs")},dr=(e,t)=>{let r=[],s=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),s=r.length),qt({numOutputs:s,axis:t.axis,splitSizes:r})},Or=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${St("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,$r=e=>{let t=e.length,r=[];for(let s=0;s<t;++s){let n=e[s].setByIndices("indices","input[global_idx]");t===1?r.push(n):s===0?r.push(`if (output_number == ${s}u) { ${n} }`):s===t-1?r.push(`else { ${n} }`):r.push(`else if (output_number == ${s}) { ${n} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},pr=(e,t)=>{let r=e[0].dims,s=De.size(r),n=e[0].dataType,i=De.normalizeAxis(t.axis,r.length),o=new Array(t.numOutputs),d=Ze("input",n,r.length),p=new Array(t.numOutputs),h=[],P=[],x=0,l=[{type:12,data:s}];for(let z=0;z<t.numOutputs;z++){x+=t.splitSizes[z],p[z]=x;let B=r.slice();B[i]=t.splitSizes[z],P.push(B),o[z]=kt(`output${z}`,n,B.length),h.push({dims:P[z],dataType:e[0].dataType})}l.push({type:12,data:p},...wt(r,...P));let O=z=>`
  ${z.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",p.length).declareVariables(d,...o)}
  ${Or(p.length)}
  ${$r(o)}

  ${z.mainStart()}
    ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${d.offsetToIndices("global_idx")};
    var index = ${d.indicesGet("indices",i)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${St("uniforms.size_in_split_axis","output_number - 1u",p.length)};
      ${d.indicesSet("indices",i,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:O,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(s/64)},programUniforms:l})}},kr=(e,t)=>{Xt(e.inputs);let r=e.inputs.length===1?t:dr(e.inputs,t);e.compute(pr(e.inputs,r),{inputs:[0]})},Lr=e=>{let t=e.axis,r=e.splitSizes,s=e.numOutputs<0?r.length:e.numOutputs;if(s!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return qt({axis:t,numOutputs:s,splitSizes:r})}}),Kr,Ss,In,cc=g(()=>{Ot(),Ut(),er(),Kr=(e,t,r,s,n)=>{let i=kt("output_data",n,r.length,4),o=Ze("a_data",t[1].dataType,t[1].dims.length,4),d=Ze("b_data",t[2].dataType,t[2].dims.length,4),p=Ze("c_data",t[0].dataType,t[0].dims.length,4),h,P=(x,l,O)=>`select(${l}, ${x}, ${O})`;if(!s)h=i.setByOffset("global_idx",P(o.getByOffset("global_idx"),d.getByOffset("global_idx"),p.getByOffset("global_idx")));else{let x=(l,O,z="")=>{let B=`a_data[index_a${O}][component_a${O}]`,te=`b_data[index_b${O}][component_b${O}]`,se=`bool(c_data[index_c${O}] & (0xffu << (component_c${O} * 8)))`;return`
            let output_indices${O} = ${i.offsetToIndices(`global_idx * 4u + ${O}u`)};
            let offset_a${O} = ${o.broadcastedIndicesToOffset(`output_indices${O}`,i)};
            let offset_b${O} = ${d.broadcastedIndicesToOffset(`output_indices${O}`,i)};
            let offset_c${O} = ${p.broadcastedIndicesToOffset(`output_indices${O}`,i)};
            let index_a${O} = offset_a${O} / 4u;
            let index_b${O} = offset_b${O} / 4u;
            let index_c${O} = offset_c${O} / 4u;
            let component_a${O} = offset_a${O} % 4u;
            let component_b${O} = offset_b${O} % 4u;
            let component_c${O} = offset_c${O} % 4u;
            ${l}[${O}] = ${z}(${P(B,te,se)});
          `};n===9?h=`
            var data = vec4<u32>(0);
            ${x("data",0,"u32")}
            ${x("data",1,"u32")}
            ${x("data",2,"u32")}
            ${x("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`
            ${x("output_data[global_idx]",0)}
            ${x("output_data[global_idx]",1)}
            ${x("output_data[global_idx]",2)}
            ${x("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(p,o,d,i)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${h}
      }`},Ss=e=>{let t=e[1].dims,r=e[2].dims,s=e[0].dims,n=e[1].dataType,i=!(De.areEqual(t,r)&&De.areEqual(r,s)),o=t,d=De.size(t);if(i){let h=Gr.calcShape(Gr.calcShape(t,r,!1),s,!1);if(!h)throw new Error("Can't perform where op on the given tensors");o=h,d=De.size(o)}let p=Math.ceil(d/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>Kr(h,e,o,i,n),getRunData:()=>({outputs:[{dims:o,dataType:n}],dispatchGroup:{x:Math.ceil(d/64/4)},programUniforms:[{type:12,data:p},...wt(s,t,r,o)]})}},In=e=>{e.compute(Ss(e.inputs))}}),_s,Ws=g(()=>{vc(),yo(),Tc(),xc(),Ec(),Pc(),Cc(),pn(),Fc(),Oc(),Xn(),zc(),Bc(),Rc(),jc(),Uc(),Vc(),ad(),Kc(),vr(),Md(),Eu(),Ed(),cd(),Zc(),tp(),rp(),sp(),ui(),Yr(),Pp(),S(),Ht(),ir(),os(),md(),Us(),Mo(),cc(),_s=new Map([["Abs",[Pl]],["Acos",[Cl]],["Acosh",[hi]],["Add",[su]],["ArgMax",[ml,wo]],["ArgMin",[hl,wo]],["Asin",[$l]],["Asinh",[Sl]],["Atan",[mi]],["Atanh",[kl]],["Attention",[yl]],["AveragePool",[Dd,Od]],["BatchNormalization",[vl]],["BiasAdd",[pi]],["BiasSplitGelu",[bo]],["Cast",[fi,Al]],["Ceil",[_i]],["Clip",[Fl]],["Concat",[Ai,hu]],["Conv",[Vi,ji]],["ConvTranspose",[Ru,Du]],["Cos",[Ol]],["Cosh",[Dl]],["CumSum",[Fo,Nu]],["DepthToSpace",[Wu,Gu]],["DequantizeLinear",[Ud,Vd]],["Div",[Ci]],["Einsum",[Qu,Xu]],["Elu",[Ll,Wn]],["Equal",[nu]],["Erf",[zl]],["Exp",[Bl]],["Expand",[Ju]],["FastGelu",[Zu]],["Floor",[Rl]],["FusedConv",[Vi,ji]],["Gather",[rd,td]],["GatherElements",[Ji,od]],["GatherBlockQuantized",[Nc,sd]],["Gelu",[jl]],["Gemm",[Gc,Wc]],["GlobalAveragePool",[zd,Ld]],["GlobalMaxPool",[Rd,Bd]],["Greater",[au]],["GreaterOrEqual",[uu]],["GroupQueryAttention",[ia,_d]],["HardSigmoid",[Kl,Gl]],["InstanceNormalization",[yd]],["LayerNormalization",[Qc]],["LeakyRelu",[gi,Wn]],["Less",[lu]],["LessOrEqual",[Si]],["Log",[Yl]],["MatMul",[xu]],["MatMulNBits",[xd,ua]],["MaxPool",[ep,wa]],["Mul",[ou]],["MultiHeadAttention",[ea,ud]],["Neg",[Ul]],["Not",[Nl]],["Pad",[kd]],["Pow",[iu]],["QuickGelu",[Zl,Wn]],["Range",[Kd]],["Reciprocal",[Vl]],["ReduceMin",[ai]],["ReduceMean",[il]],["ReduceMax",[ul]],["ReduceSum",[cl]],["ReduceProd",[dl]],["ReduceL1",[al]],["ReduceL2",[ii]],["ReduceLogSum",[pl]],["ReduceLogSumExp",[ll]],["ReduceSumSquare",[li]],["Relu",[Wl]],["Resize",[tr,lc]],["RotaryEmbedding",[hn]],["Sigmoid",[wi]],["Sin",[Hl]],["Sinh",[ql]],["Slice",[ft,bt]],["SkipLayerNormalization",[f]],["Split",[kr,Lr]],["Sqrt",[yi]],["Softmax",[Gt,sr]],["Sub",[$i]],["Tan",[Ql]],["Tanh",[bi]],["ThresholdedRelu",[Xl,Wn]],["Tile",[hd]],["Transpose",[za,Ba]],["Where",[In]]])}),Ma,ba=g(()=>{Et(),xe(),er(),Ma=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,r,s,n){qe(e.programInfo.name);let i=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let d=[];for(let h of t)d.push({binding:d.length,resource:{buffer:h.buffer}});for(let h of r)d.push({binding:d.length,resource:{buffer:h.buffer}});n&&d.push({binding:d.length,resource:n});let p=i.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:d,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let h={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:p,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(h)}o.setPipeline(e.computePipeline),o.setBindGroup(0,p),o.dispatchWorkgroups(...s),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),ze(e.programInfo.name)}dispose(){}build(e,t){qe(e.name);let r=this.backend.device,s=[];r.features.has("shader-f16")&&s.push("enable f16;");let n=Yo(t,this.backend.device.limits),i=e.getShaderSource(n),o=`${s.join(`
`)}
${n.additionalImplementations}
${i}`,d=r.createShaderModule({code:o,label:e.name});_r("verbose",()=>`[WebGPU] ${e.name} shader code: ${o}`);let p=r.createComputePipeline({compute:{module:d,entryPoint:"main"},layout:"auto",label:e.name});return ze(e.name),{programInfo:e,computePipeline:p,uniformVariablesInfo:n.variablesInfo}}normalizeDispatchGroupSize(e){let t=typeof e=="number"?e:e.x,r=typeof e=="number"?1:e.y||1,s=typeof e=="number"?1:e.z||1,n=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=n&&r<=n&&s<=n)return[t,r,s];let i=t*r*s,o=Math.ceil(Math.sqrt(i));if(o>n){if(o=Math.ceil(Math.cbrt(i)),o>n)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}else return[o,o,1]}}}),Ro,jo,Ar,Ur,mn=g(()=>{Et(),Ot(),xe(),K(),Jt(),Ws(),ba(),Ro=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let s=0;s<e.length;++s){let n=e[s].dataType;switch(t[s]){case"none":{r.push("");break}case"type":{r.push(`${n}`);break}case"rank":{let i=e[s].dims.length;r.push(`${n};${i}`);break}case"dims":{let i=e[s].dims.join(",");r.push(`${n};${i}`);break}default:throw new Error(`unsupported input dependency: ${t[s]}`)}}return r.join("|")},jo=(e,t,r)=>{var n,i;let s=e.name;return(n=e.shaderCache)!=null&&n.hint&&(s+="["+e.shaderCache.hint+"]"),s+=":"+r+`:${Ro(t,((i=e.shaderCache)==null?void 0:i.inputDependencies)??new Array(t.length).fill("dims"))}`,s},Ar=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},Ur=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let r=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:r};t.features.has("chromium-experimental-timestamp-query-inside-passes")?r.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&r.push("timestamp-query"),t.features.has("shader-f16")&&r.push("shader-f16"),this.device=await t.requestDevice(s),this.adapterInfo=new Ar(t.info||await t.requestAdapterInfo()),this.gpuDataManager=gr(this),this.programManager=new Ma(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Sn(e.logLevel,!!e.debug),this.device.onuncapturederror=n=>{n.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${n.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;qe(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{var s;let t=new BigUint64Array(e.getMappedRange()),r=this.pendingQueries.get(e);for(let n=0;n<t.length/2;n++){let i=r[n],o=i.kernelId,d=this.kernels.get(o),p=d.kernelType,h=d.kernelName,P=i.programName,x=i.inputTensorViews,l=i.outputTensorViews,O=t[n*2],z=t[n*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=O);let B=Number(O-this.queryTimeBase),te=Number(z-this.queryTimeBase);if(!Number.isSafeInteger(B)||!Number.isSafeInteger(te))throw new RangeError("incorrect timestamp range");if((s=this.env.webgpu.profiling)!=null&&s.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:x.map(se=>({dims:se.dims,dataType:Es(se.dataType)})),outputsMetadata:l.map(se=>({dims:se.dims,dataType:Es(se.dataType)})),kernelId:o,kernelType:p,kernelName:h,programName:P,startTime:B,endTime:te});else{let se="";x.forEach((pe,ae)=>{se+=`input[${ae}]: [${pe.dims}] | ${Es(pe.dataType)}, `});let H="";l.forEach((pe,ae)=>{H+=`output[${ae}]: [${pe.dims}] | ${Es(pe.dataType)}, `}),console.log(`[profiling] kernel "${o}|${p}|${h}|${P}" ${se}${H}execution time: ${te-B} ns`)}et("GPU",`${P}::${O}::${z}`)}e.unmap(),this.pendingQueries.delete(e)}),ze()}run(e,t,r,s,n,i){qe(e.name);let o=[];for(let H=0;H<t.length;++H){let pe=t[H].data;if(pe===0)continue;let ae=this.gpuDataManager.get(pe);if(!ae)throw new Error(`no GPU data for input: ${pe}`);o.push(ae)}let{outputs:d,dispatchGroup:p,programUniforms:h}=e.getRunData(t),P=r.length===0?d.map((H,pe)=>pe):r;if(P.length!==d.length)throw new Error(`Output size ${P.length} must be equal to ${d.length}.`);let x=[],l=[];for(let H=0;H<d.length;++H){if(!Number.isInteger(P[H])||P[H]<-3||P[H]>=i)throw new Error(`Invalid output index: ${P[H]}`);if(P[H]===-3)continue;let pe=P[H]===-1,ae=P[H]===-2,ge=pe||ae?n(d[H].dataType,d[H].dims):s(P[H],d[H].dataType,d[H].dims);if(x.push(ge),ge.data===0)continue;let Ne=this.gpuDataManager.get(ge.data);if(!Ne)throw new Error(`no GPU data for output: ${ge.data}`);if(pe&&this.temporaryData.push(Ne),ae){let Fe=this.kernelPersistentData.get(this.currentKernelId);Fe||(Fe=[],this.kernelPersistentData.set(this.currentKernelId,Fe)),Fe.push(Ne)}l.push(Ne)}if(o.length!==t.length||l.length!==x.length){if(l.length===0)return ze(e.name),x;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let O;if(h){let H=0,pe=[];h.forEach(Fe=>{let rt=typeof Fe.data=="number"?[Fe.data]:Fe.data;if(rt.length===0)return;let vt=Fe.type===10?2:4,$t,Yt;Fe.type===10?(Yt=rt.length>4?16:rt.length>2?8:rt.length*vt,$t=rt.length>4?16:vt*rt.length):(Yt=rt.length<=2?rt.length*vt:16,$t=16),H=Math.ceil(H/Yt)*Yt,pe.push(H);let rr=Fe.type===10?8:4;H+=rt.length>4?Math.ceil(rt.length/rr)*$t:rt.length*vt});let ae=16;H=Math.ceil(H/ae)*ae;let ge=new ArrayBuffer(H);h.forEach((Fe,rt)=>{let vt=pe[rt],$t=typeof Fe.data=="number"?[Fe.data]:Fe.data;if(Fe.type===6)new Int32Array(ge,vt,$t.length).set($t);else if(Fe.type===12)new Uint32Array(ge,vt,$t.length).set($t);else if(Fe.type===10)new Uint16Array(ge,vt,$t.length).set($t);else if(Fe.type===1)new Float32Array(ge,vt,$t.length).set($t);else throw new Error(`Unsupported uniform type: ${Es(Fe.type)}`)});let Ne=this.gpuDataManager.create(H,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(Ne.buffer,0,ge,0,H),this.gpuDataManager.release(Ne.id),O={offset:0,size:H,buffer:Ne.buffer}}let z=this.programManager.normalizeDispatchGroupSize(p),B=z[1]===1&&z[2]===1,te=jo(e,t,B),se=this.programManager.getArtifact(te);if(se||(se=this.programManager.build(e,z),this.programManager.setArtifact(te,se),_r("info",()=>`[artifact] key: ${te}, programName: ${e.name}`)),h&&se.uniformVariablesInfo){if(h.length!==se.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${se.uniformVariablesInfo.length}, got ${h.length} in program "${se.programInfo.name}".`);for(let H=0;H<h.length;H++){let pe=h[H],ae=pe.type,ge=typeof pe.data=="number"?1:pe.data.length,[Ne,Fe]=se.uniformVariablesInfo[H];if(ae!==Ne||ge!==Fe)throw new Error(`Uniform variable ${H} mismatch: expect type ${Ne} with size ${Fe}, got type ${ae} with size ${ge} in program "${se.programInfo.name}".`)}}if(_r("info",()=>`[ProgramManager] run "${e.name}" (key=${te}) with ${z[0]}x${z[1]}x${z[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let H={kernelId:this.currentKernelId,programName:se.programInfo.name,inputTensorViews:t,outputTensorViews:x};this.pendingKernels.push(H),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(H)}return this.programManager.run(se,o,l,z,O),ze(e.name),x}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,r,s){let n=_s.get(e);if(!n)throw new Error(`kernel not implemented: ${e}`);let i={kernelType:e,kernelName:s,kernelEntry:n[0],attributes:[n[1],r]};this.kernels.set(t,i)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let r of t)this.gpuDataManager.release(r.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,r){let s=this.kernels.get(e);if(!s)throw new Error(`kernel not created: ${e}`);let n=s.kernelType,i=s.kernelName,o=s.kernelEntry,d=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${n}] ${i}" is not allowed to be called recursively`);this.currentKernelId=e,d[0]&&(d[1]=d[0](d[1]),d[0]=void 0),_r("info",()=>`[WebGPU] Start to run kernel "[${n}] ${i}"...`);let p=this.env.debug;this.temporaryData=[];try{return p&&this.device.pushErrorScope("validation"),o(t,d[1]),0}catch(h){return r.push(Promise.resolve(`[WebGPU] Kernel "[${n}] ${i}" failed. ${h}`)),1}finally{p&&r.push(this.device.popErrorScope().then(h=>h?`GPU validation error for kernel "[${n}] ${i}": ${h.message}`:null));for(let h of this.temporaryData)this.gpuDataManager.release(h.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,r,s){let n=this.sessionExternalDataMapping.get(e);n||(n=new Map,this.sessionExternalDataMapping.set(e,n));let i=n.get(t),o=this.gpuDataManager.registerExternalBuffer(r,s,i);return n.set(t,[o,r]),o}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach(r=>this.gpuDataManager.unregisterExternalBuffer(r[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,r){return async()=>{let s=await Tt(this,e,t);return T(s.buffer,r)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){_r("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){_r("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){_r("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),r=e.length;this.pendingKernels=[];for(let s=0;s<r;s++){let n=this.getComputePassEncoder(),i=e[s];this.writeTimestamp(this.pendingDispatchNumber*2),n.setPipeline(i.computePipeline),n.setBindGroup(0,i.bindGroup),n.dispatchWorkgroups(...i.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),fn,_n,eo,va,Ta,pc=g(()=>{xe(),fn=1,_n=()=>fn++,eo=class{constructor(e,t){this.mlContext=e,this.tensorEntry=t,this.tensorCache=t?[t]:[]}get tensor(){var e;return(e=this.tensorEntry)==null?void 0:e[0]}get context(){if(!this.mlContext)throw new Error("MLContext has not been set.");return this.mlContext}set context(e){if(this.mlContext&&this.mlContext!==e)throw new Error("MLTensor in use in a different MLContext.");this.mlContext=e}destroy(){for(let[e]of this.tensorCache)e.destroy();this.tensorCache=[],this.tensorEntry=void 0}trySelectTensor(e,t){for(let[r,s,n]of this.tensorCache)if(t===r){if(this.context!==e)throw new Error("MLTensor cannot be registered with a different MLContext.");return this.tensorEntry=[r,s,n],!0}return!1}async ensureTensor(e,t,r){var i;if(this.tensorEntry){let[o,d,p]=this.tensorEntry;if(d===e&&p.every((h,P)=>h===t[P]))return o}for(let[o,d,p]of this.tensorCache)if(d===e&&p.every((h,P)=>h===t[P])){if(r&&this.tensorEntry){_r("verbose",()=>`[WebNN] Slowdown may occur, having to copy existing tensor {dataType: ${e}, shape: ${t}}`);let h=await this.context.readTensor(this.tensorEntry[0]);this.context.writeTensor(o,h)}return this.tensorEntry=[o,d,p],o}_r("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${e}, shape: ${t}}`);let s=MLTensorUsage.READ|MLTensorUsage.WRITE,n=await this.context.createTensor({dataType:e,shape:t,dimensions:t,usage:s});return this.tensorEntry=[n,e,t],this.tensorCache.push(this.tensorEntry),this.activeUpload&&((i=this.mlContext)==null||i.writeTensor(n,this.activeUpload),this.activeUpload=void 0),n}upload(e){var t;if(!this.tensorEntry){this.activeUpload=new Uint8Array(e);return}(t=this.mlContext)==null||t.writeTensor(this.tensorEntry[0],e)}async download(e){if(this.activeUpload)if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload);return}else return this.activeUpload.buffer;if(!this.tensorEntry)throw new Error("Tensor has not been created.");return e?this.context.readTensor(this.tensorEntry[0],e):this.context.readTensor(this.tensorEntry[0])}},va=class{constructor(e){this.backend=e,this.tensorsById=new Map,this.tensorIdsByContext=new Map}reserveTensorId(){let e=_n();return this.tensorsById.set(e,new eo),e}releaseTensorId(e){let t=this.tensorsById.get(e);if(t){t.destroy(),this.tensorsById.delete(e);for(let[r,s]of this.tensorIdsByContext)if(s.has(e)){s.delete(e),s.size===0&&this.tensorIdsByContext.delete(r);break}}}async ensureTensor(e,t,r,s){var i;_r("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${e}, dataType: ${t}, shape: ${r}, copyOld: ${s}}`);let n=this.tensorsById.get(e);if(!n)throw new Error("Tensor not found.");return n.context=this.backend.currentContext,this.tensorIdsByContext.has(this.backend.currentContext)||this.tensorIdsByContext.set(this.backend.currentContext,new Set),(i=this.tensorIdsByContext.get(this.backend.currentContext))==null||i.add(e),n.ensureTensor(t,r,s)}upload(e,t){this.tensorsById.get(e).upload(t)}async download(e,t){return _r("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${t==null?void 0:t.byteLength}}`),this.tensorsById.get(e).download(t)}releaseTensorsForContext(e){let t=this.tensorIdsByContext.get(e);if(t){for(let r of t)this.tensorsById.get(r).destroy(),this.tensorsById.delete(r);this.tensorIdsByContext.delete(e)}}registerTensor(e,t,r,s){for(let[o,d]of this.tensorsById)if(d.trySelectTensor(e,t))return o;let n=_n();this.tensorsById.set(n,new eo(e,[t,r,s]));let i=this.tensorIdsByContext.get(e);return i||(i=new Set,this.tensorIdsByContext.set(e,i)),i.add(n),n}},Ta=(...e)=>new va(...e)}),hc,xa,Ea=g(()=>{Ot(),ts(),K(),pc(),xe(),hc=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),xa=class{constructor(e){this.tensorManager=Ta(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,Sn(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){this.activeSessionId=e}get currentContext(){let e=this.getMLContext(this.currentSessionId);if(!e)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return e}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let r=this.sessionIdsByMLContext.get(t);r||(r=new Set,this.sessionIdsByMLContext.set(t,r)),r.add(e)}onReleaseSession(e){let t=this.mlContextBySessionId.get(e);if(!t)return;this.mlContextBySessionId.delete(e);let r=this.sessionIdsByMLContext.get(t);r.delete(e),r.size===0&&(this.sessionIdsByMLContext.delete(t),this.tensorManager.releaseTensorsForContext(t))}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){_r("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,r,s){let n=hc.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e,n,r,s)}uploadTensor(e,t){if(!Sr().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");_r("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{let r=await this.tensorManager.download(e);return T(r,t)}}registerMLTensor(e,t,r){let s=hc.get(t);if(!s)throw new Error(`Unsupported ONNX data type: ${t}`);let n=this.tensorManager.registerTensor(this.currentContext,e,s,r);return _r("verbose",()=>`[WebNN] registerMLTensor {tensor: ${e}, dataType: ${s}, dimensions: ${r}} -> {tensorId: ${n}}`),n}flush(){}}}),Pa={};v(Pa,{init:()=>Uo});var No,Ca,Uo,Cp=g(()=>{Ot(),mn(),xe(),Ut(),Ea(),No=class Wm{constructor(t,r,s,n){this.module=t,this.dataType=r,this.data=s,this.dims=n}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=De.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=De.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=De.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let t=De.size(this.dims);return t===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(De.size(t)!==De.size(this.dims))throw new Error("Invalid new shape");return new Wm(this.module,this.dataType,this.data,t)}},Ca=class{constructor(e,t,r){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo;let s=e.HEAPU32,n=r>>>2;this.opKernelContext=s[n++];let i=s[n++];this.outputCount=s[n++],this.customDataOffset=s[n++],this.customDataSize=s[n++];let o=[];for(let d=0;d<i;d++){let p=s[n++],h=s[n++],P=s[n++],x=[];for(let l=0;l<P;l++)x.push(s[n++]);o.push(new No(e,p,h,x))}this.inputs=o}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(e,t){var o;let r=((o=t==null?void 0:t.inputs)==null?void 0:o.map(d=>typeof d=="number"?this.inputs[d]:d))??this.inputs,s=(t==null?void 0:t.outputs)??[],n=(d,p,h)=>new No(this.module,p,this.output(d,h),h),i=(d,p)=>{let h=js(d,p);if(!h)throw new Error(`Unsupported data type: ${d}`);let P=h>0?this.backend.gpuDataManager.create(h).id:0;return new No(this.module,d,P,p)};return this.backend.run(e,r,s,n,i,this.outputCount)}output(e,t){let r=this.module.stackSave();try{let s=this.module.stackAlloc((1+t.length)*4),n=s>>2;this.module.HEAPU32[n++]=t.length;for(let i=0;i<t.length;i++)this.module.HEAPU32[n++]=t[i];return this.module._JsepOutput(this.opKernelContext,e,s)}catch(s){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(r)}}},Uo=async(e,t,r,s)=>{let n=t.jsepInit;if(!n)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let i=new Ur;await i.initialize(r,s),n("webgpu",[i,o=>i.alloc(o),o=>i.free(o),(o,d,p,h=!1)=>{if(h)_r("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${o}, dst=${d}, size=${p}`),i.memcpy(o,d);else{_r("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${o}, gpuDataId=${d}, size=${p}`);let P=t.HEAPU8.subarray(o>>>0,(o>>>0)+p);i.upload(d,P)}},async(o,d,p)=>{_r("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${o}, dataOffset=${d}, size=${p}`),await i.download(o,()=>t.HEAPU8.subarray(d>>>0,(d>>>0)+p))},(o,d,p)=>i.createKernel(o,d,p,t.UTF8ToString(t._JsepGetNodeName(d))),o=>i.releaseKernel(o),(o,d,p,h)=>{_r("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${p}, kernel=${o}, contextDataOffset=${d}`);let P=new Ca(t,i,d);return i.computeKernel(o,P,h)},()=>i.captureBegin(),()=>i.captureEnd(),()=>i.replay()])}else{let i=new xa(r);n("webnn",[i,()=>i.reserveTensorId(),o=>i.releaseTensorId(o),async(o,d,p,h)=>i.ensureTensor(o,d,p,h),(o,d)=>{i.uploadTensor(o,d)},async(o,d)=>i.downloadTensor(o,d)])}}}),op,mc,an,Zr,uh,ip,$p,Sp,kp,Ap,Ip,Fp,dh=g(()=>{uo(),co(),Ot(),ts(),Tn(),Rn(),op=(e,t)=>{Sr()._OrtInit(e,t)!==0&&br("Can't initialize onnxruntime.")},mc=async e=>{op(e.wasm.numThreads,dn(e.logLevel))},an=async(e,t)=>{{let r=(Cp(),y(Pa)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let s=e.webgpu.adapter;if(s){if(typeof s.limits!="object"||typeof s.features!="object"||typeof s.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let n=e.webgpu.powerPreference;if(n!==void 0&&n!=="low-power"&&n!=="high-performance")throw new Error(`Invalid powerPreference setting: "${n}"`);let i=e.webgpu.forceFallbackAdapter;if(i!==void 0&&typeof i!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${i}"`);if(s=await navigator.gpu.requestAdapter({powerPreference:n,forceFallbackAdapter:i}),!s)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await r("webgpu",Sr(),e,s)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",Sr(),e)}}},Zr=new Map,uh=e=>{let t=Sr(),r=t.stackSave();try{let s=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,s,s+4)!==0&&br("Can't get session input/output count."),[t.HEAP32[s/4],t.HEAP32[s/4+1]]}finally{t.stackRestore(r)}},ip=e=>{let t=Sr(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},$p=async(e,t)=>{var x,l;let r,s,n=Sr();Array.isArray(e)?[r,s]=e:e.buffer===n.HEAPU8.buffer?[r,s]=[e.byteOffset,e.byteLength]:[r,s]=ip(e);let i=0,o=0,d=0,p=[],h=[],P=[];try{if([o,p]=Bn(t),(t==null?void 0:t.externalData)&&n.mountExternalData){let ae=[];for(let ge of t.externalData){let Ne=typeof ge=="string"?ge:ge.path;ae.push(Cn(typeof ge=="string"?ge:ge.data).then(Fe=>{n.mountExternalData(Ne,Fe)}))}await Promise.all(ae)}for(let ae of(t==null?void 0:t.executionProviders)??[])if((typeof ae=="string"?ae:ae.name)==="webnn"){if(n.shouldTransferToMLTensor=!1,n.currentContext)throw new Error("WebNN execution provider is already set.");if(typeof ae!="string"){let ge=ae,Ne=ge==null?void 0:ge.context,Fe=ge==null?void 0:ge.gpuDevice,rt=ge==null?void 0:ge.deviceType,vt=ge==null?void 0:ge.numThreads,$t=ge==null?void 0:ge.powerPreference;Ne?n.currentContext=Ne:Fe?n.currentContext=await navigator.ml.createContext(Fe):n.currentContext=await navigator.ml.createContext({deviceType:rt,numThreads:vt,powerPreference:$t})}else n.currentContext=await navigator.ml.createContext();break}i=await n._OrtCreateSession(r,s,o),i===0&&br("Can't create a session."),n.currentContext&&(n.jsepRegisterMLContext(i,n.currentContext),n.currentContext=void 0,n.shouldTransferToMLTensor=!0);let[O,z]=uh(i),B=!!(t!=null&&t.enableGraphCapture),te=[],se=[],H=[];for(let ae=0;ae<O;ae++){let ge=n._OrtGetInputName(i,ae);ge===0&&br("Can't get an input name."),h.push(ge),te.push(n.UTF8ToString(ge))}for(let ae=0;ae<z;ae++){let ge=n._OrtGetOutputName(i,ae);ge===0&&br("Can't get an output name."),P.push(ge);let Ne=n.UTF8ToString(ge);se.push(Ne);{if(B&&(t==null?void 0:t.preferredOutputLocation)===void 0){H.push("gpu-buffer");continue}let Fe=typeof(t==null?void 0:t.preferredOutputLocation)=="string"?t.preferredOutputLocation:((x=t==null?void 0:t.preferredOutputLocation)==null?void 0:x[Ne])??"cpu";if(Fe!=="cpu"&&Fe!=="cpu-pinned"&&Fe!=="gpu-buffer"&&Fe!=="ml-tensor")throw new Error(`Not supported preferred output location: ${Fe}.`);if(B&&Fe!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${Fe}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);H.push(Fe)}}let pe=null;return H.some(ae=>ae==="gpu-buffer"||ae==="ml-tensor")&&(d=n._OrtCreateBinding(i),d===0&&br("Can't create IO binding."),pe={handle:d,outputPreferredLocations:H,outputPreferredLocationsEncoded:H.map(ae=>Pn(ae))}),Zr.set(i,[i,h,P,pe,B,!1]),[i,te,se]}catch(O){throw h.forEach(z=>n._OrtFree(z)),P.forEach(z=>n._OrtFree(z)),d!==0&&n._OrtReleaseBinding(d),i!==0&&n._OrtReleaseSession(i),O}finally{n._free(r),o!==0&&n._OrtReleaseSessionOptions(o),p.forEach(O=>n._free(O)),(l=n.unmountExternalData)==null||l.call(n)}},Sp=e=>{var p;let t=Sr(),r=Zr.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[s,n,i,o,d]=r;o&&(d&&t._OrtClearBoundOutputs(o.handle),t._OrtReleaseBinding(o.handle)),(p=t.jsepOnReleaseSession)==null||p.call(t,e),n.forEach(h=>t._OrtFree(h)),i.forEach(h=>t._OrtFree(h)),t._OrtReleaseSession(s),Zr.delete(e)},kp=(e,t,r,s,n,i=!1)=>{if(!e){t.push(0);return}let o=Sr(),d=e[0],p=e[1],h=e[3],P,x;if(d==="string"&&(h==="gpu-buffer"||h==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(i&&h!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${n} when enableGraphCapture is true.`);if(h==="gpu-buffer"){let z=e[2].gpuBuffer;x=js(rn(d),p);let B=o.jsepRegisterBuffer;if(!B)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');P=B(s,n,z,x)}else if(h==="ml-tensor"){let z=e[2].mlTensor;x=js(rn(d),p);let B=o.jsepRegisterMLTensor;if(!B)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');P=B(z,rn(d),p)}else{let z=e[2];if(Array.isArray(z)){x=4*z.length,P=o._malloc(x),r.push(P);let B=P/4;for(let te=0;te<z.length;te++){if(typeof z[te]!="string")throw new TypeError(`tensor data at index ${te} is not a string`);o.HEAPU32[B++]=Br(z[te],r)}}else x=z.byteLength,P=o._malloc(x),r.push(P),o.HEAPU8.set(new Uint8Array(z.buffer,z.byteOffset,x),P)}let l=o.stackSave(),O=o.stackAlloc(4*p.length);try{let z=O/4;p.forEach(te=>o.HEAP32[z++]=te);let B=o._OrtCreateTensor(rn(d),P,x,O,p.length,Pn(h));B===0&&br(`Can't create tensor for input/output. session=${s}, index=${n}.`),t.push(B)}finally{o.stackRestore(l)}},Ap=async(e,t,r,s,n,i)=>{var $t,Yt;let o=Sr(),d=Zr.get(e);if(!d)throw new Error(`cannot run inference. invalid session id: ${e}`);let p=d[0],h=d[1],P=d[2],x=d[3],l=d[4],O=d[5],z=t.length,B=s.length,te=0,se=[],H=[],pe=[],ae=[],ge=o.stackSave(),Ne=o.stackAlloc(z*4),Fe=o.stackAlloc(z*4),rt=o.stackAlloc(B*4),vt=o.stackAlloc(B*4);try{($t=o.jsepOnRunStart)==null||$t.call(o,p),[te,se]=tn(i);for(let Ft=0;Ft<z;Ft++)kp(r[Ft],H,ae,e,t[Ft],l);for(let Ft=0;Ft<B;Ft++)kp(n[Ft],pe,ae,e,z+s[Ft],l);let rr=Ne/4,zt=Fe/4,Tr=rt/4,Ir=vt/4;for(let Ft=0;Ft<z;Ft++)o.HEAPU32[rr++]=H[Ft],o.HEAPU32[zt++]=h[t[Ft]];for(let Ft=0;Ft<B;Ft++)o.HEAPU32[Tr++]=pe[Ft],o.HEAPU32[Ir++]=P[s[Ft]];if(x&&!O){let{handle:Ft,outputPreferredLocations:Nt,outputPreferredLocationsEncoded:hr}=x;if(h.length!==z)throw new Error(`input count from feeds (${z}) is expected to be always equal to model's input count (${h.length}).`);for(let Ve=0;Ve<z;Ve++){let ct=t[Ve];await o._OrtBindInput(Ft,h[ct],H[Ve])!==0&&br(`Can't bind input[${Ve}] for session=${e}.`)}for(let Ve=0;Ve<B;Ve++){let ct=s[Ve];(Yt=n[Ve])!=null&&Yt[3]?o._OrtBindOutput(Ft,P[ct],pe[Ve],0)!==0&&br(`Can't bind pre-allocated output[${Ve}] for session=${e}.`):o._OrtBindOutput(Ft,P[ct],0,hr[ct])!==0&&br(`Can't bind output[${Ve}] to ${Nt[Ve]} for session=${e}.`)}Zr.set(e,[p,h,P,x,l,!0])}let nr;x?nr=await o._OrtRunWithBinding(p,x.handle,B,rt,te):nr=await o._OrtRun(p,Fe,Ne,z,vt,B,rt,te),nr!==0&&br("failed to call OrtRun().");let Er=[];for(let Ft=0;Ft<B;Ft++){let Nt=o.HEAPU32[rt/4+Ft];if(Nt===pe[Ft]){Er.push(n[Ft]);continue}let hr=o.stackSave(),Ve=o.stackAlloc(4*4),ct=!1,Vt,xr=0;try{o._OrtGetTensorData(Nt,Ve,Ve+4,Ve+8,Ve+12)!==0&&br(`Can't access output tensor data on index ${Ft}.`);let Hr=Ve/4,Qr=o.HEAPU32[Hr++];xr=o.HEAPU32[Hr++];let ro=o.HEAPU32[Hr++],up=o.HEAPU32[Hr++],bs=[];for(let es=0;es<up;es++)bs.push(o.HEAPU32[ro/4+es]);o._OrtFree(ro);let is=bs.reduce((es,ds)=>es*ds,1);Vt=Es(Qr);let Go=x==null?void 0:x.outputPreferredLocations[s[Ft]];if(Vt==="string"){if(Go==="gpu-buffer"||Go==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let es=[],ds=xr/4;for(let Gs=0;Gs<is;Gs++){let so=o.HEAPU32[ds++],dp=Gs===is-1?void 0:o.HEAPU32[ds]-so;es.push(o.UTF8ToString(so,dp))}Er.push([Vt,bs,es,"cpu"])}else if(Go==="gpu-buffer"&&is>0){let es=o.jsepGetBuffer;if(!es)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let ds=es(xr),Gs=js(Qr,is);if(Gs===void 0||!xn(Vt))throw new Error(`Unsupported data type: ${Vt}`);ct=!0,Er.push([Vt,bs,{gpuBuffer:ds,download:o.jsepCreateDownloader(ds,Gs,Vt),dispose:()=>{o._OrtReleaseTensor(Nt)}},"gpu-buffer"])}else if(Go==="ml-tensor"&&is>0){let es=o.jsepEnsureTensor;if(!es)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(js(Qr,is)===void 0||!En(Vt))throw new Error(`Unsupported data type: ${Vt}`);let ds=await es(xr,Qr,bs,!1);ct=!0,Er.push([Vt,bs,{mlTensor:ds,download:o.jsepCreateMLTensorDownloader(xr,Vt),dispose:()=>{o.jsepReleaseTensorId(xr),o._OrtReleaseTensor(Nt)}},"ml-tensor"])}else{let es=Ns(Vt),ds=new es(is);new Uint8Array(ds.buffer,ds.byteOffset,ds.byteLength).set(o.HEAPU8.subarray(xr,xr+ds.byteLength)),Er.push([Vt,bs,ds,"cpu"])}}finally{o.stackRestore(hr),Vt==="string"&&xr&&o._free(xr),ct||o._OrtReleaseTensor(Nt)}}return x&&!l&&(o._OrtClearBoundOutputs(x.handle),Zr.set(e,[p,h,P,x,l,!1])),Er}finally{o.stackRestore(ge),H.forEach(rr=>o._OrtReleaseTensor(rr)),pe.forEach(rr=>o._OrtReleaseTensor(rr)),ae.forEach(rr=>o._free(rr)),te!==0&&o._OrtReleaseRunOptions(te),se.forEach(rr=>o._free(rr))}},Ip=e=>{let t=Sr(),r=Zr.get(e);if(!r)throw new Error("invalid session id");let s=r[0],n=t._OrtEndProfiling(s);n===0&&br("Can't get an profile file name."),t._OrtFree(n)},Fp=e=>{let t=[];for(let r of e){let s=r[2];!Array.isArray(s)&&"buffer"in s&&t.push(s.buffer)}return t}}),to,ks,$a,fc,_c,ap,Op,lp,Vo,Wo,ch,ph,hh,mh,fh,_h,gh,wh,yh=g(()=>{Et(),dh(),ts(),zs(),to=()=>!!E.wasm.proxy&&typeof document<"u",$a=!1,fc=!1,_c=!1,lp=new Map,Vo=(e,t)=>{let r=lp.get(e);r?r.push(t):lp.set(e,[t])},Wo=()=>{if($a||!fc||_c||!ks)throw new Error("worker not ready")},ch=e=>{switch(e.data.type){case"init-wasm":$a=!1,e.data.err?(_c=!0,Op[1](e.data.err)):(fc=!0,Op[0]()),ap&&(URL.revokeObjectURL(ap),ap=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=lp.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},ph=async()=>{if(!fc){if($a)throw new Error("multiple calls to 'initWasm()' detected.");if(_c)throw new Error("previous call to 'initWasm()' failed.");if($a=!0,to())return new Promise((e,t)=>{ks==null||ks.terminate(),xs().then(([r,s])=>{try{ks=s,ks.onerror=i=>t(i),ks.onmessage=ch,Op=[e,t];let n={type:"init-wasm",in:E};ks.postMessage(n),ap=r}catch(n){t(n)}},t)});try{await Bs(E.wasm),await mc(E),fc=!0}catch(e){throw _c=!0,e}finally{$a=!1}}},hh=async e=>{if(to())return Wo(),new Promise((t,r)=>{Vo("init-ep",[t,r]);let s={type:"init-ep",in:{epName:e,env:E}};ks.postMessage(s)});await an(E,e)},mh=async e=>to()?(Wo(),new Promise((t,r)=>{Vo("copy-from",[t,r]);let s={type:"copy-from",in:{buffer:e}};ks.postMessage(s,[e.buffer])})):ip(e),fh=async(e,t)=>{if(to()){if(t!=null&&t.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Wo(),new Promise((r,s)=>{Vo("create",[r,s]);let n={type:"create",in:{model:e,options:{...t}}},i=[];e instanceof Uint8Array&&i.push(e.buffer),ks.postMessage(n,i)})}else return $p(e,t)},_h=async e=>{if(to())return Wo(),new Promise((t,r)=>{Vo("release",[t,r]);let s={type:"release",in:e};ks.postMessage(s)});Sp(e)},gh=async(e,t,r,s,n,i)=>{if(to()){if(r.some(o=>o[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(n.some(o=>o))throw new Error("pre-allocated output tensor is not supported for proxy.");return Wo(),new Promise((o,d)=>{Vo("run",[o,d]);let p=r,h={type:"run",in:{sessionId:e,inputIndices:t,inputs:p,outputIndices:s,options:i}};ks.postMessage(h,Fp(p))})}else return Ap(e,t,r,s,n,i)},wh=async e=>{if(to())return Wo(),new Promise((t,r)=>{Vo("end-profiling",[t,r]);let s={type:"end-profiling",in:e};ks.postMessage(s)});Ip(e)}}),Dp,Mh,bh,ef=g(()=>{Et(),yh(),Ot(),Ct(),Rn(),Dp=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},Mh=e=>{switch(e[3]){case"cpu":return new we(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!xn(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:s,dispose:n}=e[2];return we.fromGpuBuffer(r,{dataType:t,dims:e[1],download:s,dispose:n})}case"ml-tensor":{let t=e[0];if(!En(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:r,download:s,dispose:n}=e[2];return we.fromMLTensor(r,{dataType:t,dims:e[1],download:s,dispose:n})}default:throw new Error(`invalid data location: ${e[3]}`)}},bh=class{async fetchModelAndCopyToWasmMemory(e){return mh(await Cn(e))}async loadModel(e,t){qe();let r;typeof e=="string"?r=await this.fetchModelAndCopyToWasmMemory(e):r=e,[this.sessionId,this.inputNames,this.outputNames]=await fh(r,t),ze()}async dispose(){return _h(this.sessionId)}async run(e,t,r){qe();let s=[],n=[];Object.entries(e).forEach(x=>{let l=x[0],O=x[1],z=this.inputNames.indexOf(l);if(z===-1)throw new Error(`invalid input '${l}'`);s.push(O),n.push(z)});let i=[],o=[];Object.entries(t).forEach(x=>{let l=x[0],O=x[1],z=this.outputNames.indexOf(l);if(z===-1)throw new Error(`invalid output '${l}'`);i.push(O),o.push(z)});let d=s.map((x,l)=>Dp(x,()=>`input "${this.inputNames[n[l]]}"`)),p=i.map((x,l)=>x?Dp(x,()=>`output "${this.outputNames[o[l]]}"`):null),h=await gh(this.sessionId,n,d,o,p,r),P={};for(let x=0;x<h.length;x++)P[this.outputNames[o[x]]]=i[x]??Mh(h[x]);return ze(),P}startProfiling(){}endProfiling(){wh(this.sessionId)}}}),vh={};v(vh,{OnnxruntimeWebAssemblyBackend:()=>zp,initializeFlags:()=>Lp,wasmBackend:()=>Th});var Lp,zp,Th,tf=g(()=>{Et(),yh(),ef(),zs(),Lp=()=>{if((typeof E.wasm.initTimeout!="number"||E.wasm.initTimeout<0)&&(E.wasm.initTimeout=0),E.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof E.wasm.proxy!="boolean"&&(E.wasm.proxy=!1),typeof E.wasm.trace!="boolean"&&(E.wasm.trace=!1),typeof E.wasm.numThreads!="number"||!Number.isInteger(E.wasm.numThreads)||E.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)E.wasm.numThreads=1;else{let e=typeof navigator>"u"?Q("node:os").cpus().length:navigator.hardwareConcurrency;E.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},zp=class{async init(e){Lp(),await ph(),await hh(e)}async createInferenceSessionHandler(e,t){let r=new bh;return await r.loadModel(e,t),Promise.resolve(r)}},Th=new zp});Et(),Et(),Et();var rf="1.20.1",sf=xt;{let e=(tf(),y(vh)).wasmBackend;J("webgpu",e,5),J("webnn",e,5),J("cpu",e,10),J("wasm",e,10)}Object.defineProperty(E.versions,"web",{value:rf,enumerable:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},"./src/backends/onnx.js":(Oe,R,c)=>{var w;c.r(R),c.d(R,{Tensor:()=>Q.Tensor,createInferenceSession:()=>fe,deviceToExecutionProviders:()=>J,isONNXProxy:()=>Z,isONNXTensor:()=>j});var D=c("./src/env.js"),G=c("?2ce3"),re=c("./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs"),Q=c("./node_modules/onnxruntime-common/dist/esm/index.js");const g=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),v=[];let b,y;const C=Symbol.for("onnxruntime");if(C in globalThis)y=globalThis[C];else if(D.apis.IS_NODE_ENV){switch(y=G??(w||(w=c.t(G,2))),process.platform){case"win32":v.push("dml");break;case"linux":process.arch==="x64"&&v.push("cuda");break}v.push("cpu"),b=["cpu"]}else y=re,D.apis.IS_WEBNN_AVAILABLE&&v.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),D.apis.IS_WEBGPU_AVAILABLE&&v.push("webgpu"),v.push("wasm"),b=["wasm"];const q=y.InferenceSession;function J(N=null){if(!N)return b;switch(N){case"auto":return v;case"gpu":return v.filter(I=>["webgpu","cuda","dml","webnn-gpu"].includes(I))}if(v.includes(N))return[g[N]??N];throw new Error(`Unsupported device: "${N}". Should be one of: ${v.join(", ")}.`)}let ie=null;async function fe(N,I,_){ie&&await ie;const k=q.create(N,I);ie??(ie=k);const E=await k;return E.config=_,E}function j(N){return N instanceof y.Tensor}const X=y==null?void 0:y.env;X!=null&&X.wasm&&(X.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${D.env.version}/dist/`,X.wasm.proxy=!1,(typeof crossOriginIsolated>"u"||!crossOriginIsolated)&&(X.wasm.numThreads=1)),X!=null&&X.webgpu&&(X.webgpu.powerPreference="high-performance");function Z(){var N;return(N=X==null?void 0:X.wasm)==null?void 0:N.proxy}D.env.backends.onnx=X},"./src/base/feature_extraction_utils.js":(Oe,R,c)=>{c.r(R),c.d(R,{FeatureExtractor:()=>re,validate_audio_inputs:()=>Q});var w=c("./src/utils/constants.js"),D=c("./src/utils/generic.js"),G=c("./src/utils/hub.js");class re extends D.Callable{constructor(v){super(),this.config=v}static async from_pretrained(v,b){const y=await(0,G.getModelJSON)(v,w.FEATURE_EXTRACTOR_NAME,!0,b);return new this(y)}}function Q(g,v){var b;if(!(g instanceof Float32Array||g instanceof Float64Array))throw new Error(`${v} expects input to be a Float32Array or a Float64Array, but got ${((b=g==null?void 0:g.constructor)==null?void 0:b.name)??typeof g} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(Oe,R,c)=>{c.r(R),c.d(R,{ImageProcessor:()=>N,post_process_instance_segmentation:()=>Z,post_process_object_detection:()=>C,post_process_panoptic_segmentation:()=>X,post_process_semantic_segmentation:()=>q});var w=c("./src/utils/generic.js"),D=c("./src/utils/tensor.js"),G=c("./src/utils/maths.js");c("./src/utils/image.js");var re=c("./src/utils/core.js"),Q=c("./src/utils/hub.js"),g=c("./src/utils/constants.js");function v(I,_,k=0,E=null){const ee=I/_;let Y=(0,G.bankers_round)(ee)*_;return E!==null&&Y>E&&(Y=Math.floor(ee)*_),Y<k&&(Y=Math.ceil(ee)*_),Y}function b([I,_],k){return[Math.max(Math.floor(I/k),1)*k,Math.max(Math.floor(_/k),1)*k]}function y([I,_,k,E]){return[I-k/2,_-E/2,I+k/2,_+E/2]}function C(I,_=.5,k=null,E=!1){const ee=I.logits,Y=I.pred_boxes,[de,me,ye]=ee.dims;if(k!==null&&k.length!==de)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Ce=[];for(let Ee=0;Ee<de;++Ee){let Le=k!==null?k[Ee]:null,_e={boxes:[],classes:[],scores:[]},U=ee[Ee],ce=Y[Ee];for(let he=0;he<me;++he){let ke=U[he],Re=[],Ke;if(E){Ke=ke.sigmoid().data;for(let Ye=0;Ye<Ke.length;++Ye)Ke[Ye]>_&&Re.push(Ye)}else{let Ye=(0,G.max)(ke.data)[1];if(Ye===ye-1||(Ke=(0,G.softmax)(ke.data),Ke[Ye]<_))continue;Re.push(Ye)}for(const Ye of Re){let at=ce[he].data;at=y(at),Le!==null&&(at=at.map((We,le)=>We*Le[(le+1)%2])),_e.boxes.push(at),_e.classes.push(Ye),_e.scores.push(Ke[Ye])}}Ce.push(_e)}return Ce}function q(I,_=null){const k=I.logits,E=k.dims[0];if(_!==null&&_.length!==E)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const ee=[];for(let Y=0;Y<E;++Y){const de=_!==null?_[Y]:null;let me=k[Y];de!==null&&(me=(0,D.interpolate)(me,de,"bilinear",!1));const[ye,Ce]=de??me.dims.slice(-2),Ee=new D.Tensor("int32",new Int32Array(ye*Ce),[ye,Ce]),Le=me[0].data,_e=Ee.data;for(let he=1;he<me.dims[0];++he){const ke=me[he].data;for(let Re=0;Re<ke.length;++Re)ke[Re]>Le[Re]&&(Le[Re]=ke[Re],_e[Re]=he)}const U=new Array(me.dims[0]);for(let he=0;he<_e.length;++he){const ke=_e[he];U[ke]=ke}const ce=U.filter(he=>he!==void 0);ee.push({segmentation:Ee,labels:ce})}return ee}function J(I,_,k,E){const ee=[],Y=[],de=[];for(let me=0;me<I.dims[0];++me){const ye=I[me],Ce=_[me],Ee=(0,G.max)(ye.data)[1];if(Ee===E)continue;const _e=(0,G.softmax)(ye.data)[Ee];_e>k&&(ee.push(Ce),Y.push(_e),de.push(Ee))}return[ee,Y,de]}function ie(I,_,k,E=.5,ee=.8){const Y=[];let de=0,me=0;const ye=_[k].data;for(let Ee=0;Ee<I.length;++Ee)I[Ee]===k&&(Y.push(Ee),++de),ye[Ee]>=E&&++me;let Ce=de>0&&me>0;return Ce&&(Ce=de/me>ee),[Ce,Y]}function fe(I,_,k,E,ee,Y=null,de=null){const[me,ye]=de??I[0].dims,Ce=new D.Tensor("int32",new Int32Array(me*ye),[me,ye]),Ee=[];if(de!==null)for(let he=0;he<I.length;++he)I[he]=(0,D.interpolate)(I[he],de,"bilinear",!1);const Le=new Int32Array(I[0].data.length),_e=new Float32Array(I[0].data.length);for(let he=0;he<I.length;++he){let ke=_[he];const Re=I[he].data;for(let Ke=0;Ke<Re.length;++Ke)Re[Ke]*=ke,Re[Ke]>_e[Ke]&&(Le[Ke]=he,_e[Ke]=Re[Ke])}let U=0;const ce=Ce.data;for(let he=0;he<k.length;++he){const ke=k[he],[Re,Ke]=ie(Le,I,he,E,ee);if(Re){++U;for(const Ye of Ke)ce[Ye]=U;Ee.push({id:U,label_id:ke,score:_[he]})}}return[Ce,Ee]}function j(I,_,k=28,E=3136,ee=1003520){if(I<k||_<k)throw new Error(`height:${I} or width:${_} must be larger than factor:${k}`);if(Math.max(I,_)/Math.min(I,_)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(I,_)/Math.min(I,_)}`);let Y=Math.round(I/k)*k,de=Math.round(_/k)*k;if(Y*de>ee){const me=Math.sqrt(I*_/ee);Y=Math.floor(I/me/k)*k,de=Math.floor(_/me/k)*k}else if(Y*de<E){const me=Math.sqrt(E/(I*_));Y=Math.ceil(I*me/k)*k,de=Math.ceil(_*me/k)*k}return[Y,de]}function X(I,_=.5,k=.5,E=.8,ee=null,Y=null){ee===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),ee=new Set);const de=I.class_queries_logits??I.logits,ye=(I.masks_queries_logits??I.pred_masks).sigmoid();let[Ce,Ee,Le]=de.dims;if(Le-=1,Y!==null&&Y.length!==Ce)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let _e=[];for(let U=0;U<Ce;++U){let ce=Y!==null?Y[U]:null,he=de[U],ke=ye[U],[Re,Ke,Ye]=J(he,ke,_,Le);if(Ye.length===0){let[le,He]=ce??ke.dims.slice(-2),je=new D.Tensor("int32",new Int32Array(le*He).fill(-1),[le,He]);_e.push({segmentation:je,segments_info:[]});continue}let[at,We]=fe(Re,Ke,Ye,k,E,ee,ce);_e.push({segmentation:at,segments_info:We})}return _e}function Z(I,_=.5,k=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class N extends w.Callable{constructor(_){super(),this.image_mean=_.image_mean??_.mean,this.image_std=_.image_std??_.std,this.resample=_.resample??2,this.do_rescale=_.do_rescale??!0,this.rescale_factor=_.rescale_factor??.00392156862745098,this.do_normalize=_.do_normalize,this.do_thumbnail=_.do_thumbnail,this.size=_.size??_.image_size,this.do_resize=_.do_resize??this.size!==void 0,this.size_divisibility=_.size_divisibility??_.size_divisor,this.do_center_crop=_.do_center_crop,this.crop_size=_.crop_size,this.do_convert_rgb=_.do_convert_rgb??!0,this.do_crop_margin=_.do_crop_margin,this.pad_size=_.pad_size,this.do_pad=_.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=_.do_flip_channel_order??!1,this.config=_}async thumbnail(_,k,E=2){const ee=_.height,Y=_.width,de=k.height,me=k.width;let ye=Math.min(ee,de),Ce=Math.min(Y,me);return ye===ee&&Ce===Y?_:(ee>Y?Ce=Math.floor(Y*ye/ee):Y>ee&&(ye=Math.floor(ee*Ce/Y)),await _.resize(Ce,ye,{resample:E}))}async crop_margin(_,k=200){const E=_.clone().grayscale(),ee=(0,G.min)(E.data)[0],de=(0,G.max)(E.data)[0]-ee;if(de===0)return _;const me=k/255;let ye=E.width,Ce=E.height,Ee=0,Le=0;const _e=E.data;for(let U=0;U<E.height;++U){const ce=U*E.width;for(let he=0;he<E.width;++he)(_e[ce+he]-ee)/de<me&&(ye=Math.min(ye,he),Ce=Math.min(Ce,U),Ee=Math.max(Ee,he),Le=Math.max(Le,U))}return _=await _.crop([ye,Ce,Ee,Le]),_}pad_image(_,k,E,{mode:ee="constant",center:Y=!1,constant_values:de=0}={}){const[me,ye,Ce]=k;let Ee,Le;if(typeof E=="number"?(Ee=E,Le=E):(Ee=E.width,Le=E.height),Ee!==ye||Le!==me){const _e=new Float32Array(Ee*Le*Ce);if(Array.isArray(de))for(let he=0;he<_e.length;++he)_e[he]=de[he%Ce];else de!==0&&_e.fill(de);const[U,ce]=Y?[Math.floor((Ee-ye)/2),Math.floor((Le-me)/2)]:[0,0];for(let he=0;he<me;++he){const ke=(he+ce)*Ee,Re=he*ye;for(let Ke=0;Ke<ye;++Ke){const Ye=(ke+Ke+U)*Ce,at=(Re+Ke)*Ce;for(let We=0;We<Ce;++We)_e[Ye+We]=_[at+We]}}if(ee==="symmetric"){if(Y)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const he=me-1,ke=ye-1;for(let Re=0;Re<Le;++Re){const Ke=Re*Ee,Ye=(0,re.calculateReflectOffset)(Re,he)*ye;for(let at=0;at<Ee;++at){if(Re<me&&at<ye)continue;const We=(Ke+at)*Ce,le=(Ye+(0,re.calculateReflectOffset)(at,ke))*Ce;for(let He=0;He<Ce;++He)_e[We+He]=_[le+He]}}}_=_e,k=[Le,Ee,Ce]}return[_,k]}rescale(_){for(let k=0;k<_.length;++k)_[k]=this.rescale_factor*_[k]}get_resize_output_image_size(_,k){const[E,ee]=_.size;let Y,de;if(this.do_thumbnail){const{height:me,width:ye}=k;Y=Math.min(me,ye)}else Number.isInteger(k)?(Y=k,de=this.config.max_size??Y):k!==void 0&&(Y=k.shortest_edge,de=k.longest_edge);if(Y!==void 0||de!==void 0){const me=Y===void 0?1:Math.max(Y/E,Y/ee),ye=E*me,Ce=ee*me,Ee=de===void 0?1:Math.min(de/ye,de/Ce);let Le=Math.floor(Number((ye*Ee).toFixed(2))),_e=Math.floor(Number((Ce*Ee).toFixed(2)));return this.size_divisibility!==void 0&&([Le,_e]=b([Le,_e],this.size_divisibility)),[Le,_e]}else if(k!==void 0&&k.width!==void 0&&k.height!==void 0){let me=k.width,ye=k.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Ce=ye/ee,Ee=me/E;Math.abs(1-Ee)<Math.abs(1-Ce)?Ce=Ee:Ee=Ce,ye=v(Ce*ee,this.config.ensure_multiple_of),me=v(Ee*E,this.config.ensure_multiple_of)}return[me,ye]}else{if(this.size_divisibility!==void 0)return b([E,ee],this.size_divisibility);if(k.min_pixels!==void 0&&k.max_pixels!==void 0){const{min_pixels:me,max_pixels:ye}=k,Ce=this.config.patch_size*this.config.merge_size;return j(ee,E,Ce,me,ye)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(k)}`)}}async resize(_){const[k,E]=this.get_resize_output_image_size(_,this.size);return await _.resize(k,E,{resample:this.resample})}async preprocess(_,{do_normalize:k=null,do_pad:E=null,do_convert_rgb:ee=null,do_convert_grayscale:Y=null,do_flip_channel_order:de=null}={}){this.do_crop_margin&&(_=await this.crop_margin(_));const[me,ye]=_.size;if(ee??this.do_convert_rgb?_=_.rgb():Y&&(_=_.grayscale()),this.do_resize&&(_=await this.resize(_)),this.do_thumbnail&&(_=await this.thumbnail(_,this.size,this.resample)),this.do_center_crop){let U,ce;Number.isInteger(this.crop_size)?(U=this.crop_size,ce=this.crop_size):(U=this.crop_size.width,ce=this.crop_size.height),_=await _.center_crop(U,ce)}const Ce=[_.height,_.width];let Ee=Float32Array.from(_.data),Le=[_.height,_.width,_.channels];if(this.do_rescale&&this.rescale(Ee),k??this.do_normalize){let U=this.image_mean;Array.isArray(this.image_mean)||(U=new Array(_.channels).fill(U));let ce=this.image_std;if(Array.isArray(this.image_std)||(ce=new Array(_.channels).fill(U)),U.length!==_.channels||ce.length!==_.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${U.length}) and \`image_std\` (${ce.length}) must match the number of channels in the image (${_.channels}).`);for(let he=0;he<Ee.length;he+=_.channels)for(let ke=0;ke<_.channels;++ke)Ee[he+ke]=(Ee[he+ke]-U[ke])/ce[ke]}if(E??this.do_pad){if(this.pad_size)[Ee,Le]=this.pad_image(Ee,[_.height,_.width,_.channels],this.pad_size);else if(this.size_divisibility){const[U,ce]=b([Le[1],Le[0]],this.size_divisibility);[Ee,Le]=this.pad_image(Ee,Le,{width:U,height:ce})}}if(de??this.do_flip_channel_order){if(Le[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let U=0;U<Ee.length;U+=3){const ce=Ee[U];Ee[U]=Ee[U+2],Ee[U+2]=ce}}const _e=new D.Tensor("float32",Ee,Le).permute(2,0,1);return{original_size:[ye,me],reshaped_input_size:Ce,pixel_values:_e}}async _call(_,...k){Array.isArray(_)||(_=[_]);const E=await Promise.all(_.map(Y=>this.preprocess(Y)));return{pixel_values:(0,D.stack)(E.map(Y=>Y.pixel_values),0),original_sizes:E.map(Y=>Y.original_size),reshaped_input_sizes:E.map(Y=>Y.reshaped_input_size)}}static async from_pretrained(_,k){const E=await(0,Q.getModelJSON)(_,g.IMAGE_PROCESSOR_NAME,!0,k);return new this(E)}}},"./src/base/processing_utils.js":(Oe,R,c)=>{c.r(R),c.d(R,{Processor:()=>re});var w=c("./src/utils/constants.js"),D=c("./src/utils/generic.js"),G=c("./src/utils/hub.js");class re extends D.Callable{constructor(g,v){super(),this.config=g,this.components=v}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(g,v={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(g,{tokenize:!1,...v})}batch_decode(...g){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...g)}async _call(g,...v){for(const b of[this.image_processor,this.feature_extractor,this.tokenizer])if(b)return b(g,...v);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(g,v){const[b,y]=await Promise.all([this.uses_processor_config?(0,G.getModelJSON)(g,w.PROCESSOR_NAME,!0,v):{},Promise.all(this.classes.filter(C=>C in this).map(async C=>{const q=await this[C].from_pretrained(g,v);return[C.replace(/_class$/,""),q]})).then(Object.fromEntries)]);return new this(b,y)}}Te(re,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),Te(re,"uses_processor_config",!1)},"./src/configs.js":(Oe,R,c)=>{c.r(R),c.d(R,{AutoConfig:()=>v,PretrainedConfig:()=>g,getKeyValueShapes:()=>Q});var w=c("./src/utils/core.js"),D=c("./src/utils/hub.js");async function G(b,y){return await(0,D.getModelJSON)(b,"config.json",!0,y)}function re(b){const y={};let C={};switch(b.model_type){case"llava":case"paligemma":case"florence2":case"llava_onevision":case"idefics3":C=re(b.text_config);break;case"moondream1":C=re(b.phi_config);break;case"musicgen":C=re(b.decoder);break;case"multi_modality":C=re(b.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":y.num_heads="n_head",y.num_layers="n_layer",y.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"phi":case"phi3":case"falcon":y.num_heads="num_attention_heads",y.num_layers="num_hidden_layers",y.hidden_size="hidden_size";break;case"llama":case"olmo":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":y.num_heads="num_key_value_heads",y.num_layers="num_hidden_layers",y.hidden_size="hidden_size",y.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":y.num_heads="num_key_value_heads",y.num_layers="num_hidden_layers",y.dim_kv="head_dim";break;case"openelm":y.num_heads="num_kv_heads",y.num_layers="num_transformer_layers",y.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":y.num_heads="num_heads",y.num_layers="num_layers",y.hidden_size="hidden_size";break;case"bloom":y.num_heads="n_head",y.num_layers="n_layer",y.hidden_size="hidden_size";break;case"mpt":y.num_heads="n_heads",y.num_layers="n_layers",y.hidden_size="d_model";break;case"t5":case"mt5":case"longt5":y.num_decoder_layers="num_decoder_layers",y.num_decoder_heads="num_heads",y.decoder_dim_kv="d_kv",y.num_encoder_layers="num_layers",y.num_encoder_heads="num_heads",y.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":y.num_decoder_layers="decoder_layers",y.num_decoder_heads="decoder_attention_heads",y.decoder_hidden_size="d_model",y.num_encoder_layers="encoder_layers",y.num_encoder_heads="encoder_attention_heads",y.encoder_hidden_size="d_model";break;case"speecht5":y.num_decoder_layers="decoder_layers",y.num_decoder_heads="decoder_attention_heads",y.decoder_hidden_size="hidden_size",y.num_encoder_layers="encoder_layers",y.num_encoder_heads="encoder_attention_heads",y.encoder_hidden_size="hidden_size";break;case"trocr":y.num_encoder_layers=y.num_decoder_layers="decoder_layers",y.num_encoder_heads=y.num_decoder_heads="decoder_attention_heads",y.encoder_hidden_size=y.decoder_hidden_size="d_model";break;case"musicgen_decoder":y.num_encoder_layers=y.num_decoder_layers="num_hidden_layers",y.num_encoder_heads=y.num_decoder_heads="num_attention_heads",y.encoder_hidden_size=y.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const J=re(b.decoder),ie="num_decoder_layers"in J,fe=(0,w.pick)(b,["model_type","is_encoder_decoder"]);return ie?(fe.num_decoder_layers=J.num_decoder_layers,fe.num_decoder_heads=J.num_decoder_heads,fe.decoder_hidden_size=J.decoder_hidden_size,fe.num_encoder_layers=J.num_encoder_layers,fe.num_encoder_heads=J.num_encoder_heads,fe.encoder_hidden_size=J.encoder_hidden_size):(fe.num_layers=J.num_layers,fe.num_heads=J.num_heads,fe.hidden_size=J.hidden_size),fe}const q={...C,...(0,w.pick)(b,["model_type","multi_query","is_encoder_decoder"])};for(const J in y)q[J]=b[y[J]];return q}function Q(b,{prefix:y="past_key_values",batch_size:C=1}={}){const q={},J=b.normalized_config;if(J.is_encoder_decoder&&"num_encoder_heads"in J&&"num_decoder_heads"in J){const ie=J.encoder_dim_kv??J.encoder_hidden_size/J.num_encoder_heads,fe=J.decoder_dim_kv??J.decoder_hidden_size/J.num_decoder_heads,j=[C,J.num_encoder_heads,0,ie],X=[C,J.num_decoder_heads,0,fe];for(let Z=0;Z<J.num_decoder_layers;++Z)q[`${y}.${Z}.encoder.key`]=j,q[`${y}.${Z}.encoder.value`]=j,q[`${y}.${Z}.decoder.key`]=X,q[`${y}.${Z}.decoder.value`]=X}else{const ie=J.num_heads,fe=J.num_layers,j=J.dim_kv??J.hidden_size/(J.num_attention_heads??ie);if(J.model_type==="falcon"){const X=[C*ie,0,j];for(let Z=0;Z<fe;++Z)q[`${y}.${Z}.key`]=X,q[`${y}.${Z}.value`]=X}else if(J.multi_query){const X=[C*ie,0,2*j];for(let Z=0;Z<fe;++Z)q[`${y}.${Z}.key_value`]=X}else if(J.model_type==="bloom"){const X=[C*ie,j,0],Z=[C*ie,0,j];for(let N=0;N<fe;++N)q[`${y}.${N}.key`]=X,q[`${y}.${N}.value`]=Z}else if(J.model_type==="openelm")for(let X=0;X<fe;++X){const Z=[C,ie[X],0,j];q[`${y}.${X}.key`]=Z,q[`${y}.${X}.value`]=Z}else{const X=[C,ie,0,j];for(let Z=0;Z<fe;++Z)q[`${y}.${Z}.key`]=X,q[`${y}.${Z}.value`]=X}}return q}class g{constructor(y){Te(this,"model_type",null);Te(this,"is_encoder_decoder",!1);Te(this,"max_position_embeddings");Te(this,"transformers.js_config");Object.assign(this,y),this.normalized_config=re(this)}static async from_pretrained(y,{progress_callback:C=null,config:q=null,cache_dir:J=null,local_files_only:ie=!1,revision:fe="main"}={}){q&&!(q instanceof g)&&(q=new g(q));const j=q??await G(y,{progress_callback:C,config:q,cache_dir:J,local_files_only:ie,revision:fe});return new this(j)}}class v{static async from_pretrained(...y){return g.from_pretrained(...y)}}},"./src/env.js":(Oe,R,c)=>{var E,ee;c.r(R),c.d(R,{apis:()=>fe,env:()=>_});var w=c("?569f"),D=c("?3f59"),G=c("?154a");const re="3.1.1",Q=typeof window<"u"&&typeof window.document<"u",g=typeof self<"u"&&((E=self.constructor)==null?void 0:E.name)==="DedicatedWorkerGlobalScope",v=typeof self<"u"&&"caches"in self,b=typeof navigator<"u"&&"gpu"in navigator,y=typeof navigator<"u"&&"ml"in navigator,C=typeof process<"u",q=C&&((ee=process==null?void 0:process.release)==null?void 0:ee.name)==="node",J=!k(w),ie=!k(D),fe=Object.freeze({IS_BROWSER_ENV:Q,IS_WEBWORKER_ENV:g,IS_WEB_CACHE_AVAILABLE:v,IS_WEBGPU_AVAILABLE:b,IS_WEBNN_AVAILABLE:y,IS_PROCESS_AVAILABLE:C,IS_NODE_ENV:q,IS_FS_AVAILABLE:J,IS_PATH_AVAILABLE:ie}),j=J&&ie;let X="./";if(j){const Y=Object({url:self.location.href}).url;Y?X=D.dirname(D.dirname(G.fileURLToPath(Y))):typeof __dirname<"u"&&(X=D.dirname(__dirname))}const Z=j?D.join(X,"/.cache/"):null,N="/models/",I=j?D.join(X,N):N,_={version:re,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(Q||g),localModelPath:I,useFS:J,useBrowserCache:v,useFSCache:J,cacheDir:Z,useCustomCache:!1,customCache:null};function k(Y){return Object.keys(Y).length===0}},"./src/generation/configuration_utils.js":(Oe,R,c)=>{c.r(R),c.d(R,{GenerationConfig:()=>D});var w=c("./src/utils/core.js");class D{constructor(re){Te(this,"max_length",20);Te(this,"max_new_tokens",null);Te(this,"min_length",0);Te(this,"min_new_tokens",null);Te(this,"early_stopping",!1);Te(this,"max_time",null);Te(this,"do_sample",!1);Te(this,"num_beams",1);Te(this,"num_beam_groups",1);Te(this,"penalty_alpha",null);Te(this,"use_cache",!0);Te(this,"temperature",1);Te(this,"top_k",50);Te(this,"top_p",1);Te(this,"typical_p",1);Te(this,"epsilon_cutoff",0);Te(this,"eta_cutoff",0);Te(this,"diversity_penalty",0);Te(this,"repetition_penalty",1);Te(this,"encoder_repetition_penalty",1);Te(this,"length_penalty",1);Te(this,"no_repeat_ngram_size",0);Te(this,"bad_words_ids",null);Te(this,"force_words_ids",null);Te(this,"renormalize_logits",!1);Te(this,"constraints",null);Te(this,"forced_bos_token_id",null);Te(this,"forced_eos_token_id",null);Te(this,"remove_invalid_values",!1);Te(this,"exponential_decay_length_penalty",null);Te(this,"suppress_tokens",null);Te(this,"streamer",null);Te(this,"begin_suppress_tokens",null);Te(this,"forced_decoder_ids",null);Te(this,"guidance_scale",null);Te(this,"num_return_sequences",1);Te(this,"output_attentions",!1);Te(this,"output_hidden_states",!1);Te(this,"output_scores",!1);Te(this,"return_dict_in_generate",!1);Te(this,"pad_token_id",null);Te(this,"bos_token_id",null);Te(this,"eos_token_id",null);Te(this,"encoder_no_repeat_ngram_size",0);Te(this,"decoder_start_token_id",null);Te(this,"generation_kwargs",{});Object.assign(this,(0,w.pick)(re,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(Oe,R,c)=>{c.r(R),c.d(R,{ClassifierFreeGuidanceLogitsProcessor:()=>j,ForcedBOSTokenLogitsProcessor:()=>g,ForcedEOSTokenLogitsProcessor:()=>v,LogitsProcessor:()=>G,LogitsProcessorList:()=>Q,LogitsWarper:()=>re,MinLengthLogitsProcessor:()=>J,MinNewTokensLengthLogitsProcessor:()=>ie,NoBadWordsLogitsProcessor:()=>fe,NoRepeatNGramLogitsProcessor:()=>C,RepetitionPenaltyLogitsProcessor:()=>q,SuppressTokensAtBeginLogitsProcessor:()=>b,TemperatureLogitsWarper:()=>X,TopKLogitsWarper:()=>N,TopPLogitsWarper:()=>Z,WhisperTimeStampLogitsProcessor:()=>y});var w=c("./src/utils/generic.js");c("./src/utils/tensor.js");var D=c("./src/utils/maths.js");class G extends w.Callable{_call(_,k){throw Error("`_call` should be implemented in a subclass")}}class re extends w.Callable{_call(_,k){throw Error("`_call` should be implemented in a subclass")}}class Q extends w.Callable{constructor(){super(),this.processors=[]}push(_){this.processors.push(_)}extend(_){this.processors.push(..._)}_call(_,k){let E=k;for(const ee of this.processors)E=ee(_,E);return E}[Symbol.iterator](){return this.processors.values()}}class g extends G{constructor(_){super(),this.bos_token_id=_}_call(_,k){for(let E=0;E<_.length;++E)if(_[E].length===1){const ee=k[E].data;ee.fill(-1/0),ee[this.bos_token_id]=0}return k}}class v extends G{constructor(_,k){super(),this.max_length=_,this.eos_token_id=Array.isArray(k)?k:[k]}_call(_,k){for(let E=0;E<_.length;++E)if(_[E].length===this.max_length-1){const ee=k[E].data;ee.fill(-1/0);for(const Y of this.eos_token_id)ee[Y]=0}return k}}class b extends G{constructor(_,k){super(),this.begin_suppress_tokens=_,this.begin_index=k}_call(_,k){for(let E=0;E<_.length;++E)if(_[E].length===this.begin_index){const ee=k[E].data;for(const Y of this.begin_suppress_tokens)ee[Y]=-1/0}return k}}class y extends G{constructor(_,k){super(),this.eos_token_id=Array.isArray(_.eos_token_id)?_.eos_token_id[0]:_.eos_token_id,this.no_timestamps_token_id=_.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=k.length,k.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=_.max_initial_timestamp_index}_call(_,k){for(let E=0;E<_.length;++E){const ee=k[E].data;if(ee[this.no_timestamps_token_id]=-1/0,_[E].length===this.begin_index-1){ee.fill(-1/0),ee[this.timestamp_begin]=0;continue}const Y=_[E].slice(this.begin_index),de=Y.length>=1&&Y[Y.length-1]>=this.timestamp_begin,me=Y.length<2||Y[Y.length-2]>=this.timestamp_begin;if(de&&(me?ee.subarray(this.timestamp_begin).fill(-1/0):ee.subarray(0,this.eos_token_id).fill(-1/0)),_[E].length===this.begin_index&&this.max_initial_timestamp_index!==null){const Le=this.timestamp_begin+this.max_initial_timestamp_index;ee.subarray(Le+1).fill(-1/0)}const ye=(0,D.log_softmax)(ee),Ce=Math.log(ye.subarray(this.timestamp_begin).map(Math.exp).reduce((Le,_e)=>Le+_e)),Ee=(0,D.max)(ye.subarray(0,this.timestamp_begin))[0];Ce>Ee&&ee.subarray(0,this.timestamp_begin).fill(-1/0)}return k}}class C extends G{constructor(_){super(),this.no_repeat_ngram_size=_}getNgrams(_){const k=_.length,E=[];for(let Y=0;Y<k+1-this.no_repeat_ngram_size;++Y){const de=[];for(let me=0;me<this.no_repeat_ngram_size;++me)de.push(_[Y+me]);E.push(de.map(Number))}const ee=new Map;for(const Y of E){const de=Y.slice(0,Y.length-1),me=JSON.stringify(de),ye=ee.get(me)??[];ye.push(Y[Y.length-1]),ee.set(me,ye)}return ee}getGeneratedNgrams(_,k){const E=k.slice(k.length+1-this.no_repeat_ngram_size,k.length);return _.get(JSON.stringify(E.map(Number)))??[]}calcBannedNgramTokens(_){const k=[];if(_.length+1<this.no_repeat_ngram_size)return k;{const E=this.getNgrams(_);return this.getGeneratedNgrams(E,_)}}_call(_,k){for(let E=0;E<_.length;++E){const ee=k[E].data,Y=this.calcBannedNgramTokens(_[E]);for(const de of Y)ee[de]=-1/0}return k}}class q extends G{constructor(_){super(),this.penalty=_}_call(_,k){for(let E=0;E<_.length;++E){const ee=k[E].data;for(const Y of new Set(_[E])){const de=Number(Y);ee[de]<0?ee[de]*=this.penalty:ee[de]/=this.penalty}}return k}}class J extends G{constructor(_,k){super(),this.min_length=_,this.eos_token_id=Array.isArray(k)?k:[k]}_call(_,k){for(let E=0;E<_.length;++E)if(_[E].length<this.min_length){const ee=k[E].data;for(const Y of this.eos_token_id)ee[Y]=-1/0}return k}}class ie extends G{constructor(_,k,E){super(),this.prompt_length_to_skip=_,this.min_new_tokens=k,this.eos_token_id=Array.isArray(E)?E:[E]}_call(_,k){for(let E=0;E<_.length;++E)if(_[E].length-this.prompt_length_to_skip<this.min_new_tokens){const Y=k[E].data;for(const de of this.eos_token_id)Y[de]=-1/0}return k}}class fe extends G{constructor(_,k){super(),this.bad_words_ids=_,this.eos_token_id=Array.isArray(k)?k:[k]}_call(_,k){for(let E=0;E<_.length;++E){const ee=k[E].data,Y=_[E];for(const de of this.bad_words_ids){let me=!0;for(let ye=1;ye<=de.length-1&&de.length<Y.length;++ye)if(de.at(-ye-1)!=Y.at(-ye)){me=!1;break}me&&(ee[de.at(-1)]=-1/0)}}return k}}class j extends G{constructor(_){if(super(),_<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${_}.`);this.guidance_scale=_}_call(_,k){if(k.dims[0]!==2*_.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${k.dims[0]} for the logits and ${_.length} for the input ids.`);const E=_.length,ee=k.slice([0,E],null),Y=k.slice([E,k.dims[0]],null);for(let de=0;de<Y.data.length;++de)Y.data[de]+=(ee.data[de]-Y.data[de])*this.guidance_scale;return Y}}class X extends re{constructor(_){super(),this.temperature=_}_call(_,k){const E=k.data;for(let ee=0;ee<E.length;++ee)E[ee]/=this.temperature;return k}}class Z extends re{constructor(_,{filter_value:k=-1/0,min_tokens_to_keep:E=1}={}){if(super(),_<0||_>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${_}`);if(!Number.isInteger(E)||E<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${E}`);this.top_p=_,this.filter_value=k,this.min_tokens_to_keep=E}}class N extends re{constructor(_,{filter_value:k=-1/0,min_tokens_to_keep:E=1}={}){if(super(),!Number.isInteger(_)||_<0)throw new Error(`\`top_k\` must be a positive integer, but is ${_}`);this.top_k=Math.max(_,E),this.filter_value=k}}},"./src/generation/logits_sampler.js":(Oe,R,c)=>{c.r(R),c.d(R,{LogitsSampler:()=>re});var w=c("./src/utils/generic.js"),D=c("./src/utils/tensor.js"),G=c("./src/utils/maths.js");c("./src/generation/configuration_utils.js");class re extends w.Callable{constructor(y){super(),this.generation_config=y}async _call(y){return this.sample(y)}async sample(y){throw Error("sample should be implemented in subclasses.")}getLogits(y,C){let q=y.dims.at(-1),J=y.data;if(C===-1)J=J.slice(-q);else{let ie=C*q;J=J.slice(ie,ie+q)}return J}randomSelect(y){let C=0;for(let J=0;J<y.length;++J)C+=y[J];let q=Math.random()*C;for(let J=0;J<y.length;++J)if(q-=y[J],q<=0)return J;return 0}static getSampler(y){if(y.do_sample)return new g(y);if(y.num_beams>1)return new v(y);if(y.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${y.num_return_sequences}.`);return new Q(y)}}class Q extends re{async sample(y){const C=(0,G.max)(y.data)[1];return[[BigInt(C),0]]}}class g extends re{async sample(y){let C=y.dims.at(-1);this.generation_config.top_k>0&&(C=Math.min(this.generation_config.top_k,C));const[q,J]=await(0,D.topk)(y,C),ie=(0,G.softmax)(q.data);return Array.from({length:this.generation_config.num_beams},()=>{const fe=this.randomSelect(ie);return[J.data[fe],Math.log(ie[fe])]})}}class v extends re{async sample(y){let C=y.dims.at(-1);this.generation_config.top_k>0&&(C=Math.min(this.generation_config.top_k,C));const[q,J]=await(0,D.topk)(y,C),ie=(0,G.softmax)(q.data);return Array.from({length:this.generation_config.num_beams},(fe,j)=>[J.data[j],Math.log(ie[j])])}}},"./src/generation/stopping_criteria.js":(Oe,R,c)=>{c.r(R),c.d(R,{EosTokenCriteria:()=>Q,InterruptableStoppingCriteria:()=>g,MaxLengthCriteria:()=>re,StoppingCriteria:()=>D,StoppingCriteriaList:()=>G});var w=c("./src/utils/generic.js");class D extends w.Callable{_call(b,y){throw Error("StoppingCriteria needs to be subclassed")}}class G extends w.Callable{constructor(){super(),this.criteria=[]}push(b){this.criteria.push(b)}extend(b){b instanceof G?b=b.criteria:b instanceof D&&(b=[b]),this.criteria.push(...b)}_call(b,y){const C=new Array(b.length).fill(!1);for(const q of this.criteria){const J=q(b,y);for(let ie=0;ie<C.length;++ie)C[ie]||(C[ie]=J[ie])}return C}[Symbol.iterator](){return this.criteria.values()}}class re extends D{constructor(b,y=null){super(),this.max_length=b,this.max_position_embeddings=y}_call(b){return b.map(y=>y.length>=this.max_length)}}class Q extends D{constructor(b){super(),Array.isArray(b)||(b=[b]),this.eos_token_id=b}_call(b,y){return b.map(C=>{const q=C.at(-1);return this.eos_token_id.some(J=>q==J)})}}class g extends D{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(b,y){return new Array(b.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(Oe,R,c)=>{c.r(R),c.d(R,{BaseStreamer:()=>re,TextStreamer:()=>g,WhisperTextStreamer:()=>v});var w=c("./src/utils/core.js"),D=c("./src/tokenizers.js"),G=c("./src/env.js");class re{put(y){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const Q=G.apis.IS_PROCESS_AVAILABLE?b=>process.stdout.write(b):b=>console.log(b);class g extends re{constructor(y,{skip_prompt:C=!1,callback_function:q=null,token_callback_function:J=null,decode_kwargs:ie={},...fe}={}){super(),this.tokenizer=y,this.skip_prompt=C,this.callback_function=q??Q,this.token_callback_function=J,this.decode_kwargs={...ie,...fe},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(y){var ie;if(y.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt){this.next_tokens_are_prompt=!1;return}const C=y[0];(ie=this.token_callback_function)==null||ie.call(this,C),this.token_cache=(0,w.mergeArrays)(this.token_cache,C);const q=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let J;q.endsWith(`
`)?(J=q.slice(this.print_len),this.token_cache=[],this.print_len=0):q.length>0&&(0,D.is_chinese_char)(q.charCodeAt(q.length-1))?(J=q.slice(this.print_len),this.print_len+=J.length):(J=q.slice(this.print_len,q.lastIndexOf(" ")+1),this.print_len+=J.length),this.on_finalized_text(J,!1)}end(){let y;this.token_cache.length>0?(y=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):y="",this.next_tokens_are_prompt=!0,this.on_finalized_text(y,!0)}on_finalized_text(y,C){var q,J;y.length>0&&((q=this.callback_function)==null||q.call(this,y)),C&&this.callback_function===Q&&G.apis.IS_PROCESS_AVAILABLE&&((J=this.callback_function)==null||J.call(this,`
`))}}class v extends g{constructor(y,{skip_prompt:C=!1,callback_function:q=null,token_callback_function:J=null,on_chunk_start:ie=null,on_chunk_end:fe=null,on_finalize:j=null,time_precision:X=.02,skip_special_tokens:Z=!0,decode_kwargs:N={}}={}){super(y,{skip_prompt:C,callback_function:q,token_callback_function:J,decode_kwargs:{skip_special_tokens:Z,...N}}),this.timestamp_begin=y.timestamp_begin,this.on_chunk_start=ie,this.on_chunk_end=fe,this.on_finalize=j,this.time_precision=X,this.waiting_for_timestamp=!1}put(y){var q,J;if(y.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const C=y[0];if(C.length===1){const ie=Number(C[0])-this.timestamp_begin;if(ie>=0){const fe=ie*this.time_precision;this.waiting_for_timestamp?(q=this.on_chunk_end)==null||q.call(this,fe):(J=this.on_chunk_start)==null||J.call(this,fe),this.waiting_for_timestamp=!this.waiting_for_timestamp,y=[[]]}}return super.put(y)}end(){var y;super.end(),(y=this.on_finalize)==null||y.call(this)}}},"./src/models.js":(Oe,R,c)=>{c.r(R),c.d(R,{ASTForAudioClassification:()=>Oa,ASTModel:()=>Xo,ASTPreTrainedModel:()=>kt,AlbertForMaskedLM:()=>Nn,AlbertForQuestionAnswering:()=>jn,AlbertForSequenceClassification:()=>Rn,AlbertModel:()=>Cn,AlbertPreTrainedModel:()=>Ot,AutoModel:()=>wa,AutoModelForAudioClassification:()=>Zd,AutoModelForAudioFrameClassification:()=>tc,AutoModelForCTC:()=>Jd,AutoModelForCausalLM:()=>Vd,AutoModelForDepthEstimation:()=>nc,AutoModelForDocumentQuestionAnswering:()=>rc,AutoModelForImageClassification:()=>Kd,AutoModelForImageFeatureExtraction:()=>ac,AutoModelForImageMatting:()=>sc,AutoModelForImageSegmentation:()=>sp,AutoModelForImageToImage:()=>ya,AutoModelForMaskGeneration:()=>Yd,AutoModelForMaskedLM:()=>rp,AutoModelForNormalEstimation:()=>oc,AutoModelForObjectDetection:()=>Qd,AutoModelForPoseEstimation:()=>ic,AutoModelForQuestionAnswering:()=>Wd,AutoModelForSemanticSegmentation:()=>Hd,AutoModelForSeq2SeqLM:()=>tp,AutoModelForSequenceClassification:()=>Bd,AutoModelForSpeechSeq2Seq:()=>jd,AutoModelForTextToSpectrogram:()=>Nd,AutoModelForTextToWaveform:()=>Ud,AutoModelForTokenClassification:()=>Rd,AutoModelForUniversalSegmentation:()=>qd,AutoModelForVision2Seq:()=>Gd,AutoModelForXVector:()=>ec,AutoModelForZeroShotObjectDetection:()=>Xd,BartForConditionalGeneration:()=>Ue,BartForSequenceClassification:()=>lt,BartModel:()=>Pe,BartPretrainedModel:()=>Me,BaseModelOutput:()=>je,BeitForImageClassification:()=>tu,BeitModel:()=>eu,BeitPreTrainedModel:()=>Mo,BertForMaskedLM:()=>et,BertForQuestionAnswering:()=>ze,BertForSequenceClassification:()=>Qe,BertForTokenClassification:()=>qe,BertModel:()=>$e,BertPreTrainedModel:()=>we,BlenderbotForConditionalGeneration:()=>qt,BlenderbotModel:()=>Cr,BlenderbotPreTrainedModel:()=>Jt,BlenderbotSmallForConditionalGeneration:()=>Gr,BlenderbotSmallModel:()=>hs,BlenderbotSmallPreTrainedModel:()=>lr,BloomForCausalLM:()=>Sl,BloomModel:()=>$l,BloomPreTrainedModel:()=>hi,CLIPModel:()=>Ra,CLIPPreTrainedModel:()=>cn,CLIPSegForImageSegmentation:()=>Xa,CLIPSegModel:()=>Qa,CLIPSegPreTrainedModel:()=>ti,CLIPTextModel:()=>yc,CLIPTextModelWithProjection:()=>ja,CLIPVisionModel:()=>Mc,CLIPVisionModelWithProjection:()=>Na,CamembertForMaskedLM:()=>qs,CamembertForQuestionAnswering:()=>vn,CamembertForSequenceClassification:()=>Qs,CamembertForTokenClassification:()=>Ds,CamembertModel:()=>as,CamembertPreTrainedModel:()=>Fr,CausalLMOutput:()=>hn,CausalLMOutputWithPast:()=>Pp,ChineseCLIPModel:()=>Ga,ChineseCLIPPreTrainedModel:()=>Cs,ClapAudioModelWithProjection:()=>rd,ClapModel:()=>ed,ClapPreTrainedModel:()=>Lo,ClapTextModelWithProjection:()=>td,CodeGenForCausalLM:()=>al,CodeGenModel:()=>il,CodeGenPreTrainedModel:()=>ys,CohereForCausalLM:()=>fl,CohereModel:()=>vc,CoherePreTrainedModel:()=>wo,ConvBertForMaskedLM:()=>Je,ConvBertForQuestionAnswering:()=>At,ConvBertForSequenceClassification:()=>ot,ConvBertForTokenClassification:()=>ut,ConvBertModel:()=>Ae,ConvBertPreTrainedModel:()=>ue,ConvNextForImageClassification:()=>Mu,ConvNextModel:()=>zi,ConvNextPreTrainedModel:()=>Li,ConvNextV2ForImageClassification:()=>Sc,ConvNextV2Model:()=>bu,ConvNextV2PreTrainedModel:()=>Bi,DPTForDepthEstimation:()=>Ii,DPTModel:()=>xo,DPTPreTrainedModel:()=>To,DebertaForMaskedLM:()=>Ls,DebertaForQuestionAnswering:()=>Ys,DebertaForSequenceClassification:()=>Xs,DebertaForTokenClassification:()=>un,DebertaModel:()=>Ts,DebertaPreTrainedModel:()=>Dt,DebertaV2ForMaskedLM:()=>Zs,DebertaV2ForQuestionAnswering:()=>it,DebertaV2ForSequenceClassification:()=>zs,DebertaV2ForTokenClassification:()=>ps,DebertaV2Model:()=>Js,DebertaV2PreTrainedModel:()=>xs,DecisionTransformerModel:()=>md,DecisionTransformerPreTrainedModel:()=>hd,DeiTForImageClassification:()=>du,DeiTModel:()=>Pc,DeiTPreTrainedModel:()=>Si,DepthAnythingForDepthEstimation:()=>fu,DepthAnythingPreTrainedModel:()=>mu,DepthProForDepthEstimation:()=>gu,DepthProPreTrainedModel:()=>Co,DetrForObjectDetection:()=>ru,DetrForSegmentation:()=>Pi,DetrModel:()=>Ec,DetrObjectDetectionOutput:()=>Ms,DetrPreTrainedModel:()=>bo,DetrSegmentationOutput:()=>su,Dinov2ForImageClassification:()=>kc,Dinov2Model:()=>vu,Dinov2PreTrainedModel:()=>Ri,DistilBertForMaskedLM:()=>Sr,DistilBertForQuestionAnswering:()=>Bs,DistilBertForSequenceClassification:()=>Wr,DistilBertForTokenClassification:()=>en,DistilBertModel:()=>It,DistilBertPreTrainedModel:()=>Mt,DonutSwinModel:()=>Kn,DonutSwinPreTrainedModel:()=>Di,EfficientNetForImageClassification:()=>id,EfficientNetModel:()=>Vc,EfficientNetPreTrainedModel:()=>Ji,ElectraForMaskedLM:()=>Ct,ElectraForQuestionAnswering:()=>Nr,ElectraForSequenceClassification:()=>ar,ElectraForTokenClassification:()=>Mr,ElectraModel:()=>Et,ElectraPreTrainedModel:()=>xt,EsmForMaskedLM:()=>As,EsmForSequenceClassification:()=>br,EsmForTokenClassification:()=>Tn,EsmModel:()=>Br,EsmPreTrainedModel:()=>ts,FalconForCausalLM:()=>Rc,FalconModel:()=>Zu,FalconPreTrainedModel:()=>Qi,FastViTForImageClassification:()=>Kl,FastViTModel:()=>Gl,FastViTPreTrainedModel:()=>wi,Florence2ForConditionalGeneration:()=>za,Florence2PreTrainedModel:()=>fs,GLPNForDepthEstimation:()=>yu,GLPNModel:()=>$c,GLPNPreTrainedModel:()=>Oi,GPT2LMHeadModel:()=>bc,GPT2Model:()=>Ya,GPT2PreTrainedModel:()=>ri,GPTBigCodeForCausalLM:()=>ol,GPTBigCodeModel:()=>nl,GPTBigCodePreTrainedModel:()=>oi,GPTJForCausalLM:()=>sl,GPTJModel:()=>rl,GPTJPreTrainedModel:()=>ni,GPTNeoForCausalLM:()=>Za,GPTNeoModel:()=>$s,GPTNeoPreTrainedModel:()=>_o,GPTNeoXForCausalLM:()=>tl,GPTNeoXModel:()=>el,GPTNeoXPreTrainedModel:()=>si,Gemma2ForCausalLM:()=>yl,Gemma2Model:()=>wl,Gemma2PreTrainedModel:()=>An,GemmaForCausalLM:()=>gl,GemmaModel:()=>_l,GemmaPreTrainedModel:()=>di,GraniteForCausalLM:()=>ml,GraniteModel:()=>hl,GranitePreTrainedModel:()=>go,GroupViTModel:()=>Wl,GroupViTPreTrainedModel:()=>Vl,HieraForImageClassification:()=>pu,HieraModel:()=>cu,HieraPreTrainedModel:()=>ki,HubertForCTC:()=>Wu,HubertForSequenceClassification:()=>Gu,HubertModel:()=>Vu,HubertPreTrainedModel:()=>Dc,Idefics3ForConditionalGeneration:()=>Us,Idefics3PreTrainedModel:()=>Ba,ImageMattingOutput:()=>uc,JAISLMHeadModel:()=>fo,JAISModel:()=>Ja,JAISPreTrainedModel:()=>ws,JinaCLIPModel:()=>Ka,JinaCLIPPreTrainedModel:()=>mo,JinaCLIPTextModel:()=>Ha,JinaCLIPVisionModel:()=>qa,LlamaForCausalLM:()=>ul,LlamaModel:()=>ll,LlamaPreTrainedModel:()=>ii,LlavaForConditionalGeneration:()=>ho,LlavaOnevisionForConditionalGeneration:()=>Da,LlavaPreTrainedModel:()=>Zo,LongT5ForConditionalGeneration:()=>xe,LongT5Model:()=>_r,LongT5PreTrainedModel:()=>kn,M2M100ForConditionalGeneration:()=>Vi,M2M100Model:()=>$u,M2M100PreTrainedModel:()=>Ui,MBartForCausalLM:()=>gr,MBartForConditionalGeneration:()=>Tt,MBartForSequenceClassification:()=>Wt,MBartModel:()=>pt,MBartPreTrainedModel:()=>mt,MPNetForMaskedLM:()=>co,MPNetForQuestionAnswering:()=>js,MPNetForSequenceClassification:()=>rn,MPNetForTokenClassification:()=>Es,MPNetModel:()=>Bn,MPNetPreTrainedModel:()=>Rs,MT5ForConditionalGeneration:()=>oe,MT5Model:()=>K,MT5PreTrainedModel:()=>T,MarianMTModel:()=>Ni,MarianModel:()=>ji,MarianPreTrainedModel:()=>Hn,MaskFormerForInstanceSegmentation:()=>wu,MaskFormerModel:()=>So,MaskFormerPreTrainedModel:()=>$o,MaskedLMOutput:()=>Jr,MgpstrForSceneTextRecognition:()=>oa,MgpstrModelOutput:()=>_d,MgpstrPreTrainedModel:()=>gd,MistralForCausalLM:()=>Yu,MistralModel:()=>Hi,MistralPreTrainedModel:()=>Ki,MobileBertForMaskedLM:()=>Dn,MobileBertForQuestionAnswering:()=>zn,MobileBertForSequenceClassification:()=>Ln,MobileBertModel:()=>uo,MobileBertPreTrainedModel:()=>tn,MobileLLMForCausalLM:()=>cl,MobileLLMModel:()=>dl,MobileLLMPreTrainedModel:()=>ai,MobileNetV1ForImageClassification:()=>ud,MobileNetV1Model:()=>ld,MobileNetV1PreTrainedModel:()=>ss,MobileNetV2ForImageClassification:()=>Jn,MobileNetV2Model:()=>dd,MobileNetV2PreTrainedModel:()=>Bo,MobileNetV3ForImageClassification:()=>ta,MobileNetV3Model:()=>cd,MobileNetV3PreTrainedModel:()=>ea,MobileNetV4ForImageClassification:()=>sa,MobileNetV4Model:()=>pd,MobileNetV4PreTrainedModel:()=>ra,MobileViTForImageClassification:()=>Mi,MobileViTModel:()=>Ql,MobileViTPreTrainedModel:()=>yi,MobileViTV2ForImageClassification:()=>Ti,MobileViTV2Model:()=>vi,MobileViTV2PreTrainedModel:()=>bi,ModelOutput:()=>He,Moondream1ForConditionalGeneration:()=>La,MptForCausalLM:()=>Al,MptModel:()=>kl,MptPreTrainedModel:()=>mi,MultiModalityCausalLM:()=>na,MultiModalityPreTrainedModel:()=>fd,MusicgenForCausalLM:()=>Gc,MusicgenForConditionalGeneration:()=>ad,MusicgenModel:()=>Wc,MusicgenPreTrainedModel:()=>Zi,NomicBertModel:()=>dt,NomicBertPreTrainedModel:()=>nt,OPTForCausalLM:()=>Fl,OPTModel:()=>Il,OPTPreTrainedModel:()=>fi,OlmoForCausalLM:()=>ui,OlmoModel:()=>pl,OlmoPreTrainedModel:()=>li,OpenELMForCausalLM:()=>bl,OpenELMModel:()=>Ml,OpenELMPreTrainedModel:()=>yo,OwlViTForObjectDetection:()=>Yl,OwlViTModel:()=>Xl,OwlViTPreTrainedModel:()=>xi,Owlv2ForObjectDetection:()=>Zl,Owlv2Model:()=>Jl,Owlv2PreTrainedModel:()=>Ei,PatchTSMixerForPrediction:()=>yd,PatchTSMixerModel:()=>wd,PatchTSMixerPreTrainedModel:()=>la,PatchTSTForPrediction:()=>aa,PatchTSTModel:()=>Kc,PatchTSTPreTrainedModel:()=>ia,Phi3ForCausalLM:()=>Cl,Phi3Model:()=>Pl,Phi3PreTrainedModel:()=>ur,PhiForCausalLM:()=>El,PhiModel:()=>xc,PhiPreTrainedModel:()=>pi,PreTrainedModel:()=>le,PretrainedMixin:()=>vr,PvtForImageClassification:()=>Bl,PvtModel:()=>zl,PvtPreTrainedModel:()=>Gn,PyAnnoteForAudioFrameClassification:()=>Iu,PyAnnoteModel:()=>Ic,PyAnnotePreTrainedModel:()=>Io,QuestionAnsweringModelOutput:()=>ns,Qwen2ForCausalLM:()=>Tc,Qwen2Model:()=>vl,Qwen2PreTrainedModel:()=>ci,Qwen2VLForConditionalGeneration:()=>xl,Qwen2VLPreTrainedModel:()=>Tl,RTDetrForObjectDetection:()=>ou,RTDetrModel:()=>nu,RTDetrObjectDetectionOutput:()=>iu,RTDetrPreTrainedModel:()=>Ci,ResNetForImageClassification:()=>Cc,ResNetModel:()=>hu,ResNetPreTrainedModel:()=>Ai,RoFormerForMaskedLM:()=>_t,RoFormerForQuestionAnswering:()=>V,RoFormerForSequenceClassification:()=>A,RoFormerForTokenClassification:()=>ne,RoFormerModel:()=>ht,RoFormerPreTrainedModel:()=>gt,RobertaForMaskedLM:()=>qr,RobertaForQuestionAnswering:()=>Ut,RobertaForSequenceClassification:()=>ms,RobertaForTokenClassification:()=>Ps,RobertaModel:()=>wr,RobertaPreTrainedModel:()=>De,SamImageSegmentationOutput:()=>Cu,SamModel:()=>Ao,SamPreTrainedModel:()=>Pu,SapiensForDepthEstimation:()=>Fi,SapiensForNormalEstimation:()=>_u,SapiensForSemanticSegmentation:()=>Po,SapiensPreTrainedModel:()=>Eo,SegformerForImageClassification:()=>sd,SegformerForSemanticSegmentation:()=>Uc,SegformerModel:()=>Nc,SegformerPreTrainedModel:()=>zo,Seq2SeqLMOutput:()=>np,SequenceClassifierOutput:()=>tr,SiglipModel:()=>Ua,SiglipPreTrainedModel:()=>ei,SiglipTextModel:()=>Va,SiglipVisionModel:()=>Wa,SpeechT5ForSpeechToText:()=>Gi,SpeechT5ForTextToSpeech:()=>qu,SpeechT5HifiGan:()=>Qu,SpeechT5Model:()=>Lc,SpeechT5PreTrainedModel:()=>Do,SqueezeBertForMaskedLM:()=>xn,SqueezeBertForQuestionAnswering:()=>Pn,SqueezeBertForSequenceClassification:()=>En,SqueezeBertModel:()=>dn,SqueezeBertPreTrainedModel:()=>Ns,StableLmForCausalLM:()=>od,StableLmModel:()=>nd,StableLmPreTrainedModel:()=>Yi,Starcoder2ForCausalLM:()=>Bc,Starcoder2Model:()=>Ju,Starcoder2PreTrainedModel:()=>qi,Swin2SRForImageSuperResolution:()=>rs,Swin2SRModel:()=>on,Swin2SRPreTrainedModel:()=>vo,SwinForImageClassification:()=>nn,SwinModel:()=>sn,SwinPreTrainedModel:()=>Vs,T5ForConditionalGeneration:()=>Sn,T5Model:()=>Un,T5PreTrainedModel:()=>$n,TableTransformerForObjectDetection:()=>lu,TableTransformerModel:()=>au,TableTransformerObjectDetectionOutput:()=>uu,TableTransformerPreTrainedModel:()=>$i,TokenClassifierOutput:()=>Yr,TrOCRForCausalLM:()=>zc,TrOCRPreTrainedModel:()=>Xu,UniSpeechForCTC:()=>Lu,UniSpeechForSequenceClassification:()=>zu,UniSpeechModel:()=>Du,UniSpeechPreTrainedModel:()=>qn,UniSpeechSatForAudioFrameClassification:()=>ju,UniSpeechSatForCTC:()=>Ru,UniSpeechSatForSequenceClassification:()=>Fc,UniSpeechSatModel:()=>Bu,UniSpeechSatPreTrainedModel:()=>Qn,ViTForImageClassification:()=>Dl,ViTMAEModel:()=>jl,ViTMAEPreTrainedModel:()=>Rl,ViTMSNForImageClassification:()=>Ul,ViTMSNModel:()=>Nl,ViTMSNPreTrainedModel:()=>gi,ViTModel:()=>Ol,ViTPreTrainedModel:()=>_i,VisionEncoderDecoderModel:()=>Jo,VitMatteForImageMatting:()=>ql,VitMattePreTrainedModel:()=>Hl,VitPoseForPoseEstimation:()=>Ll,VitPosePreTrainedModel:()=>Wn,VitsModel:()=>Xi,VitsModelOutput:()=>dc,VitsPreTrainedModel:()=>jc,Wav2Vec2BertForCTC:()=>Oc,Wav2Vec2BertForSequenceClassification:()=>Uu,Wav2Vec2BertModel:()=>Nu,Wav2Vec2BertPreTrainedModel:()=>Fo,Wav2Vec2ForAudioFrameClassification:()=>Au,Wav2Vec2ForCTC:()=>ku,Wav2Vec2ForSequenceClassification:()=>Ac,Wav2Vec2Model:()=>Su,Wav2Vec2PreTrainedModel:()=>pn,WavLMForAudioFrameClassification:()=>Hu,WavLMForCTC:()=>Yn,WavLMForSequenceClassification:()=>Wi,WavLMForXVector:()=>Ku,WavLMModel:()=>Oo,WavLMPreTrainedModel:()=>Xn,WeSpeakerResNetModel:()=>Ou,WeSpeakerResNetPreTrainedModel:()=>Fu,WhisperForConditionalGeneration:()=>er,WhisperModel:()=>Vn,WhisperPreTrainedModel:()=>Yo,XLMForQuestionAnswering:()=>Zt,XLMForSequenceClassification:()=>yr,XLMForTokenClassification:()=>wt,XLMModel:()=>us,XLMPreTrainedModel:()=>Rr,XLMRobertaForMaskedLM:()=>Fs,XLMRobertaForQuestionAnswering:()=>Ze,XLMRobertaForSequenceClassification:()=>St,XLMRobertaForTokenClassification:()=>po,XLMRobertaModel:()=>Is,XLMRobertaPreTrainedModel:()=>Dr,XLMWithLMHeadModel:()=>or,XVectorOutput:()=>lc,YolosForObjectDetection:()=>xu,YolosModel:()=>Tu,YolosObjectDetectionOutput:()=>Eu,YolosPreTrainedModel:()=>ko});var w=c("./src/configs.js"),D=c("./src/backends/onnx.js"),G=c("./src/utils/dtypes.js"),re=c("./src/utils/generic.js"),Q=c("./src/utils/core.js"),g=c("./src/utils/hub.js"),v=c("./src/utils/constants.js"),b=c("./src/generation/logits_process.js"),y=c("./src/generation/configuration_utils.js"),C=c("./src/utils/tensor.js"),q=c("./src/utils/image.js"),J=c("./src/utils/maths.js"),ie=c("./src/generation/stopping_criteria.js"),fe=c("./src/generation/logits_sampler.js"),j=c("./src/env.js"),X=c("./src/models/whisper/generation_whisper.js"),Z=c("./src/models/whisper/common_whisper.js");const N={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8},I=new Map,_=new Map,k=new Map;async function E(f,S,L){var $r;const ve=(($r=L.config)==null?void 0:$r["transformers.js_config"])??{};let Ie=L.device??ve.device;Ie&&typeof Ie!="string"&&(Ie.hasOwnProperty(S)?Ie=Ie[S]:(console.warn(`device not specified for "${S}". Using the default device.`),Ie=null));const Se=Ie??(j.apis.IS_NODE_ENV?"cpu":"wasm"),Xe=(0,D.deviceToExecutionProviders)(Se);let tt=L.dtype??ve.dtype;if(typeof tt!="string"&&(tt&&tt.hasOwnProperty(S)?tt=tt[S]:(tt=G.DEFAULT_DEVICE_DTYPE_MAPPING[Se]??G.DATA_TYPES.fp32,console.warn(`dtype not specified for "${S}". Using the default dtype (${tt}) for this device (${Se}).`))),tt===G.DATA_TYPES.auto){let pr=ve.dtype;typeof pr!="string"&&(pr=pr[S]),pr&&pr!==G.DATA_TYPES.auto&&G.DATA_TYPES.hasOwnProperty(pr)?tt=pr:tt=G.DEFAULT_DEVICE_DTYPE_MAPPING[Se]??G.DATA_TYPES.fp32}const ft=tt;if(G.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(ft)){if(ft===G.DATA_TYPES.fp16&&Se==="webgpu"&&!await(0,G.isWebGpuFp16Supported)())throw new Error(`The device (${Se}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${ft}. Should be one of: ${Object.keys(G.DATA_TYPES).join(", ")}`);const bt=ve.kv_cache_dtype?typeof ve.kv_cache_dtype=="string"?ve.kv_cache_dtype:ve.kv_cache_dtype[ft]??"float32":void 0;if(bt&&!["float32","float16"].includes(bt))throw new Error(`Invalid kv_cache_dtype: ${bt}. Should be one of: float32, float16`);const Ht={dtype:ft,kv_cache_dtype:bt},jt=G.DEFAULT_DTYPE_SUFFIX_MAPPING[ft],Lt=`${L.subfolder??""}/${S}${jt}.onnx`,Gt={...L.session_options};Gt.executionProviders??(Gt.executionProviders=Xe);const sr=ve.free_dimension_overrides;sr?Gt.freeDimensionOverrides??(Gt.freeDimensionOverrides=sr):Se.startsWith("webnn")&&!Gt.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const ir=(0,g.getModelFile)(f,Lt,!0,L),Xt=L.use_external_data_format??ve.use_external_data_format;let dr=[];if(Xt&&(Xt===!0||typeof Xt=="object"&&Xt.hasOwnProperty(S)&&Xt[S]===!0)){if(j.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const pr=`${S}${jt}.onnx_data`,kr=`${L.subfolder??""}/${pr}`;dr.push(new Promise(async(Lr,os)=>{const Kr=await(0,g.getModelFile)(f,kr,!0,L);Lr({path:pr,data:Kr})}))}else Gt.externalData!==void 0&&(dr=Gt.externalData.map(async pr=>{if(typeof pr.data=="string"){const kr=await(0,g.getModelFile)(f,pr.data,!0,L);return{...pr,data:kr}}return pr}));if(dr.length>0&&(Gt.externalData=await Promise.all(dr)),Se==="webgpu"){const pr=(0,w.getKeyValueShapes)(L.config,{prefix:"present"});if(Object.keys(pr).length>0&&!(0,D.isONNXProxy)()){const kr={};for(const Lr in pr)kr[Lr]="gpu-buffer";Gt.preferredOutputLocation=kr}}return{buffer:await ir,session_options:Gt,session_config:Ht}}async function ee(f,S,L){return Object.fromEntries(await Promise.all(Object.keys(S).map(async ve=>{const{buffer:Ie,session_options:Se,session_config:Xe}=await E(f,S[ve],L),tt=await(0,D.createInferenceSession)(Ie,Se,Xe);return[ve,tt]})))}async function Y(f,S,L){return Object.fromEntries(await Promise.all(Object.keys(S).map(async ve=>{const Ie=await(0,g.getModelJSON)(f,S[ve],!1,L);return[ve,Ie]})))}function de(f,S){const L=Object.create(null),ve=[];for(const Xe of f.inputNames){const tt=S[Xe];if(!(tt instanceof C.Tensor)){ve.push(Xe);continue}L[Xe]=(0,D.isONNXProxy)()?tt.clone():tt}if(ve.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${ve.join(", ")}.`);const Ie=Object.keys(S).length,Se=f.inputNames.length;if(Ie>Se){let Xe=Object.keys(S).filter(tt=>!f.inputNames.includes(tt));console.warn(`WARNING: Too many inputs were provided (${Ie} > ${Se}). The following inputs will be ignored: "${Xe.join(", ")}".`)}return L}async function me(f,S){const L=de(f,S);try{const ve=Object.fromEntries(Object.entries(L).map(([Se,Xe])=>[Se,Xe.ort_tensor]));let Ie=await f.run(ve);return Ie=ye(Ie),Ie}catch(ve){const Ie=Object.fromEntries(Object.entries(L).map(([Se,{type:Xe,dims:tt,data:ft}])=>[Se,{type:Xe,dims:tt,data:ft}]));throw console.error(`An error occurred during model execution: "${ve}".`),console.error("Inputs given to model:",Ie),ve}}function ye(f){for(let S in f)(0,D.isONNXTensor)(f[S])?f[S]=new C.Tensor(f[S]):typeof f[S]=="object"&&ye(f[S]);return f}function Ce(f){if(f instanceof C.Tensor)return f;if(f.length===0)throw Error("items must be non-empty");if(Array.isArray(f[0])){if(f.some(S=>S.length!==f[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new C.Tensor("int64",BigInt64Array.from(f.flat().map(S=>BigInt(S))),[f.length,f[0].length])}else return new C.Tensor("int64",BigInt64Array.from(f.map(S=>BigInt(S))),[1,f.length])}function Ee(f){return new C.Tensor("bool",[f],[1])}async function Le(f,S){let{encoder_outputs:L,input_ids:ve,decoder_input_ids:Ie,...Se}=S;if(!L){const tt=(0,Q.pick)(S,f.sessions.model.inputNames);L=(await _e(f,tt)).last_hidden_state}return Se.input_ids=Ie,Se.encoder_hidden_states=L,f.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(Se.encoder_attention_mask=S.attention_mask),await U(f,Se,!0)}async function _e(f,S){const L=f.sessions.model,ve=(0,Q.pick)(S,L.inputNames);if(L.inputNames.includes("inputs_embeds")&&!ve.inputs_embeds){if(!S.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");ve.inputs_embeds=await f.encode_text({input_ids:S.input_ids})}return L.inputNames.includes("token_type_ids")&&!ve.token_type_ids&&(ve.token_type_ids=new C.Tensor("int64",new BigInt64Array(ve.input_ids.data.length),ve.input_ids.dims)),await me(L,ve)}async function U(f,S,L=!1){const ve=f.sessions[L?"decoder_model_merged":"model"],{past_key_values:Ie,...Se}=S;ve.inputNames.includes("use_cache_branch")&&(Se.use_cache_branch=Ee(!!Ie)),ve.inputNames.includes("position_ids")&&Se.attention_mask&&!Se.position_ids&&(Se.position_ids=Re(Se,Ie)),f.addPastKeyValues(Se,Ie);const Xe=(0,Q.pick)(Se,ve.inputNames);return await me(ve,Xe)}function ce({image_token_id:f,inputs_embeds:S,image_features:L,input_ids:ve,attention_mask:Ie}){const Se=ve.tolist().map(bt=>bt.reduce((Ht,jt,Lt)=>(jt==f&&Ht.push(Lt),Ht),[])),Xe=Se.reduce((bt,Ht)=>bt+Ht.length,0),tt=L.dims[0];if(Xe!==tt)throw new Error(`Image features and image tokens do not match: tokens: ${Xe}, features ${tt}`);let ft=0;for(let bt=0;bt<Se.length;++bt){const Ht=Se[bt],jt=S[bt];for(let Lt=0;Lt<Ht.length;++Lt)jt[Ht[Lt]].data.set(L[ft++].data)}return{inputs_embeds:S,attention_mask:Ie}}async function he(f,{input_ids:S=null,attention_mask:L=null,pixel_values:ve=null,position_ids:Ie=null,inputs_embeds:Se=null,past_key_values:Xe=null,generation_config:tt=null,logits_processor:ft=null,...bt}){if(!Se){if(Se=await f.encode_text({input_ids:S,...bt}),ve&&S.dims[1]!==1){const jt=await f.encode_image({pixel_values:ve,...bt});({inputs_embeds:Se,attention_mask:L}=f._merge_input_ids_with_image_features({image_features:jt,inputs_embeds:Se,input_ids:S,attention_mask:L}))}else if(Xe&&ve&&S.dims[1]===1){const jt=S.dims[1],Lt=Object.values(Xe)[0].dims.at(-2);L=(0,C.cat)([(0,C.ones)([S.dims[0],Lt]),L.slice(null,[L.dims[1]-jt,L.dims[1]])],1)}}if(!Ie&&f.config.model_type==="qwen2_vl"){const{image_grid_thw:jt,video_grid_thw:Lt}=bt;[Ie]=f.get_rope_index(S,jt,Lt,L)}return await U(f,{inputs_embeds:Se,past_key_values:Xe,attention_mask:L,position_ids:Ie,generation_config:tt,logits_processor:ft},!0)}function ke(f){const[S,L]=f.dims,ve=f.data,Ie=new BigInt64Array(ve.length);for(let Se=0;Se<S;++Se){const Xe=Se*L;let tt=BigInt(0);for(let ft=0;ft<L;++ft){const bt=Xe+ft;ve[bt]===0n?Ie[bt]=BigInt(1):(Ie[bt]=tt,tt+=ve[bt])}}return{data:Ie,dims:f.dims}}function Re(f,S=null){const{input_ids:L,inputs_embeds:ve,attention_mask:Ie}=f,{data:Se,dims:Xe}=ke(Ie);let tt=new C.Tensor("int64",Se,Xe);if(S){const ft=-(L??ve).dims.at(1);tt=tt.slice(null,[ft,null])}return tt}function Ke(f,S,L,ve){if(L.past_key_values){const Ie=Object.values(L.past_key_values)[0].dims.at(-2),{input_ids:Se,attention_mask:Xe}=L;if(!(Xe&&Xe.dims[1]>Se.dims[1])){if(Ie<Se.dims[1])L.input_ids=Se.slice(null,[Ie,null]);else if(f.config.image_token_index!=null&&Se.data.some(tt=>tt==f.config.image_token_index)){const tt=f.config.num_image_tokens;if(!tt)throw new Error("`num_image_tokens` is missing in the model configuration.");const ft=Se.dims[1]-(Ie-tt);L.input_ids=Se.slice(null,[-ft,null]),L.attention_mask=(0,C.ones)([1,Ie+ft])}}}return L}function Ye(f,S,L,ve){return L.past_key_values&&(S=S.map(Ie=>[Ie.at(-1)])),{...L,decoder_input_ids:Ce(S)}}function at(f,...S){return f.config.is_encoder_decoder?Ye(f,...S):Ke(f,...S)}function We(f,S,L,ve){const Ie=!!L.past_key_values;return ve.guidance_scale!==null&&ve.guidance_scale>1&&(Ie?L.input_ids=(0,C.cat)([L.input_ids,L.input_ids],0):(L.input_ids=(0,C.cat)([L.input_ids,(0,C.full_like)(L.input_ids,BigInt(ve.pad_token_id))],0),L.attention_mask=(0,C.cat)([L.attention_mask,(0,C.full_like)(L.attention_mask,0n)],0))),(Ie||!L.pixel_values)&&(L.pixel_values=(0,C.full)([0,0,3,384,384],1)),Ie&&(L.images_seq_mask=new C.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),L.images_emb_mask=new C.Tensor("bool",new Array(0).fill(!1),[1,1,0])),L}class le extends re.Callable{constructor(L,ve,Ie){super();Te(this,"main_input_name","input_ids");Te(this,"forward_params",["input_ids","attention_mask"]);this.config=L,this.sessions=ve,this.configs=Ie;const Se=k.get(this.constructor),Xe=I.get(Se);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,Xe){case N.DecoderOnly:this.can_generate=!0,this._forward=U,this._prepare_inputs_for_generation=Ke;break;case N.Seq2Seq:case N.Vision2Seq:case N.Musicgen:this.can_generate=!0,this._forward=Le,this._prepare_inputs_for_generation=Ye;break;case N.EncoderDecoder:this._forward=Le;break;case N.ImageTextToText:this.can_generate=!0,this._forward=he,this._prepare_inputs_for_generation=at;break;case N.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=We;break;default:this._forward=_e;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var ve;const L=[];for(const Ie of Object.values(this.sessions))(ve=Ie==null?void 0:Ie.handler)!=null&&ve.dispose&&L.push(Ie.handler.dispose());return await Promise.all(L)}static async from_pretrained(L,{progress_callback:ve=null,config:Ie=null,cache_dir:Se=null,local_files_only:Xe=!1,revision:tt="main",model_file_name:ft=null,subfolder:bt="onnx",device:Ht=null,dtype:jt=null,use_external_data_format:Lt=null,session_options:Gt={}}={}){let sr={progress_callback:ve,config:Ie,cache_dir:Se,local_files_only:Xe,revision:tt,model_file_name:ft,subfolder:bt,device:Ht,dtype:jt,use_external_data_format:Lt,session_options:Gt};const ir=k.get(this),Xt=I.get(ir);Ie=sr.config=await w.AutoConfig.from_pretrained(L,sr);let dr;if(Xt===N.DecoderOnly)dr=await Promise.all([ee(L,{model:sr.model_file_name??"model"},sr),Y(L,{generation_config:"generation_config.json"},sr)]);else if(Xt===N.Seq2Seq||Xt===N.Vision2Seq)dr=await Promise.all([ee(L,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},sr),Y(L,{generation_config:"generation_config.json"},sr)]);else if(Xt===N.MaskGeneration)dr=await Promise.all([ee(L,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},sr)]);else if(Xt===N.EncoderDecoder)dr=await Promise.all([ee(L,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},sr)]);else if(Xt===N.ImageTextToText){const Or={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};Ie.is_encoder_decoder&&(Or.model="encoder_model"),dr=await Promise.all([ee(L,Or,sr),Y(L,{generation_config:"generation_config.json"},sr)])}else if(Xt===N.Musicgen)dr=await Promise.all([ee(L,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},sr),Y(L,{generation_config:"generation_config.json"},sr)]);else if(Xt===N.MultiModality)dr=await Promise.all([ee(L,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},sr),Y(L,{generation_config:"generation_config.json"},sr)]);else{if(Xt!==N.EncoderOnly){const Or=ir??(Ie==null?void 0:Ie.model_type);Or!=="custom"&&console.warn(`Model type for '${Or}' not found, assuming encoder-only architecture. Please report this at ${v.GITHUB_ISSUE_URL}.`)}dr=await Promise.all([ee(L,{model:sr.model_file_name??"model"},sr)])}return new this(Ie,...dr)}async _call(L){return await this.forward(L)}async forward(L){return await this._forward(this,L)}get generation_config(){var L;return((L=this.configs)==null?void 0:L.generation_config)??null}_get_logits_warper(L){const ve=new b.LogitsProcessorList;return L.temperature!==null&&L.temperature!==1&&ve.push(new b.TemperatureLogitsWarper(L.temperature)),L.top_k!==null&&L.top_k!==0&&ve.push(new b.TopKLogitsWarper(L.top_k)),L.top_p!==null&&L.top_p<1&&ve.push(new b.TopPLogitsWarper(L.top_p)),ve}_get_logits_processor(L,ve,Ie=null){const Se=new b.LogitsProcessorList;if(L.repetition_penalty!==null&&L.repetition_penalty!==1&&Se.push(new b.RepetitionPenaltyLogitsProcessor(L.repetition_penalty)),L.no_repeat_ngram_size!==null&&L.no_repeat_ngram_size>0&&Se.push(new b.NoRepeatNGramLogitsProcessor(L.no_repeat_ngram_size)),L.bad_words_ids!==null&&Se.push(new b.NoBadWordsLogitsProcessor(L.bad_words_ids,L.eos_token_id)),L.min_length!==null&&L.eos_token_id!==null&&L.min_length>0&&Se.push(new b.MinLengthLogitsProcessor(L.min_length,L.eos_token_id)),L.min_new_tokens!==null&&L.eos_token_id!==null&&L.min_new_tokens>0&&Se.push(new b.MinNewTokensLengthLogitsProcessor(ve,L.min_new_tokens,L.eos_token_id)),L.forced_bos_token_id!==null&&Se.push(new b.ForcedBOSTokenLogitsProcessor(L.forced_bos_token_id)),L.forced_eos_token_id!==null&&Se.push(new b.ForcedEOSTokenLogitsProcessor(L.max_length,L.forced_eos_token_id)),L.begin_suppress_tokens!==null){const Xe=ve>1||L.forced_bos_token_id===null?ve:ve+1;Se.push(new b.SuppressTokensAtBeginLogitsProcessor(L.begin_suppress_tokens,Xe))}return L.guidance_scale!==null&&L.guidance_scale>1&&Se.push(new b.ClassifierFreeGuidanceLogitsProcessor(L.guidance_scale)),Ie!==null&&Se.extend(Ie),Se}_prepare_generation_config(L,ve,Ie=y.GenerationConfig){const Se={...this.config};for(const tt of["decoder","generator","text_config"])tt in Se&&Object.assign(Se,Se[tt]);const Xe=new Ie(Se);return Object.assign(Xe,this.generation_config??{}),L&&Object.assign(Xe,L),ve&&Object.assign(Xe,(0,Q.pick)(ve,Object.getOwnPropertyNames(Xe))),Xe}_get_stopping_criteria(L,ve=null){const Ie=new ie.StoppingCriteriaList;return L.max_length!==null&&Ie.push(new ie.MaxLengthCriteria(L.max_length,this.config.max_position_embeddings??null)),L.eos_token_id!==null&&Ie.push(new ie.EosTokenCriteria(L.eos_token_id)),ve&&Ie.extend(ve),Ie}_validate_model_class(){if(!this.can_generate){const L=[Ed,da,ua,Md],ve=k.get(this.constructor),Ie=new Set,Se=this.config.model_type;for(const tt of L){const ft=tt.get(Se);ft&&Ie.add(ft[0])}let Xe=`The current model class (${ve}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw Ie.size>0&&(Xe+=` Please use the following class instead: ${[...Ie].join(", ")}`),Error(Xe)}}prepare_inputs_for_generation(...L){return this._prepare_inputs_for_generation(this,...L)}_update_model_kwargs_for_generation({generated_input_ids:L,outputs:ve,model_inputs:Ie,is_encoder_decoder:Se}){return Ie.past_key_values=this.getPastKeyValues(ve,Ie.past_key_values),Ie.input_ids=new C.Tensor("int64",L.flat(),[L.length,1]),Se||(Ie.attention_mask=(0,C.cat)([Ie.attention_mask,(0,C.ones)([Ie.attention_mask.dims[0],1])],1)),Ie.position_ids=null,Ie}_prepare_model_inputs({inputs:L,bos_token_id:ve,model_kwargs:Ie}){const Se=(0,Q.pick)(Ie,this.forward_params),Xe=this.main_input_name;if(Xe in Se){if(L)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else Se[Xe]=L;return{inputs_tensor:Se[Xe],model_inputs:Se,model_input_name:Xe}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:L,model_inputs:ve,model_input_name:Ie,generation_config:Se}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!ve.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:tt,pixel_values:ft,attention_mask:bt,...Ht}=ve,jt=await this._prepare_inputs_embeds(ve);ve={...Ht,...(0,Q.pick)(jt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:Xe}=await _e(this,ve);if(Se.guidance_scale!==null&&Se.guidance_scale>1)Xe=(0,C.cat)([Xe,(0,C.full_like)(Xe,0)],0),"attention_mask"in ve&&(ve.attention_mask=(0,C.cat)([ve.attention_mask,(0,C.zeros_like)(ve.attention_mask)],0));else if(ve.decoder_input_ids){const tt=Ce(ve.decoder_input_ids).dims[0];if(tt!==Xe.dims[0]){if(Xe.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${Xe.dims[0]}) than the decoder inputs (${tt}).`);Xe=(0,C.cat)(Array.from({length:tt},()=>Xe),0)}}return ve.encoder_outputs=Xe,ve}_prepare_decoder_input_ids_for_generation({batch_size:L,model_input_name:ve,model_kwargs:Ie,decoder_start_token_id:Se,bos_token_id:Xe,generation_config:tt}){let{decoder_input_ids:ft,...bt}=Ie;if(!(ft instanceof C.Tensor)){if(ft)Array.isArray(ft[0])||(ft=Array.from({length:L},()=>ft));else if(Se??(Se=Xe),this.config.model_type==="musicgen")ft=Array.from({length:L*this.config.decoder.num_codebooks},()=>[Se]);else if(Array.isArray(Se)){if(Se.length!==L)throw new Error(`\`decoder_start_token_id\` expcted to have length ${L} but got ${Se.length}`);ft=Se}else ft=Array.from({length:L},()=>[Se]);ft=Ce(ft)}return Ie.decoder_attention_mask=(0,C.ones_like)(ft),{input_ids:ft,model_inputs:bt}}async generate({inputs:L=null,generation_config:ve=null,logits_processor:Ie=null,stopping_criteria:Se=null,streamer:Xe=null,...tt}){this._validate_model_class(),ve=this._prepare_generation_config(ve,tt);let{inputs_tensor:ft,model_inputs:bt,model_input_name:Ht}=this._prepare_model_inputs({inputs:L,model_kwargs:tt});const jt=this.config.is_encoder_decoder;jt&&("encoder_outputs"in bt||(bt=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:ft,model_inputs:bt,model_input_name:Ht,generation_config:ve})));let Lt;jt?{input_ids:Lt,model_inputs:bt}=this._prepare_decoder_input_ids_for_generation({batch_size:bt[Ht].dims.at(0),model_input_name:Ht,model_kwargs:bt,decoder_start_token_id:ve.decoder_start_token_id,bos_token_id:ve.bos_token_id,generation_config:ve}):Lt=bt[Ht];let Gt=Lt.dims.at(-1);ve.max_new_tokens!==null&&(ve.max_length=Gt+ve.max_new_tokens);const sr=this._get_logits_processor(ve,Gt,Ie),ir=this._get_stopping_criteria(ve,Se),Xt=bt[Ht].dims.at(0),dr=fe.LogitsSampler.getSampler(ve),Or=new Array(Xt).fill(0),$r=Lt.tolist();Xe&&Xe.put($r);let pr,kr={};for(;;){if(bt=this.prepare_inputs_for_generation($r,bt,ve),pr=await this.forward(bt),ve.output_attentions&&ve.return_dict_in_generate){const _s=this.getAttentions(pr);for(const Ws in _s)Ws in kr||(kr[Ws]=[]),kr[Ws].push(_s[Ws])}const Kr=pr.logits.slice(null,-1,null),Ss=sr($r,Kr),In=[];for(let _s=0;_s<Ss.dims.at(0);++_s){const Ws=Ss[_s],Ma=await dr(Ws);for(const[ba,Ro]of Ma){const jo=BigInt(ba);Or[_s]+=Ro,$r[_s].push(jo),In.push([jo]);break}}if(Xe&&Xe.put(In),ir($r).every(_s=>_s))break;bt=this._update_model_kwargs_for_generation({generated_input_ids:In,outputs:pr,model_inputs:bt,is_encoder_decoder:jt})}Xe&&Xe.end();const Lr=this.getPastKeyValues(pr,bt.past_key_values,!0),os=new C.Tensor("int64",$r.flat(),[$r.length,$r[0].length]);if(ve.return_dict_in_generate)return{sequences:os,past_key_values:Lr,...kr};for(const Kr of Object.values(pr))Kr.location==="gpu-buffer"&&Kr.dispose();return os}getPastKeyValues(L,ve,Ie=!1){const Se=Object.create(null);for(const Xe in L)if(Xe.startsWith("present")){const tt=Xe.replace("present","past_key_values"),ft=Xe.includes("encoder");if(ft&&ve?Se[tt]=ve[tt]:Se[tt]=L[Xe],ve&&(!ft||Ie)){const bt=ve[tt];bt.location==="gpu-buffer"&&bt.dispose()}}return Se}getAttentions(L){const ve={};for(const Ie of["cross_attentions","encoder_attentions","decoder_attentions"])for(const Se in L)Se.startsWith(Ie)&&(Ie in ve||(ve[Ie]=[]),ve[Ie].push(L[Se]));return ve}addPastKeyValues(L,ve){var Ie,Se,Xe;if(ve)Object.assign(L,ve);else{const tt=this.sessions.decoder_model_merged??this.sessions.model,ft=((Ie=tt==null?void 0:tt.config)==null?void 0:Ie.kv_cache_dtype)??"float32",bt=ft==="float16"?new Uint16Array:[],Ht=((Xe=(Se=L[this.main_input_name]??L.attention_mask)==null?void 0:Se.dims)==null?void 0:Xe[0])??1,jt=(0,w.getKeyValueShapes)(this.config,{batch_size:Ht});for(const Lt in jt)L[Lt]=new C.Tensor(ft,bt,jt[Lt])}}async encode_image({pixel_values:L}){const ve=(await me(this.sessions.vision_encoder,{pixel_values:L})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${ve.dims[1]}).`),this.config.num_image_tokens=ve.dims[1]),ve}async encode_text({input_ids:L}){return(await me(this.sessions.embed_tokens,{input_ids:L})).inputs_embeds}}class He{}class je extends He{constructor({last_hidden_state:S,hidden_states:L=null,attentions:ve=null}){super(),this.last_hidden_state=S,this.hidden_states=L,this.attentions=ve}}class we extends le{}class $e extends we{}class et extends we{async _call(S){return new Jr(await super._call(S))}}class Qe extends we{async _call(S){return new tr(await super._call(S))}}class qe extends we{async _call(S){return new Yr(await super._call(S))}}class ze extends we{async _call(S){return new ns(await super._call(S))}}class nt extends le{}class dt extends nt{}class gt extends le{}class ht extends gt{}class _t extends gt{async _call(S){return new Jr(await super._call(S))}}class A extends gt{async _call(S){return new tr(await super._call(S))}}class ne extends gt{async _call(S){return new Yr(await super._call(S))}}class V extends gt{async _call(S){return new ns(await super._call(S))}}class ue extends le{}class Ae extends ue{}class Je extends ue{async _call(S){return new Jr(await super._call(S))}}class ot extends ue{async _call(S){return new tr(await super._call(S))}}class ut extends ue{async _call(S){return new Yr(await super._call(S))}}class At extends ue{async _call(S){return new ns(await super._call(S))}}class xt extends le{}class Et extends xt{}class Ct extends xt{async _call(S){return new Jr(await super._call(S))}}class ar extends xt{async _call(S){return new tr(await super._call(S))}}class Mr extends xt{async _call(S){return new Yr(await super._call(S))}}class Nr extends xt{async _call(S){return new ns(await super._call(S))}}class Fr extends le{}class as extends Fr{}class qs extends Fr{async _call(S){return new Jr(await super._call(S))}}class Qs extends Fr{async _call(S){return new tr(await super._call(S))}}class Ds extends Fr{async _call(S){return new Yr(await super._call(S))}}class vn extends Fr{async _call(S){return new ns(await super._call(S))}}class Dt extends le{}class Ts extends Dt{}class Ls extends Dt{async _call(S){return new Jr(await super._call(S))}}class Xs extends Dt{async _call(S){return new tr(await super._call(S))}}class un extends Dt{async _call(S){return new Yr(await super._call(S))}}class Ys extends Dt{async _call(S){return new ns(await super._call(S))}}class xs extends le{}class Js extends xs{}class Zs extends xs{async _call(S){return new Jr(await super._call(S))}}class zs extends xs{async _call(S){return new tr(await super._call(S))}}class ps extends xs{async _call(S){return new Yr(await super._call(S))}}class it extends xs{async _call(S){return new ns(await super._call(S))}}class Mt extends le{}class It extends Mt{}class Wr extends Mt{async _call(S){return new tr(await super._call(S))}}class en extends Mt{async _call(S){return new Yr(await super._call(S))}}class Bs extends Mt{async _call(S){return new ns(await super._call(S))}}class Sr extends Mt{async _call(S){return new Jr(await super._call(S))}}class ts extends le{}class Br extends ts{}class As extends ts{async _call(S){return new Jr(await super._call(S))}}class br extends ts{async _call(S){return new tr(await super._call(S))}}class Tn extends ts{async _call(S){return new Yr(await super._call(S))}}class tn extends le{}class uo extends tn{}class Dn extends tn{async _call(S){return new Jr(await super._call(S))}}class Ln extends tn{async _call(S){return new tr(await super._call(S))}}class zn extends tn{async _call(S){return new ns(await super._call(S))}}class Rs extends le{}class Bn extends Rs{}class co extends Rs{async _call(S){return new Jr(await super._call(S))}}class rn extends Rs{async _call(S){return new tr(await super._call(S))}}class Es extends Rs{async _call(S){return new Yr(await super._call(S))}}class js extends Rs{async _call(S){return new ns(await super._call(S))}}class Ns extends le{}class dn extends Ns{}class xn extends Ns{async _call(S){return new Jr(await super._call(S))}}class En extends Ns{async _call(S){return new tr(await super._call(S))}}class Pn extends Ns{async _call(S){return new ns(await super._call(S))}}class Ot extends le{}class Cn extends Ot{}class Rn extends Ot{async _call(S){return new tr(await super._call(S))}}class jn extends Ot{async _call(S){return new ns(await super._call(S))}}class Nn extends Ot{async _call(S){return new Jr(await super._call(S))}}class $n extends le{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Un extends $n{}class Sn extends $n{}class kn extends le{}class _r extends kn{}class xe extends kn{}class T extends le{}class K extends T{}class oe extends T{}class Me extends le{}class Pe extends Me{}class Ue extends Me{}class lt extends Me{async _call(S){return new tr(await super._call(S))}}class mt extends le{}class pt extends mt{}class Tt extends mt{}class Wt extends mt{async _call(S){return new tr(await super._call(S))}}class gr extends mt{}class Jt extends le{}class Cr extends Jt{}class qt extends Jt{}class lr extends le{}class hs extends lr{}class Gr extends lr{}class De extends le{}class wr extends De{}class qr extends De{async _call(S){return new Jr(await super._call(S))}}class ms extends De{async _call(S){return new tr(await super._call(S))}}class Ps extends De{async _call(S){return new Yr(await super._call(S))}}class Ut extends De{async _call(S){return new ns(await super._call(S))}}class Rr extends le{}class us extends Rr{}class or extends Rr{async _call(S){return new Jr(await super._call(S))}}class yr extends Rr{async _call(S){return new tr(await super._call(S))}}class wt extends Rr{async _call(S){return new Yr(await super._call(S))}}class Zt extends Rr{async _call(S){return new ns(await super._call(S))}}class Dr extends le{}class Is extends Dr{}class Fs extends Dr{async _call(S){return new Jr(await super._call(S))}}class St extends Dr{async _call(S){return new tr(await super._call(S))}}class po extends Dr{async _call(S){return new Yr(await super._call(S))}}class Ze extends Dr{async _call(S){return new ns(await super._call(S))}}class kt extends le{}class Xo extends kt{}class Oa extends kt{}class Yo extends le{constructor(){super(...arguments);Te(this,"requires_attention_mask",!1);Te(this,"main_input_name","input_features");Te(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Vn extends Yo{}class er extends Yo{_prepare_generation_config(S,L){return super._prepare_generation_config(S,L,X.WhisperGenerationConfig)}_retrieve_init_tokens(S){const L=[S.decoder_start_token_id];let ve=S.language;const Ie=S.task;if(S.is_multilingual){ve||(console.warn("No language specified - defaulting to English (en)."),ve="en");const Xe=`<|${(0,Z.whisper_language_to_code)(ve)}|>`;L.push(S.lang_to_id[Xe]),L.push(S.task_to_id[Ie??"transcribe"])}else if(ve||Ie)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!S.return_timestamps&&S.no_timestamps_token_id&&L.at(-1)!==S.no_timestamps_token_id?L.push(S.no_timestamps_token_id):S.return_timestamps&&L.at(-1)===S.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),L.pop()),L.filter(Se=>Se!=null)}async generate({inputs:S=null,generation_config:L=null,logits_processor:ve=null,stopping_criteria:Ie=null,...Se}){L=this._prepare_generation_config(L,Se);const Xe=Se.decoder_input_ids??this._retrieve_init_tokens(L);if(L.return_timestamps&&(ve??(ve=new b.LogitsProcessorList),ve.push(new b.WhisperTimeStampLogitsProcessor(L,Xe))),L.begin_suppress_tokens&&(ve??(ve=new b.LogitsProcessorList),ve.push(new b.SuppressTokensAtBeginLogitsProcessor(L.begin_suppress_tokens,Xe.length))),L.return_token_timestamps){if(!L.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");L.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),L.output_attentions=!0,L.return_dict_in_generate=!0}const tt=await super.generate({inputs:S,generation_config:L,logits_processor:ve,decoder_input_ids:Xe,...Se});return L.return_token_timestamps&&(tt.token_timestamps=this._extract_token_timestamps(tt,L.alignment_heads,L.num_frames)),tt}_extract_token_timestamps(S,L,ve=null,Ie=.02){if(!S.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");ve==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let Se=this.config.median_filter_width;Se===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),Se=7);const Xe=S.cross_attentions,tt=Array.from({length:this.config.decoder_layers},(ir,Xt)=>(0,C.cat)(Xe.map(dr=>dr[Xt]),2)),ft=(0,C.stack)(L.map(([ir,Xt])=>{if(ir>=tt.length)throw new Error(`Layer index ${ir} is out of bounds for cross attentions (length ${tt.length}).`);return ve?tt[ir].slice(null,Xt,null,[0,ve]):tt[ir].slice(null,Xt)})).transpose(1,0,2,3),[bt,Ht]=(0,C.std_mean)(ft,-2,0,!0),jt=ft.clone();for(let ir=0;ir<jt.dims[0];++ir){const Xt=jt[ir];for(let dr=0;dr<Xt.dims[0];++dr){const Or=Xt[dr],$r=bt[ir][dr][0].data,pr=Ht[ir][dr][0].data;for(let kr=0;kr<Or.dims[0];++kr){let Lr=Or[kr].data;for(let os=0;os<Lr.length;++os)Lr[os]=(Lr[os]-pr[os])/$r[os];Lr.set((0,J.medianFilter)(Lr,Se))}}}const Lt=[(0,C.mean)(jt,1)],Gt=S.sequences.dims,sr=new C.Tensor("float32",new Float32Array(Gt[0]*Gt[1]),Gt);for(let ir=0;ir<Gt[0];++ir){const Xt=Lt[ir].neg().squeeze_(0),[dr,Or]=(0,J.dynamic_time_warping)(Xt.tolist()),$r=Array.from({length:dr.length-1},(Lr,os)=>dr[os+1]-dr[os]),pr=(0,Q.mergeArrays)([1],$r).map(Lr=>!!Lr),kr=[];for(let Lr=0;Lr<pr.length;++Lr)pr[Lr]&&kr.push(Or[Lr]*Ie);sr[ir].data.set(kr,1)}return sr}}class Jo extends le{constructor(){super(...arguments);Te(this,"main_input_name","pixel_values");Te(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class Zo extends le{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class ho extends Zo{_merge_input_ids_with_image_features({inputs_embeds:S,image_features:L,input_ids:ve,attention_mask:Ie}){const Se=this.config.image_token_index,tt=ve.tolist().map(Lt=>Lt.findIndex(Gt=>Gt==Se)),ft=tt.every(Lt=>Lt===-1),bt=tt.every(Lt=>Lt!==-1);if(!ft&&!bt)throw new Error("Every input should contain either 0 or 1 image token.");if(ft)return{inputs_embeds:S,attention_mask:Ie};const Ht=[],jt=[];for(let Lt=0;Lt<tt.length;++Lt){const Gt=tt[Lt],sr=S[Lt],ir=L[Lt],Xt=Ie[Lt];Ht.push((0,C.cat)([sr.slice([0,Gt]),ir,sr.slice([Gt+1,sr.dims[0]])],0)),jt.push((0,C.cat)([Xt.slice([0,Gt]),(0,C.ones)([ir.dims[0]]),Xt.slice([Gt+1,Xt.dims[0]])],0))}return{inputs_embeds:(0,C.stack)(Ht,0),attention_mask:(0,C.stack)(jt,0)}}}class Da extends ho{}class La extends ho{}class fs extends le{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);Te(this,"main_input_name","inputs_embeds")}}class za extends fs{_merge_input_ids_with_image_features({inputs_embeds:S,image_features:L,input_ids:ve,attention_mask:Ie}){return{inputs_embeds:(0,C.cat)([L,S],1),attention_mask:(0,C.cat)([(0,C.ones)(L.dims.slice(0,2)),Ie],1)}}async _prepare_inputs_embeds({input_ids:S,pixel_values:L,inputs_embeds:ve,attention_mask:Ie}){if(!S&&!L)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let Se,Xe;return S&&(Se=await this.encode_text({input_ids:S})),L&&(Xe=await this.encode_image({pixel_values:L})),Se&&Xe?{inputs_embeds:ve,attention_mask:Ie}=this._merge_input_ids_with_image_features({inputs_embeds:Se,image_features:Xe,input_ids:S,attention_mask:Ie}):ve=Se||Xe,{inputs_embeds:ve,attention_mask:Ie}}async forward({input_ids:S,pixel_values:L,attention_mask:ve,decoder_input_ids:Ie,decoder_attention_mask:Se,encoder_outputs:Xe,past_key_values:tt,inputs_embeds:ft,decoder_inputs_embeds:bt}){if(ft||({inputs_embeds:ft,attention_mask:ve}=await this._prepare_inputs_embeds({input_ids:S,pixel_values:L,inputs_embeds:ft,attention_mask:ve})),!Xe){let{last_hidden_state:Lt}=await _e(this,{inputs_embeds:ft,attention_mask:ve});Xe=Lt}if(!bt){if(!Ie)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");bt=await this.encode_text({input_ids:Ie})}return await U(this,{inputs_embeds:bt,attention_mask:Se,encoder_attention_mask:ve,encoder_hidden_states:Xe,past_key_values:tt},!0)}}class Ba extends le{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class Us extends Ba{async encode_image({pixel_values:S,pixel_attention_mask:L}){return(await me(this.sessions.vision_encoder,{pixel_values:S,pixel_attention_mask:L})).image_features}_merge_input_ids_with_image_features(S){const L=S.image_features.dims.at(-1),ve=S.image_features.view(-1,L);return ce({image_token_id:this.config.image_token_id,...S,image_features:ve})}}class cn extends le{}class Ra extends cn{}class yc extends cn{static async from_pretrained(S,L={}){return L.model_file_name??(L.model_file_name="text_model"),super.from_pretrained(S,L)}}class ja extends cn{static async from_pretrained(S,L={}){return L.model_file_name??(L.model_file_name="text_model"),super.from_pretrained(S,L)}}class Mc extends cn{static async from_pretrained(S,L={}){return L.model_file_name??(L.model_file_name="vision_model"),super.from_pretrained(S,L)}}class Na extends cn{static async from_pretrained(S,L={}){return L.model_file_name??(L.model_file_name="vision_model"),super.from_pretrained(S,L)}}class ei extends le{}class Ua extends ei{}class Va extends ei{static async from_pretrained(S,L={}){return L.model_file_name??(L.model_file_name="text_model"),super.from_pretrained(S,L)}}class Wa extends cn{static async from_pretrained(S,L={}){return L.model_file_name??(L.model_file_name="vision_model"),super.from_pretrained(S,L)}}class Cs extends le{}class Ga extends Cs{}class mo extends le{}class Ka extends mo{async forward(S){const L=!S.input_ids,ve=!S.pixel_values;if(L&&ve)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(L&&(S.input_ids=(0,C.ones)([S.pixel_values.dims[0],1])),ve){const{image_size:bt}=this.config.vision_config;S.pixel_values=(0,C.full)([0,3,bt,bt],0)}const{text_embeddings:Ie,image_embeddings:Se,l2norm_text_embeddings:Xe,l2norm_image_embeddings:tt}=await super.forward(S),ft={};return L||(ft.text_embeddings=Ie,ft.l2norm_text_embeddings=Xe),ve||(ft.image_embeddings=Se,ft.l2norm_image_embeddings=tt),ft}}class Ha extends mo{static async from_pretrained(S,L={}){return L.model_file_name??(L.model_file_name="text_model"),super.from_pretrained(S,L)}}class qa extends mo{static async from_pretrained(S,L={}){return L.model_file_name??(L.model_file_name="vision_model"),super.from_pretrained(S,L)}}class ti extends le{}class Qa extends ti{}class Xa extends ti{}class ri extends le{}class Ya extends ri{}class bc extends ri{}class ws extends le{}class Ja extends ws{}class fo extends ws{}class _o extends le{}class $s extends _o{}class Za extends _o{}class si extends le{}class el extends si{}class tl extends si{}class ni extends le{}class rl extends ni{}class sl extends ni{}class oi extends le{}class nl extends oi{}class ol extends oi{}class ys extends le{}class il extends ys{}class al extends ys{}class ii extends le{}class ll extends ii{}class ul extends ii{}class ai extends le{}class dl extends ai{}class cl extends ai{}class li extends le{}class pl extends li{}class ui extends li{}class go extends le{}class hl extends go{}class ml extends go{}class wo extends le{}class vc extends wo{}class fl extends wo{}class di extends le{}class _l extends di{}class gl extends di{}class An extends le{}class wl extends An{}class yl extends An{}class yo extends le{}class Ml extends yo{}class bl extends yo{}class ci extends le{}class vl extends ci{}class Tc extends ci{}class Tl extends le{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class xl extends Tl{get_rope_index(S,L,ve,Ie){const{vision_config:Se,image_token_id:Xe,video_token_id:tt,vision_start_token_id:ft}=this.config,bt=Se.spatial_merge_size??2,Ht=[];if(L||ve){let jt=S.tolist();Ie||(Ie=(0,C.ones_like)(S));const Lt=Ie.tolist(),Gt=Array.from({length:3},Or=>Array.from({length:S.dims[0]},$r=>Array.from({length:S.dims[1]},pr=>1))),sr=L?L.tolist():[],ir=ve?ve.tolist():[];let Xt=0,dr=0;for(let Or=0;Or<jt.length;++Or){const $r=jt[Or].filter((Ar,Ur)=>Lt[Or][Ur]==1),kr=$r.reduce((Ar,Ur,mn)=>(Ur==ft&&Ar.push(mn),Ar),[]).map(Ar=>$r[Ar+1]),Lr=kr.filter(Ar=>Ar==Xe).length,os=kr.filter(Ar=>Ar==tt).length;let Kr=[],Ss=0,In=Lr,cc=os;for(let Ar=0;Ar<kr.length;++Ar){const Ur=$r.findIndex((an,Zr)=>Zr>Ss&&an==Xe),mn=$r.findIndex((an,Zr)=>Zr>Ss&&an==tt),fn=In>0&&Ur!==-1?Ur:$r.length+1,_n=cc>0&&mn!==-1?mn:$r.length+1;let eo,va,Ta,pc;fn<_n?([va,Ta,pc]=sr[Xt],++Xt,--In,eo=fn):([va,Ta,pc]=ir[dr],++dr,--cc,eo=_n);const[hc,xa,Ea]=[Number(va),Math.floor(Number(Ta)/bt),Math.floor(Number(pc)/bt)],Pa=eo-Ss,No=Kr.length>0?(0,J.max)(Kr.at(-1))[0]+1:0;Kr.push(Array.from({length:3*Pa},(an,Zr)=>No+Zr%Pa));const Ca=Pa+No,Uo=hc*xa*Ea,Cp=Array.from({length:Uo},(an,Zr)=>Ca+Math.floor(Zr/(xa*Ea))),op=Array.from({length:Uo},(an,Zr)=>Ca+Math.floor(Zr/Ea)%xa),mc=Array.from({length:Uo},(an,Zr)=>Ca+Zr%Ea);Kr.push([Cp,op,mc].flat()),Ss=eo+Uo}if(Ss<$r.length){const Ar=Kr.length>0?(0,J.max)(Kr.at(-1))[0]+1:0,Ur=$r.length-Ss;Kr.push(Array.from({length:3*Ur},(mn,fn)=>Ar+fn%Ur))}const _s=Kr.reduce((Ar,Ur)=>Ar+Ur.length,0),Ws=new Array(_s);let Ma=0;for(let Ar=0;Ar<3;++Ar)for(let Ur=0;Ur<Kr.length;++Ur){const mn=Kr[Ur],fn=mn.length/3;for(let _n=Ar*fn;_n<(Ar+1)*fn;++_n)Ws[Ma++]=mn[_n]}let ba=0;const Ro=Lt[Or];for(let Ar=0;Ar<Ro.length;++Ar)if(Ro[Ar]==1){for(let Ur=0;Ur<3;++Ur)Gt[Ur][Or][Ar]=Ws[Ur*_s/3+ba];++ba}const jo=(0,J.max)(Ws)[0];Ht.push(jo+1-jt[Or].length)}return[new C.Tensor("int64",Gt.flat(1/0),[3,S.dims[0],S.dims[1]]),new C.Tensor("int64",Ht,[Ht.length,1])]}else if(Ie){const{data:jt,dims:Lt}=ke(Ie),Gt=BigInt64Array.from({length:3*jt.length},(ir,Xt)=>jt[Xt%jt.length]),sr=Array.from({length:Lt[0]},(ir,Xt)=>(0,J.max)(jt.subarray(Lt[1]*Xt,Lt[1]*(Xt+1)))[0]+1+Lt[1]);return[new C.Tensor("int64",Gt,[3,...Lt]),new C.Tensor("int64",sr,[sr.length,1])]}else{const[jt,Lt]=S.dims,Gt=BigInt64Array.from({length:3*jt*Lt},(sr,ir)=>BigInt(Math.floor(ir%Lt/jt)));return[new C.Tensor("int64",Gt,[3,...S.dims]),(0,C.zeros)([jt,1])]}}async encode_image({pixel_values:S,image_grid_thw:L}){return(await me(this.sessions.vision_encoder,{pixel_values:S,grid_thw:L})).image_features}_merge_input_ids_with_image_features(S){return ce({image_token_id:this.config.image_token_id,...S})}prepare_inputs_for_generation(S,L,ve){if(L.attention_mask&&!L.position_ids)if(!L.past_key_values)[L.position_ids,L.rope_deltas]=this.get_rope_index(L.input_ids,L.image_grid_thw,L.video_grid_thw,L.attention_mask);else{L.pixel_values=null;const Ie=BigInt(Object.values(L.past_key_values)[0].dims.at(-2)),Se=L.rope_deltas.map(Xe=>Ie+Xe);L.position_ids=(0,C.stack)([Se,Se,Se],0)}return L}}class pi extends le{}class xc extends pi{}class El extends pi{}class ur extends le{}class Pl extends ur{}class Cl extends ur{}class hi extends le{}class $l extends hi{}class Sl extends hi{}class mi extends le{}class kl extends mi{}class Al extends mi{}class fi extends le{}class Il extends fi{}class Fl extends fi{}class _i extends le{}class Ol extends _i{}class Dl extends _i{async _call(S){return new tr(await super._call(S))}}class Wn extends le{}class Ll extends Wn{}class Gn extends le{}class zl extends Gn{}class Bl extends Gn{async _call(S){return new tr(await super._call(S))}}class Rl extends le{}class jl extends Rl{}class gi extends le{}class Nl extends gi{}class Ul extends gi{async _call(S){return new tr(await super._call(S))}}class Vl extends le{}class Wl extends Vl{}class wi extends le{}class Gl extends wi{}class Kl extends wi{async _call(S){return new tr(await super._call(S))}}class Hl extends le{}class ql extends Hl{async _call(S){return new uc(await super._call(S))}}class yi extends le{}class Ql extends yi{}class Mi extends yi{async _call(S){return new tr(await super._call(S))}}class bi extends le{}class vi extends bi{}class Ti extends bi{async _call(S){return new tr(await super._call(S))}}class xi extends le{}class Xl extends xi{}class Yl extends xi{}class Ei extends le{}class Jl extends Ei{}class Zl extends Ei{}class Mo extends le{}class eu extends Mo{}class tu extends Mo{async _call(S){return new tr(await super._call(S))}}class bo extends le{}class Ec extends bo{}class ru extends bo{async _call(S){return new Ms(await super._call(S))}}class Pi extends bo{async _call(S){return new su(await super._call(S))}}class Ms extends He{constructor({logits:S,pred_boxes:L}){super(),this.logits=S,this.pred_boxes=L}}class su extends He{constructor({logits:S,pred_boxes:L,pred_masks:ve}){super(),this.logits=S,this.pred_boxes=L,this.pred_masks=ve}}class Ci extends le{}class nu extends Ci{}class ou extends Ci{async _call(S){return new iu(await super._call(S))}}class iu extends He{constructor({logits:S,pred_boxes:L}){super(),this.logits=S,this.pred_boxes=L}}class $i extends le{}class au extends $i{}class lu extends $i{async _call(S){return new uu(await super._call(S))}}class uu extends Ms{}class Si extends le{}class Pc extends Si{}class du extends Si{async _call(S){return new tr(await super._call(S))}}class ki extends le{}class cu extends ki{}class pu extends ki{async _call(S){return new tr(await super._call(S))}}class Ai extends le{}class hu extends Ai{}class Cc extends Ai{async _call(S){return new tr(await super._call(S))}}class Vs extends le{}class sn extends Vs{}class nn extends Vs{async _call(S){return new tr(await super._call(S))}}class vo extends le{}class on extends vo{}class rs extends vo{}class To extends le{}class xo extends To{}class Ii extends To{}class mu extends le{}class fu extends mu{}class Eo extends le{}class Po extends Eo{}class Fi extends Eo{}class _u extends Eo{}class Co extends le{}class gu extends Co{}class $o extends le{}class So extends $o{}class wu extends $o{}class Oi extends le{}class $c extends Oi{}class yu extends Oi{}class Di extends le{}class Kn extends Di{}class Li extends le{}class zi extends Li{}class Mu extends Li{async _call(S){return new tr(await super._call(S))}}class Bi extends le{}class bu extends Bi{}class Sc extends Bi{async _call(S){return new tr(await super._call(S))}}class Ri extends le{}class vu extends Ri{}class kc extends Ri{async _call(S){return new tr(await super._call(S))}}class ko extends le{}class Tu extends ko{}class xu extends ko{async _call(S){return new Eu(await super._call(S))}}class Eu extends He{constructor({logits:S,pred_boxes:L}){super(),this.logits=S,this.pred_boxes=L}}class Pu extends le{}class Ao extends Pu{async get_image_embeddings({pixel_values:S}){return await _e(this,{pixel_values:S})}async forward(S){if((!S.image_embeddings||!S.image_positional_embeddings)&&(S={...S,...await this.get_image_embeddings(S)}),!S.input_labels&&S.input_points){const ve=S.input_points.dims.slice(0,-1),Ie=ve.reduce((Se,Xe)=>Se*Xe,1);S.input_labels=new C.Tensor("int64",new BigInt64Array(Ie).fill(1n),ve)}const L={image_embeddings:S.image_embeddings,image_positional_embeddings:S.image_positional_embeddings};return S.input_points&&(L.input_points=S.input_points),S.input_labels&&(L.input_labels=S.input_labels),S.input_boxes&&(L.input_boxes=S.input_boxes),await me(this.sessions.prompt_encoder_mask_decoder,L)}async _call(S){return new Cu(await super._call(S))}}class Cu extends He{constructor({iou_scores:S,pred_masks:L}){super(),this.iou_scores=S,this.pred_masks=L}}class Hn extends le{}class ji extends Hn{}class Ni extends Hn{}class Ui extends le{}class $u extends Ui{}class Vi extends Ui{}class pn extends le{}class Su extends pn{}class ku extends pn{async _call(S){return new hn(await super._call(S))}}class Ac extends pn{async _call(S){return new tr(await super._call(S))}}class Au extends pn{async _call(S){return new Yr(await super._call(S))}}class Io extends le{}class Ic extends Io{}class Iu extends Io{async _call(S){return new Yr(await super._call(S))}}class Fu extends le{}class Ou extends Fu{}class qn extends le{}class Du extends qn{}class Lu extends qn{async _call(S){return new hn(await super._call(S))}}class zu extends qn{async _call(S){return new tr(await super._call(S))}}class Qn extends le{}class Bu extends Qn{}class Ru extends Qn{async _call(S){return new hn(await super._call(S))}}class Fc extends Qn{async _call(S){return new tr(await super._call(S))}}class ju extends Qn{async _call(S){return new Yr(await super._call(S))}}class Fo extends le{}class Nu extends Fo{}class Oc extends Fo{async _call(S){return new hn(await super._call(S))}}class Uu extends Fo{async _call(S){return new tr(await super._call(S))}}class Dc extends le{}class Vu extends pn{}class Wu extends pn{async _call(S){return new hn(await super._call(S))}}class Gu extends pn{async _call(S){return new tr(await super._call(S))}}class Xn extends le{}class Oo extends Xn{}class Yn extends Xn{async _call(S){return new hn(await super._call(S))}}class Wi extends Xn{async _call(S){return new tr(await super._call(S))}}class Ku extends Xn{async _call(S){return new lc(await super._call(S))}}class Hu extends Xn{async _call(S){return new Yr(await super._call(S))}}class Do extends le{}class Lc extends Do{}class Gi extends Do{}class qu extends Do{async generate_speech(S,L,{threshold:ve=.5,minlenratio:Ie=0,maxlenratio:Se=20,vocoder:Xe=null}={}){const tt={input_ids:S},{encoder_outputs:ft,encoder_attention_mask:bt}=await _e(this,tt),Ht=ft.dims[1]/this.config.reduction_factor,jt=Math.floor(Ht*Se),Lt=Math.floor(Ht*Ie),Gt=this.config.num_mel_bins;let sr=[],ir=null,Xt=null,dr=0;for(;;){++dr;const pr=Ee(!!Xt);let kr;Xt?kr=Xt.output_sequence_out:kr=new C.Tensor("float32",new Float32Array(Gt),[1,1,Gt]);let Lr={use_cache_branch:pr,output_sequence:kr,encoder_attention_mask:bt,speaker_embeddings:L,encoder_hidden_states:ft};this.addPastKeyValues(Lr,ir),Xt=await me(this.sessions.decoder_model_merged,Lr),ir=this.getPastKeyValues(Xt,ir);const{prob:os,spectrum:Kr}=Xt;if(sr.push(Kr),dr>=Lt&&(Array.from(os.data).filter(Ss=>Ss>=ve).length>0||dr>=jt))break}const Or=(0,C.cat)(sr),{waveform:$r}=await me(Xe.sessions.model,{spectrogram:Or});return{spectrogram:Or,waveform:$r}}}class Qu extends le{constructor(){super(...arguments);Te(this,"main_input_name","spectrogram")}}class Xu extends le{}class zc extends Xu{}class Ki extends le{}class Hi extends Ki{}class Yu extends Ki{}class qi extends le{}class Ju extends qi{}class Bc extends qi{}class Qi extends le{}class Zu extends Qi{}class Rc extends Qi{}class Lo extends le{}class ed extends Lo{}class td extends Lo{static async from_pretrained(S,L={}){return L.model_file_name??(L.model_file_name="text_model"),super.from_pretrained(S,L)}}class rd extends Lo{static async from_pretrained(S,L={}){return L.model_file_name??(L.model_file_name="audio_model"),super.from_pretrained(S,L)}}class jc extends le{}class Xi extends jc{async _call(S){return new dc(await super._call(S))}}class zo extends le{}class Nc extends zo{}class sd extends zo{}class Uc extends zo{}class Yi extends le{}class nd extends Yi{}class od extends Yi{}class Ji extends le{}class Vc extends Ji{}class id extends Ji{async _call(S){return new tr(await super._call(S))}}class Zi extends le{}class Wc extends Zi{}class Gc extends Zi{}class ad extends le{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(L){const[ve,Ie]=L.dims,Se=this.config.decoder.num_codebooks,Xe=Ie-Se;let tt=0;for(let Ht=0;Ht<L.size;++Ht){if(L.data[Ht]===this.config.decoder.pad_token_id)continue;const jt=Ht%Ie,Lt=Math.floor(Ht/Ie)%Se,Gt=jt-Lt;Gt>0&&Gt<=Xe&&(L.data[tt++]=L.data[Ht])}const ft=Math.floor(ve/Se),bt=tt/(ft*Se);return new C.Tensor(L.type,L.data.slice(0,tt),[ft,Se,bt])}prepare_inputs_for_generation(L,ve,Ie){let Se=structuredClone(L);for(let tt=0;tt<Se.length;++tt)for(let ft=0;ft<Se[tt].length;++ft)tt%this.config.decoder.num_codebooks>=ft&&(Se[tt][ft]=BigInt(this.config.decoder.pad_token_id));return Ie.guidance_scale!==null&&Ie.guidance_scale>1&&(Se=Se.concat(Se)),super.prepare_inputs_for_generation(Se,ve,Ie)}async generate(L){const ve=await super.generate(L),Ie=this._apply_and_filter_by_delay_pattern_mask(ve).unsqueeze_(0),{audio_values:Se}=await me(this.sessions.encodec_decode,{audio_codes:Ie});return Se}}class ss extends le{}class ld extends ss{}class ud extends ss{async _call(S){return new tr(await super._call(S))}}class Bo extends le{}class dd extends Bo{}class Jn extends Bo{async _call(S){return new tr(await super._call(S))}}class ea extends le{}class cd extends ea{}class ta extends ea{async _call(S){return new tr(await super._call(S))}}class ra extends le{}class pd extends ra{}class sa extends ra{async _call(S){return new tr(await super._call(S))}}class hd extends le{}class md extends hd{}class fd extends le{}class na extends fd{constructor(...L){super(...L);Te(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(L){const ve=this._generation_mode??"text";let Ie;if(ve==="text"||!L.past_key_values){const bt=this.sessions.prepare_inputs_embeds,Ht=(0,Q.pick)(L,bt.inputNames);Ie=await me(bt,Ht)}else{const bt=this.sessions.gen_img_embeds,Ht=(0,Q.pick)({image_ids:L.input_ids},bt.inputNames);Ie=await me(bt,Ht)}const Se={...L,...Ie},Xe=await U(this,Se),tt=this.sessions[ve==="text"?"lm_head":"gen_head"];if(!tt)throw new Error(`Unable to find "${tt}" generation head`);const ft=await me(tt,(0,Q.pick)(Xe,tt.inputNames));return{...Ie,...Xe,...ft}}async generate(L){return this._generation_mode="text",super.generate(L)}async generate_images(L){this._generation_mode="image";const ve=(L.inputs??L[this.main_input_name]).dims[1],Se=(await super.generate(L)).slice(null,[ve,null]),Xe=this.sessions.image_decode,{decoded_image:tt}=await me(Xe,{generated_tokens:Se}),ft=tt.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),bt=[];for(const Ht of ft){const jt=q.RawImage.fromTensor(Ht);bt.push(jt)}return bt}}class _d extends He{constructor({char_logits:S,bpe_logits:L,wp_logits:ve}){super(),this.char_logits=S,this.bpe_logits=L,this.wp_logits=ve}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class gd extends le{}class oa extends gd{async _call(S){return new _d(await super._call(S))}}class ia extends le{}class Kc extends ia{}class aa extends ia{}class la extends le{}class wd extends la{}class yd extends la{}class vr{static async from_pretrained(S,{progress_callback:L=null,config:ve=null,cache_dir:Ie=null,local_files_only:Se=!1,revision:Xe="main",model_file_name:tt=null,subfolder:ft="onnx",device:bt=null,dtype:Ht=null,use_external_data_format:jt=null,session_options:Lt={}}={}){const Gt={progress_callback:L,config:ve,cache_dir:Ie,local_files_only:Se,revision:Xe,model_file_name:tt,subfolder:ft,device:bt,dtype:Ht,use_external_data_format:jt,session_options:Lt};if(Gt.config=await w.AutoConfig.from_pretrained(S,Gt),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const sr of this.MODEL_CLASS_MAPPINGS){const ir=sr.get(Gt.config.model_type);if(ir)return await ir[1].from_pretrained(S,Gt)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${Gt.config.model_type}", attempting to construct from base class.`),await le.from_pretrained(S,Gt);throw Error(`Unsupported model type: ${Gt.config.model_type}`)}}Te(vr,"MODEL_CLASS_MAPPINGS",null),Te(vr,"BASE_IF_FAIL",!1);const Hc=new Map([["bert",["BertModel",$e]],["nomic_bert",["NomicBertModel",dt]],["roformer",["RoFormerModel",ht]],["electra",["ElectraModel",Et]],["esm",["EsmModel",Br]],["convbert",["ConvBertModel",Ae]],["camembert",["CamembertModel",as]],["deberta",["DebertaModel",Ts]],["deberta-v2",["DebertaV2Model",Js]],["mpnet",["MPNetModel",Bn]],["albert",["AlbertModel",Cn]],["distilbert",["DistilBertModel",It]],["roberta",["RobertaModel",wr]],["xlm",["XLMModel",us]],["xlm-roberta",["XLMRobertaModel",Is]],["clap",["ClapModel",ed]],["clip",["CLIPModel",Ra]],["clipseg",["CLIPSegModel",Qa]],["chinese_clip",["ChineseCLIPModel",Ga]],["siglip",["SiglipModel",Ua]],["jina_clip",["JinaCLIPModel",Ka]],["mobilebert",["MobileBertModel",uo]],["squeezebert",["SqueezeBertModel",dn]],["wav2vec2",["Wav2Vec2Model",Su]],["wav2vec2-bert",["Wav2Vec2BertModel",Nu]],["unispeech",["UniSpeechModel",Du]],["unispeech-sat",["UniSpeechSatModel",Bu]],["hubert",["HubertModel",Vu]],["wavlm",["WavLMModel",Oo]],["audio-spectrogram-transformer",["ASTModel",Xo]],["vits",["VitsModel",Xi]],["pyannote",["PyAnnoteModel",Ic]],["wespeaker-resnet",["WeSpeakerResNetModel",Ou]],["detr",["DetrModel",Ec]],["rt_detr",["RTDetrModel",nu]],["table-transformer",["TableTransformerModel",au]],["vit",["ViTModel",Ol]],["pvt",["PvtModel",zl]],["vit_msn",["ViTMSNModel",Nl]],["vit_mae",["ViTMAEModel",jl]],["groupvit",["GroupViTModel",Wl]],["fastvit",["FastViTModel",Gl]],["mobilevit",["MobileViTModel",Ql]],["mobilevitv2",["MobileViTV2Model",vi]],["owlvit",["OwlViTModel",Xl]],["owlv2",["Owlv2Model",Jl]],["beit",["BeitModel",eu]],["deit",["DeiTModel",Pc]],["hiera",["HieraModel",cu]],["convnext",["ConvNextModel",zi]],["convnextv2",["ConvNextV2Model",bu]],["dinov2",["Dinov2Model",vu]],["resnet",["ResNetModel",hu]],["swin",["SwinModel",sn]],["swin2sr",["Swin2SRModel",on]],["donut-swin",["DonutSwinModel",Kn]],["yolos",["YolosModel",Tu]],["dpt",["DPTModel",xo]],["glpn",["GLPNModel",$c]],["hifigan",["SpeechT5HifiGan",Qu]],["efficientnet",["EfficientNetModel",Vc]],["decision_transformer",["DecisionTransformerModel",md]],["patchtst",["PatchTSTForPrediction",Kc]],["patchtsmixer",["PatchTSMixerForPrediction",wd]],["mobilenet_v1",["MobileNetV1Model",ld]],["mobilenet_v2",["MobileNetV2Model",dd]],["mobilenet_v3",["MobileNetV3Model",cd]],["mobilenet_v4",["MobileNetV4Model",pd]],["maskformer",["MaskFormerModel",So]],["mgp-str",["MgpstrForSceneTextRecognition",oa]]]),qc=new Map([["t5",["T5Model",Un]],["longt5",["LongT5Model",_r]],["mt5",["MT5Model",K]],["bart",["BartModel",Pe]],["mbart",["MBartModel",pt]],["marian",["MarianModel",ji]],["whisper",["WhisperModel",Vn]],["m2m_100",["M2M100Model",$u]],["blenderbot",["BlenderbotModel",Cr]],["blenderbot-small",["BlenderbotSmallModel",hs]]]),Qc=new Map([["bloom",["BloomModel",$l]],["jais",["JAISModel",Ja]],["gpt2",["GPT2Model",Ya]],["gptj",["GPTJModel",rl]],["gpt_bigcode",["GPTBigCodeModel",nl]],["gpt_neo",["GPTNeoModel",$s]],["gpt_neox",["GPTNeoXModel",el]],["codegen",["CodeGenModel",il]],["llama",["LlamaModel",ll]],["olmo",["OlmoModel",pl]],["mobilellm",["MobileLLMModel",dl]],["granite",["GraniteModel",hl]],["cohere",["CohereModel",vc]],["gemma",["GemmaModel",_l]],["gemma2",["Gemma2Model",wl]],["openelm",["OpenELMModel",Ml]],["qwen2",["Qwen2Model",vl]],["phi",["PhiModel",xc]],["phi3",["Phi3Model",Pl]],["mpt",["MptModel",kl]],["opt",["OPTModel",Il]],["mistral",["MistralModel",Hi]],["starcoder2",["Starcoder2Model",Ju]],["falcon",["FalconModel",Zu]],["stablelm",["StableLmModel",nd]]]),Md=new Map([["speecht5",["SpeechT5ForSpeechToText",Gi]],["whisper",["WhisperForConditionalGeneration",er]]]),bd=new Map([["speecht5",["SpeechT5ForTextToSpeech",qu]]]),vd=new Map([["vits",["VitsModel",Xi]],["musicgen",["MusicgenForConditionalGeneration",ad]]]),Td=new Map([["bert",["BertForSequenceClassification",Qe]],["roformer",["RoFormerForSequenceClassification",A]],["electra",["ElectraForSequenceClassification",ar]],["esm",["EsmForSequenceClassification",br]],["convbert",["ConvBertForSequenceClassification",ot]],["camembert",["CamembertForSequenceClassification",Qs]],["deberta",["DebertaForSequenceClassification",Xs]],["deberta-v2",["DebertaV2ForSequenceClassification",zs]],["mpnet",["MPNetForSequenceClassification",rn]],["albert",["AlbertForSequenceClassification",Rn]],["distilbert",["DistilBertForSequenceClassification",Wr]],["roberta",["RobertaForSequenceClassification",ms]],["xlm",["XLMForSequenceClassification",yr]],["xlm-roberta",["XLMRobertaForSequenceClassification",St]],["bart",["BartForSequenceClassification",lt]],["mbart",["MBartForSequenceClassification",Wt]],["mobilebert",["MobileBertForSequenceClassification",Ln]],["squeezebert",["SqueezeBertForSequenceClassification",En]]]),xd=new Map([["bert",["BertForTokenClassification",qe]],["roformer",["RoFormerForTokenClassification",ne]],["electra",["ElectraForTokenClassification",Mr]],["esm",["EsmForTokenClassification",Tn]],["convbert",["ConvBertForTokenClassification",ut]],["camembert",["CamembertForTokenClassification",Ds]],["deberta",["DebertaForTokenClassification",un]],["deberta-v2",["DebertaV2ForTokenClassification",ps]],["mpnet",["MPNetForTokenClassification",Es]],["distilbert",["DistilBertForTokenClassification",en]],["roberta",["RobertaForTokenClassification",Ps]],["xlm",["XLMForTokenClassification",wt]],["xlm-roberta",["XLMRobertaForTokenClassification",po]]]),ua=new Map([["t5",["T5ForConditionalGeneration",Sn]],["longt5",["LongT5ForConditionalGeneration",xe]],["mt5",["MT5ForConditionalGeneration",oe]],["bart",["BartForConditionalGeneration",Ue]],["mbart",["MBartForConditionalGeneration",Tt]],["marian",["MarianMTModel",Ni]],["m2m_100",["M2M100ForConditionalGeneration",Vi]],["blenderbot",["BlenderbotForConditionalGeneration",qt]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Gr]]]),Ed=new Map([["bloom",["BloomForCausalLM",Sl]],["gpt2",["GPT2LMHeadModel",bc]],["jais",["JAISLMHeadModel",fo]],["gptj",["GPTJForCausalLM",sl]],["gpt_bigcode",["GPTBigCodeForCausalLM",ol]],["gpt_neo",["GPTNeoForCausalLM",Za]],["gpt_neox",["GPTNeoXForCausalLM",tl]],["codegen",["CodeGenForCausalLM",al]],["llama",["LlamaForCausalLM",ul]],["olmo",["OlmoForCausalLM",ui]],["mobilellm",["MobileLLMForCausalLM",cl]],["granite",["GraniteForCausalLM",ml]],["cohere",["CohereForCausalLM",fl]],["gemma",["GemmaForCausalLM",gl]],["gemma2",["Gemma2ForCausalLM",yl]],["openelm",["OpenELMForCausalLM",bl]],["qwen2",["Qwen2ForCausalLM",Tc]],["phi",["PhiForCausalLM",El]],["phi3",["Phi3ForCausalLM",Cl]],["mpt",["MptForCausalLM",Al]],["opt",["OPTForCausalLM",Fl]],["mbart",["MBartForCausalLM",gr]],["mistral",["MistralForCausalLM",Yu]],["starcoder2",["Starcoder2ForCausalLM",Bc]],["falcon",["FalconForCausalLM",Rc]],["trocr",["TrOCRForCausalLM",zc]],["stablelm",["StableLmForCausalLM",od]]]),Xc=new Map([["multi_modality",["MultiModalityCausalLM",na]]]),Pd=new Map([["bert",["BertForMaskedLM",et]],["roformer",["RoFormerForMaskedLM",_t]],["electra",["ElectraForMaskedLM",Ct]],["esm",["EsmForMaskedLM",As]],["convbert",["ConvBertForMaskedLM",Je]],["camembert",["CamembertForMaskedLM",qs]],["deberta",["DebertaForMaskedLM",Ls]],["deberta-v2",["DebertaV2ForMaskedLM",Zs]],["mpnet",["MPNetForMaskedLM",co]],["albert",["AlbertForMaskedLM",Nn]],["distilbert",["DistilBertForMaskedLM",Sr]],["roberta",["RobertaForMaskedLM",qr]],["xlm",["XLMWithLMHeadModel",or]],["xlm-roberta",["XLMRobertaForMaskedLM",Fs]],["mobilebert",["MobileBertForMaskedLM",Dn]],["squeezebert",["SqueezeBertForMaskedLM",xn]]]),Cd=new Map([["bert",["BertForQuestionAnswering",ze]],["roformer",["RoFormerForQuestionAnswering",V]],["electra",["ElectraForQuestionAnswering",Nr]],["convbert",["ConvBertForQuestionAnswering",At]],["camembert",["CamembertForQuestionAnswering",vn]],["deberta",["DebertaForQuestionAnswering",Ys]],["deberta-v2",["DebertaV2ForQuestionAnswering",it]],["mpnet",["MPNetForQuestionAnswering",js]],["albert",["AlbertForQuestionAnswering",jn]],["distilbert",["DistilBertForQuestionAnswering",Bs]],["roberta",["RobertaForQuestionAnswering",Ut]],["xlm",["XLMForQuestionAnswering",Zt]],["xlm-roberta",["XLMRobertaForQuestionAnswering",Ze]],["mobilebert",["MobileBertForQuestionAnswering",zn]],["squeezebert",["SqueezeBertForQuestionAnswering",Pn]]]),da=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Jo]],["idefics3",["Idefics3ForConditionalGeneration",Us]]]),Yc=new Map([["llava",["LlavaForConditionalGeneration",ho]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",Da]],["moondream1",["Moondream1ForConditionalGeneration",La]],["florence2",["Florence2ForConditionalGeneration",za]],["qwen2-vl",["Qwen2VLForConditionalGeneration",xl]],["idefics3",["Idefics3ForConditionalGeneration",Us]]]),Jc=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Jo]]]),$d=new Map([["vit",["ViTForImageClassification",Dl]],["pvt",["PvtForImageClassification",Bl]],["vit_msn",["ViTMSNForImageClassification",Ul]],["fastvit",["FastViTForImageClassification",Kl]],["mobilevit",["MobileViTForImageClassification",Mi]],["mobilevitv2",["MobileViTV2ForImageClassification",Ti]],["beit",["BeitForImageClassification",tu]],["deit",["DeiTForImageClassification",du]],["hiera",["HieraForImageClassification",pu]],["convnext",["ConvNextForImageClassification",Mu]],["convnextv2",["ConvNextV2ForImageClassification",Sc]],["dinov2",["Dinov2ForImageClassification",kc]],["resnet",["ResNetForImageClassification",Cc]],["swin",["SwinForImageClassification",nn]],["segformer",["SegformerForImageClassification",sd]],["efficientnet",["EfficientNetForImageClassification",id]],["mobilenet_v1",["MobileNetV1ForImageClassification",ud]],["mobilenet_v2",["MobileNetV2ForImageClassification",Jn]],["mobilenet_v3",["MobileNetV3ForImageClassification",ta]],["mobilenet_v4",["MobileNetV4ForImageClassification",sa]]]),Sd=new Map([["detr",["DetrForObjectDetection",ru]],["rt_detr",["RTDetrForObjectDetection",ou]],["table-transformer",["TableTransformerForObjectDetection",lu]],["yolos",["YolosForObjectDetection",xu]]]),kd=new Map([["owlvit",["OwlViTForObjectDetection",Yl]],["owlv2",["Owlv2ForObjectDetection",Zl]]]),Zc=new Map([["detr",["DetrForSegmentation",Pi]],["clipseg",["CLIPSegForImageSegmentation",Xa]]]),Zn=new Map([["segformer",["SegformerForSemanticSegmentation",Uc]],["sapiens",["SapiensForSemanticSegmentation",Po]]]),ca=new Map([["detr",["DetrForSegmentation",Pi]],["maskformer",["MaskFormerForInstanceSegmentation",wu]]]),pa=new Map([["sam",["SamModel",Ao]]]),ha=new Map([["wav2vec2",["Wav2Vec2ForCTC",ku]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Oc]],["unispeech",["UniSpeechForCTC",Lu]],["unispeech-sat",["UniSpeechSatForCTC",Ru]],["wavlm",["WavLMForCTC",Yn]],["hubert",["HubertForCTC",Wu]]]),ma=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",Ac]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Uu]],["unispeech",["UniSpeechForSequenceClassification",zu]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Fc]],["wavlm",["WavLMForSequenceClassification",Wi]],["hubert",["HubertForSequenceClassification",Gu]],["audio-spectrogram-transformer",["ASTForAudioClassification",Oa]]]),Ad=new Map([["wavlm",["WavLMForXVector",Ku]]]),Id=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",ju]],["wavlm",["WavLMForAudioFrameClassification",Hu]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",Au]],["pyannote",["PyAnnoteForAudioFrameClassification",Iu]]]),fa=new Map([["vitmatte",["VitMatteForImageMatting",ql]]]),Fd=new Map([["patchtst",["PatchTSTForPrediction",aa]],["patchtsmixer",["PatchTSMixerForPrediction",yd]]]),Od=new Map([["swin2sr",["Swin2SRForImageSuperResolution",rs]]]),Dd=new Map([["dpt",["DPTForDepthEstimation",Ii]],["depth_anything",["DepthAnythingForDepthEstimation",fu]],["glpn",["GLPNForDepthEstimation",yu]],["sapiens",["SapiensForDepthEstimation",Fi]],["depth_pro",["DepthProForDepthEstimation",gu]]]),_a=new Map([["sapiens",["SapiensForNormalEstimation",_u]]]),Ld=new Map([["vitpose",["VitPoseForPoseEstimation",Ll]]]),zd=new Map([["clip",["CLIPVisionModelWithProjection",Na]],["siglip",["SiglipVisionModel",Wa]],["jina_clip",["JinaCLIPVisionModel",qa]]]),ga=[[Hc,N.EncoderOnly],[qc,N.EncoderDecoder],[Qc,N.DecoderOnly],[Td,N.EncoderOnly],[xd,N.EncoderOnly],[ua,N.Seq2Seq],[Md,N.Seq2Seq],[Ed,N.DecoderOnly],[Xc,N.MultiModality],[Pd,N.EncoderOnly],[Cd,N.EncoderOnly],[da,N.Vision2Seq],[Yc,N.ImageTextToText],[$d,N.EncoderOnly],[Zc,N.EncoderOnly],[ca,N.EncoderOnly],[Zn,N.EncoderOnly],[fa,N.EncoderOnly],[Fd,N.EncoderOnly],[Od,N.EncoderOnly],[Dd,N.EncoderOnly],[_a,N.EncoderOnly],[Ld,N.EncoderOnly],[Sd,N.EncoderOnly],[kd,N.EncoderOnly],[pa,N.MaskGeneration],[ha,N.EncoderOnly],[ma,N.EncoderOnly],[bd,N.Seq2Seq],[vd,N.EncoderOnly],[Ad,N.EncoderOnly],[Id,N.EncoderOnly],[zd,N.EncoderOnly]];for(const[f,S]of ga)for(const[L,ve]of f.values())I.set(L,S),k.set(ve,L),_.set(L,ve);const ep=[["MusicgenForConditionalGeneration",ad,N.Musicgen],["CLIPTextModelWithProjection",ja,N.EncoderOnly],["SiglipTextModel",Va,N.EncoderOnly],["JinaCLIPTextModel",Ha,N.EncoderOnly],["ClapTextModelWithProjection",td,N.EncoderOnly],["ClapAudioModelWithProjection",rd,N.EncoderOnly]];for(const[f,S,L]of ep)I.set(f,L),k.set(S,f),_.set(f,S);class wa extends vr{}Te(wa,"MODEL_CLASS_MAPPINGS",ga.map(S=>S[0])),Te(wa,"BASE_IF_FAIL",!0);class Bd extends vr{}Te(Bd,"MODEL_CLASS_MAPPINGS",[Td]);class Rd extends vr{}Te(Rd,"MODEL_CLASS_MAPPINGS",[xd]);class tp extends vr{}Te(tp,"MODEL_CLASS_MAPPINGS",[ua]);class jd extends vr{}Te(jd,"MODEL_CLASS_MAPPINGS",[Md]);class Nd extends vr{}Te(Nd,"MODEL_CLASS_MAPPINGS",[bd]);class Ud extends vr{}Te(Ud,"MODEL_CLASS_MAPPINGS",[vd]);class Vd extends vr{}Te(Vd,"MODEL_CLASS_MAPPINGS",[Ed]);class rp extends vr{}Te(rp,"MODEL_CLASS_MAPPINGS",[Pd]);class Wd extends vr{}Te(Wd,"MODEL_CLASS_MAPPINGS",[Cd]);class Gd extends vr{}Te(Gd,"MODEL_CLASS_MAPPINGS",[da]);class Kd extends vr{}Te(Kd,"MODEL_CLASS_MAPPINGS",[$d]);class sp extends vr{}Te(sp,"MODEL_CLASS_MAPPINGS",[Zc]);class Hd extends vr{}Te(Hd,"MODEL_CLASS_MAPPINGS",[Zn]);class qd extends vr{}Te(qd,"MODEL_CLASS_MAPPINGS",[ca]);class Qd extends vr{}Te(Qd,"MODEL_CLASS_MAPPINGS",[Sd]);class Xd extends vr{}Te(Xd,"MODEL_CLASS_MAPPINGS",[kd]);class Yd extends vr{}Te(Yd,"MODEL_CLASS_MAPPINGS",[pa]);class Jd extends vr{}Te(Jd,"MODEL_CLASS_MAPPINGS",[ha]);class Zd extends vr{}Te(Zd,"MODEL_CLASS_MAPPINGS",[ma]);class ec extends vr{}Te(ec,"MODEL_CLASS_MAPPINGS",[Ad]);class tc extends vr{}Te(tc,"MODEL_CLASS_MAPPINGS",[Id]);class rc extends vr{}Te(rc,"MODEL_CLASS_MAPPINGS",[Jc]);class sc extends vr{}Te(sc,"MODEL_CLASS_MAPPINGS",[fa]);class ya extends vr{}Te(ya,"MODEL_CLASS_MAPPINGS",[Od]);class nc extends vr{}Te(nc,"MODEL_CLASS_MAPPINGS",[Dd]);class oc extends vr{}Te(oc,"MODEL_CLASS_MAPPINGS",[_a]);class ic extends vr{}Te(ic,"MODEL_CLASS_MAPPINGS",[Ld]);class ac extends vr{}Te(ac,"MODEL_CLASS_MAPPINGS",[zd]);class np extends He{constructor({logits:S,past_key_values:L,encoder_outputs:ve,decoder_attentions:Ie=null,cross_attentions:Se=null}){super(),this.logits=S,this.past_key_values=L,this.encoder_outputs=ve,this.decoder_attentions=Ie,this.cross_attentions=Se}}class tr extends He{constructor({logits:S}){super(),this.logits=S}}class lc extends He{constructor({logits:S,embeddings:L}){super(),this.logits=S,this.embeddings=L}}class Yr extends He{constructor({logits:S}){super(),this.logits=S}}class Jr extends He{constructor({logits:S}){super(),this.logits=S}}class ns extends He{constructor({start_logits:S,end_logits:L}){super(),this.start_logits=S,this.end_logits=L}}class hn extends He{constructor({logits:S}){super(),this.logits=S}}class Pp extends He{constructor({logits:S,past_key_values:L}){super(),this.logits=S,this.past_key_values=L}}class uc extends He{constructor({alphas:S}){super(),this.alphas=S}}class dc extends He{constructor({waveform:S,spectrogram:L}){super(),this.waveform=S,this.spectrogram=L}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(Oe,R,c)=>{c.r(R),c.d(R,{ASTFeatureExtractor:()=>G});var w=c("./src/base/feature_extraction_utils.js");c("./src/utils/tensor.js");var D=c("./src/utils/audio.js");class G extends w.FeatureExtractor{constructor(Q){super(Q);const g=this.config.sampling_rate,v=(0,D.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(g/2),g,null,"kaldi",!0);for(let b=0;b<v.length;++b)v[b].push(0);this.mel_filters=v,this.window=(0,D.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(Q,g){return(0,D.spectrogram)(Q,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:g,transpose:!0})}async _call(Q){(0,w.validate_audio_inputs)(Q,"ASTFeatureExtractor");const g=await this._extract_fbank_features(Q,this.config.max_length);if(this.config.do_normalize){const v=this.std*2,b=g.data;for(let y=0;y<b.length;++y)b[y]=(b[y]-this.mean)/v}return{input_values:g.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(Oe,R,c)=>{c.r(R),c.d(R,{AutoFeatureExtractor:()=>re});var w=c("./src/utils/constants.js"),D=c("./src/utils/hub.js");c("./src/base/feature_extraction_utils.js");var G=c("./src/models/feature_extractors.js");class re{static async from_pretrained(g,v={}){const b=await(0,D.getModelJSON)(g,w.FEATURE_EXTRACTOR_NAME,!0,v),y=b.feature_extractor_type,C=G[y];if(!C)throw new Error(`Unknown feature_extractor_type: '${y}'. Please report this at ${w.GITHUB_ISSUE_URL}.`);return new C(b)}}},"./src/models/auto/image_processing_auto.js":(Oe,R,c)=>{c.r(R),c.d(R,{AutoImageProcessor:()=>Q});var w=c("./src/utils/constants.js"),D=c("./src/utils/hub.js"),G=c("./src/base/image_processors_utils.js"),re=c("./src/models/image_processors.js");class Q{static async from_pretrained(v,b={}){const y=await(0,D.getModelJSON)(v,w.IMAGE_PROCESSOR_NAME,!0,b),C=y.image_processor_type??y.feature_extractor_type;let q=re[C];return q||(C!==void 0&&console.warn(`Image processor type '${C}' not found, assuming base ImageProcessor. Please report this at ${w.GITHUB_ISSUE_URL}.`),q=G.ImageProcessor),new q(y)}}},"./src/models/auto/processing_auto.js":(Oe,R,c)=>{c.r(R),c.d(R,{AutoProcessor:()=>v});var w=c("./src/utils/constants.js"),D=c("./src/utils/hub.js"),G=c("./src/base/processing_utils.js"),re=c("./src/models/processors.js"),Q=c("./src/models/image_processors.js"),g=c("./src/models/feature_extractors.js");class v{static async from_pretrained(y,C={}){const q=await(0,D.getModelJSON)(y,w.IMAGE_PROCESSOR_NAME,!0,C),{image_processor_type:J,feature_extractor_type:ie,processor_class:fe}=q;if(fe&&re[fe])return re[fe].from_pretrained(y,C);if(!J&&!ie)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const j={};if(J){const Z=Q[J];if(!Z)throw new Error(`Unknown image_processor_type: '${J}'.`);j.image_processor=new Z(q)}if(ie){const Z=Q[ie];if(Z)j.image_processor=new Z(q);else{const N=g[ie];if(!N)throw new Error(`Unknown feature_extractor_type: '${ie}'.`);j.feature_extractor=new N(q)}}const X={};return new G.Processor(X,j)}}},"./src/models/beit/image_processing_beit.js":(Oe,R,c)=>{c.r(R),c.d(R,{BeitFeatureExtractor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(Oe,R,c)=>{c.r(R),c.d(R,{BitImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(Oe,R,c)=>{c.r(R),c.d(R,{ChineseCLIPFeatureExtractor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(Oe,R,c)=>{c.r(R),c.d(R,{ClapFeatureExtractor:()=>G});var w=c("./src/base/feature_extraction_utils.js");c("./src/utils/tensor.js");var D=c("./src/utils/audio.js");class G extends w.FeatureExtractor{constructor(Q){super(Q),this.mel_filters=(0,D.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,D.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,D.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(Q,g,v,b){let y;const C=Q.length-g;if(C>0)if(v==="rand_trunc"){const q=Math.floor(Math.random()*(C+1));Q=Q.subarray(q,q+g),y=await this._extract_fbank_features(Q,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${v}" not implemented`);else{if(C<0){let q=new Float64Array(g);if(q.set(Q),b==="repeat")for(let J=Q.length;J<g;J+=Q.length)q.set(Q.subarray(0,Math.min(Q.length,g-J)),J);else if(b==="repeatpad")for(let J=Q.length;J<-C;J+=Q.length)q.set(Q,J);Q=q}if(v==="fusion")throw new Error(`Truncation strategy "${v}" not implemented`);y=await this._extract_fbank_features(Q,this.mel_filters_slaney,this.config.nb_max_samples)}return y.unsqueeze_(0)}async _extract_fbank_features(Q,g,v=null){return(0,D.spectrogram)(Q,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:g,log_mel:"dB",max_num_frames:v,do_pad:!1,transpose:!0})}async _call(Q,{max_length:g=null}={}){return(0,w.validate_audio_inputs)(Q,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(Q,g??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(Oe,R,c)=>{c.r(R),c.d(R,{CLIPFeatureExtractor:()=>G,CLIPImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{}class G extends D{}},"./src/models/convnext/image_processing_convnext.js":(Oe,R,c)=>{c.r(R),c.d(R,{ConvNextFeatureExtractor:()=>G,ConvNextImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{constructor(Q){super(Q),this.crop_pct=this.config.crop_pct??.875}async resize(Q){var v;const g=(v=this.size)==null?void 0:v.shortest_edge;if(g===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(g<384){const b=Math.floor(g/this.crop_pct),[y,C]=this.get_resize_output_image_size(Q,{shortest_edge:b});Q=await Q.resize(y,C,{resample:this.resample}),Q=await Q.center_crop(g,g)}else Q=await Q.resize(g,g,{resample:this.resample});return Q}}class G extends D{}},"./src/models/deit/image_processing_deit.js":(Oe,R,c)=>{c.r(R),c.d(R,{DeiTFeatureExtractor:()=>G,DeiTImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{}class G extends D{}},"./src/models/detr/image_processing_detr.js":(Oe,R,c)=>{c.r(R),c.d(R,{DetrFeatureExtractor:()=>re,DetrImageProcessor:()=>G});var w=c("./src/base/image_processors_utils.js"),D=c("./src/utils/tensor.js");class G extends w.ImageProcessor{async _call(g){const v=await super._call(g),b=[v.pixel_values.dims[0],64,64],y=(0,D.full)(b,1n);return{...v,pixel_mask:y}}post_process_object_detection(...g){return(0,w.post_process_object_detection)(...g)}post_process_panoptic_segmentation(...g){return(0,w.post_process_panoptic_segmentation)(...g)}post_process_instance_segmentation(...g){return(0,w.post_process_instance_segmentation)(...g)}}class re extends G{}},"./src/models/donut/image_processing_donut.js":(Oe,R,c)=>{c.r(R),c.d(R,{DonutFeatureExtractor:()=>G,DonutImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{pad_image(Q,g,v,b={}){const[y,C,q]=g;let J=this.image_mean;Array.isArray(this.image_mean)||(J=new Array(q).fill(J));let ie=this.image_std;Array.isArray(ie)||(ie=new Array(q).fill(J));const fe=J.map((j,X)=>-j/ie[X]);return super.pad_image(Q,g,v,{center:!0,constant_values:fe,...b})}}class G extends D{}},"./src/models/dpt/image_processing_dpt.js":(Oe,R,c)=>{c.r(R),c.d(R,{DPTFeatureExtractor:()=>G,DPTImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{}class G extends D{}},"./src/models/efficientnet/image_processing_efficientnet.js":(Oe,R,c)=>{c.r(R),c.d(R,{EfficientNetImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{constructor(re){super(re),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(Q=>Q*Q))}}},"./src/models/feature_extractors.js":(Oe,R,c)=>{c.r(R),c.d(R,{ASTFeatureExtractor:()=>w.ASTFeatureExtractor,ClapFeatureExtractor:()=>D.ClapFeatureExtractor,ImageFeatureExtractor:()=>y.ImageProcessor,PyAnnoteFeatureExtractor:()=>G.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>re.SeamlessM4TFeatureExtractor,SpeechT5FeatureExtractor:()=>Q.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>g.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>v.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>b.WhisperFeatureExtractor});var w=c("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),D=c("./src/models/clap/feature_extraction_clap.js"),G=c("./src/models/pyannote/feature_extraction_pyannote.js"),re=c("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),Q=c("./src/models/speecht5/feature_extraction_speecht5.js"),g=c("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),v=c("./src/models/wespeaker/feature_extraction_wespeaker.js"),b=c("./src/models/whisper/feature_extraction_whisper.js"),y=c("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(Oe,R,c)=>{c.r(R),c.d(R,{Florence2Processor:()=>re});var w=c("./src/base/processing_utils.js"),D=c("./src/models/auto/image_processing_auto.js"),G=c("./src/tokenizers.js");class re extends w.Processor{constructor(g,v){super(g,v);const{tasks_answer_post_processing_type:b,task_prompts_without_inputs:y,task_prompts_with_input:C}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(b??{})),this.task_prompts_without_inputs=new Map(Object.entries(y??{})),this.task_prompts_with_input=new Map(Object.entries(C??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(g){typeof g=="string"&&(g=[g]);const v=[];for(const b of g)if(this.task_prompts_without_inputs.has(b))v.push(this.task_prompts_without_inputs.get(b));else{for(const[y,C]of this.task_prompts_with_input)if(b.includes(y)){v.push(C.replaceAll("{input}",b).replaceAll(y,""));break}v.length!==g.length&&v.push(b)}return v}post_process_generation(g,v,b){const y=this.tasks_answer_post_processing_type.get(v)??"pure_text";g=g.replaceAll("<s>","").replaceAll("</s>","");let C;switch(y){case"pure_text":C=g;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const q=y==="ocr"?"quad_boxes":"bboxes",J=g.matchAll(this.regexes[q]),ie=[],fe=[];for(const[j,X,...Z]of J)ie.push(X?X.trim():ie.at(-1)??""),fe.push(Z.map((N,I)=>(Number(N)+.5)/this.size_per_bin*b[I%2]));C={labels:ie,[q]:fe};break;default:throw new Error(`Task "${v}" (of type "${y}") not yet implemented.`)}return{[v]:C}}async _call(g,v=null,b={}){if(!g&&!v)throw new Error("Either text or images must be provided");const y=await this.image_processor(g,b),C=v?this.tokenizer(v,b):{};return{...y,...C}}}Te(re,"tokenizer_class",G.AutoTokenizer),Te(re,"image_processor_class",D.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(Oe,R,c)=>{c.r(R),c.d(R,{GLPNFeatureExtractor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{}},"./src/models/idefics3/image_processing_idefics3.js":(Oe,R,c)=>{c.r(R),c.d(R,{Idefics3ImageProcessor:()=>G});var w=c("./src/base/image_processors_utils.js"),D=c("./src/utils/tensor.js");class G extends w.ImageProcessor{constructor(Q){super(Q),this.do_image_splitting=Q.do_image_splitting??!0,this.max_image_size=Q.max_image_size}get_resize_for_vision_encoder(Q,g){let[v,b]=Q.dims.slice(-2);const y=b/v;return b>=v?(b=Math.ceil(b/g)*g,v=Math.floor(b/y),v=Math.ceil(v/g)*g):(v=Math.ceil(v/g)*g,b=Math.floor(v*y),b=Math.ceil(b/g)*g),{height:v,width:b}}async _call(Q,{do_image_splitting:g=null,return_row_col_info:v=!1}={}){let b;if(!Array.isArray(Q))b=[[Q]];else{if(Q.length===0||!Q[0])throw new Error("No images provided.");Array.isArray(Q[0])?b=Q:b=[Q]}let y=[],C=[],q=[];const J=[],ie=[];for(const k of b){let E=await Promise.all(k.map(de=>this.preprocess(de)));J.push(...E.map(de=>de.original_size)),ie.push(...E.map(de=>de.reshaped_input_size)),E.forEach(de=>de.pixel_values.unsqueeze_(0));const{longest_edge:ee}=this.max_image_size;let Y;if(g??this.do_image_splitting){let de=new Array(E.length),me=new Array(E.length);Y=await Promise.all(E.map(async(ye,Ce)=>{const Ee=this.get_resize_for_vision_encoder(ye.pixel_values,ee),Le=await(0,D.interpolate_4d)(ye.pixel_values,{size:[Ee.height,Ee.width]}),{frames:_e,num_splits_h:U,num_splits_w:ce}=await this.split_image(Le,this.max_image_size);return de[Ce]=U,me[Ce]=ce,(0,D.cat)(_e,0)})),C.push(de),q.push(me)}else{const de=[ee,ee];Y=await Promise.all(E.map(me=>(0,D.interpolate_4d)(me.pixel_values,{size:de}))),C.push(new Array(E.length).fill(0)),q.push(new Array(E.length).fill(0))}y.push((0,D.cat)(Y,0))}const fe=y.length,[j,X,Z,N]=y[0].dims;let I,_;if(fe===1)I=y[0].unsqueeze_(0),_=(0,D.full)([fe,j,Z,N],!0);else{const k=Math.max(...y.map(Y=>Y.dims.at(0)));_=(0,D.full)([fe,k,Z,N],!0);const E=_.data,ee=k*Z*N;for(let Y=0;Y<fe;++Y){const de=y[Y].dims[0];if(de<k){y[Y]=(0,D.cat)([y[Y],(0,D.full)([k-de,X,Z,N],0)],0);const me=Y*ee+de*Z*N,ye=(Y+1)*ee;E.fill(!1,me,ye)}}I=(0,D.stack)(y,0)}return{pixel_values:I,pixel_attention_mask:_,original_sizes:J,reshaped_input_sizes:ie,...v?{rows:C,cols:q}:{}}}async split_image(Q,{longest_edge:g}){const v=g,b=g,y=[],[C,q]=Q.dims.slice(-2);let J=0,ie=0;if(C>v||q>b){J=Math.ceil(C/v),ie=Math.ceil(q/b);const fe=Math.ceil(C/J),j=Math.ceil(q/ie);for(let N=0;N<J;N++)for(let I=0;I<ie;I++){const _=I*j,k=N*fe,E=Math.min(_+j,q),ee=Math.min(k+fe,C);y.push(Q.slice(null,null,[k,ee],[_,E]))}const X=v,Z=b;(C!==X||q!==Z)&&(Q=await(0,D.interpolate_4d)(Q,{size:[X,Z]}))}return y.push(Q),{frames:y,num_splits_h:J,num_splits_w:ie}}}},"./src/models/idefics3/processing_idefics3.js":(Oe,R,c)=>{c.r(R),c.d(R,{Idefics3Processor:()=>b});var w=c("./src/base/processing_utils.js"),D=c("./src/models/auto/image_processing_auto.js"),G=c("./src/tokenizers.js");c("./src/utils/image.js");var re=c("./src/utils/core.js");function Q(y,C,q,J,ie,fe){let j="";for(let X=0;X<C;++X){for(let Z=0;Z<q;++Z)j+=J+`<row_${X+1}_col_${Z+1}>`+ie.repeat(y);j+=`
`}return j+=`
${J}${fe}`+ie.repeat(y)+`${J}`,j}function g(y,C,q,J){return`${C}${J}`+q.repeat(y)+`${C}`}function v(y,C,q,J,ie,fe){return y===0&&C===0?g(q,J,ie,fe):Q(q,y,C,J,ie,fe)}class b extends w.Processor{constructor(){super(...arguments);Te(this,"fake_image_token","<fake_token_around_image>");Te(this,"image_token","<image>");Te(this,"global_img_token","<global-img>")}async _call(q,J=null,ie={}){ie.return_row_col_info??(ie.return_row_col_info=!0);let fe;J&&(fe=await this.image_processor(J,ie)),Array.isArray(q)||(q=[q]);const j=fe.rows??[new Array(q.length).fill(0)],X=fe.cols??[new Array(q.length).fill(0)],Z=this.config.image_seq_len,N=[],I=[];for(let k=0;k<q.length;++k){const E=q[k],ee=j[k],Y=X[k];N.push((0,re.count)(E,this.image_token));const de=ee.map((Ce,Ee)=>v(Ce,Y[Ee],Z,this.fake_image_token,this.image_token,this.global_img_token)),me=E.split(this.image_token);if(me.length===0)throw new Error("The image token should be present in the text.");let ye=me[0];for(let Ce=0;Ce<de.length;++Ce)ye+=de[Ce]+me[Ce+1];I.push(ye)}return{...this.tokenizer(I),...fe}}}Te(b,"image_processor_class",D.AutoImageProcessor),Te(b,"tokenizer_class",G.AutoTokenizer),Te(b,"uses_processor_config",!0)},"./src/models/image_processors.js":(Oe,R,c)=>{c.r(R),c.d(R,{BeitFeatureExtractor:()=>w.BeitFeatureExtractor,BitImageProcessor:()=>D.BitImageProcessor,CLIPFeatureExtractor:()=>re.CLIPFeatureExtractor,CLIPImageProcessor:()=>re.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>G.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>Q.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>Q.ConvNextImageProcessor,DPTFeatureExtractor:()=>y.DPTFeatureExtractor,DPTImageProcessor:()=>y.DPTImageProcessor,DeiTFeatureExtractor:()=>g.DeiTFeatureExtractor,DeiTImageProcessor:()=>g.DeiTImageProcessor,DetrFeatureExtractor:()=>v.DetrFeatureExtractor,DetrImageProcessor:()=>v.DetrImageProcessor,DonutFeatureExtractor:()=>b.DonutFeatureExtractor,DonutImageProcessor:()=>b.DonutImageProcessor,EfficientNetImageProcessor:()=>C.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>q.GLPNFeatureExtractor,Idefics3ImageProcessor:()=>J.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>fe.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>j.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>X.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>Z.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>Z.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>N.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>N.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>I.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>I.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>_.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>_.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>k.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>k.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>E.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>E.MobileViTImageProcessor,NougatImageProcessor:()=>ee.NougatImageProcessor,OwlViTFeatureExtractor:()=>de.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>de.OwlViTImageProcessor,Owlv2ImageProcessor:()=>Y.Owlv2ImageProcessor,PvtImageProcessor:()=>me.PvtImageProcessor,Qwen2VLImageProcessor:()=>ye.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>Ce.RTDetrImageProcessor,SamImageProcessor:()=>Ee.SamImageProcessor,SegformerFeatureExtractor:()=>Le.SegformerFeatureExtractor,SegformerImageProcessor:()=>Le.SegformerImageProcessor,SiglipImageProcessor:()=>_e.SiglipImageProcessor,Swin2SRImageProcessor:()=>U.Swin2SRImageProcessor,VLMImageProcessor:()=>ie.VLMImageProcessor,ViTFeatureExtractor:()=>ce.ViTFeatureExtractor,ViTImageProcessor:()=>ce.ViTImageProcessor,VitMatteImageProcessor:()=>he.VitMatteImageProcessor,VitPoseImageProcessor:()=>ke.VitPoseImageProcessor,YolosFeatureExtractor:()=>Re.YolosFeatureExtractor,YolosImageProcessor:()=>Re.YolosImageProcessor});var w=c("./src/models/beit/image_processing_beit.js"),D=c("./src/models/bit/image_processing_bit.js"),G=c("./src/models/chinese_clip/image_processing_chinese_clip.js"),re=c("./src/models/clip/image_processing_clip.js"),Q=c("./src/models/convnext/image_processing_convnext.js"),g=c("./src/models/deit/image_processing_deit.js"),v=c("./src/models/detr/image_processing_detr.js"),b=c("./src/models/donut/image_processing_donut.js"),y=c("./src/models/dpt/image_processing_dpt.js"),C=c("./src/models/efficientnet/image_processing_efficientnet.js"),q=c("./src/models/glpn/image_processing_glpn.js"),J=c("./src/models/idefics3/image_processing_idefics3.js"),ie=c("./src/models/janus/image_processing_janus.js"),fe=c("./src/models/jina_clip/image_processing_jina_clip.js"),j=c("./src/models/llava_onevision/image_processing_llava_onevision.js"),X=c("./src/models/mask2former/image_processing_mask2former.js"),Z=c("./src/models/maskformer/image_processing_maskformer.js"),N=c("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),I=c("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),_=c("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),k=c("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),E=c("./src/models/mobilevit/image_processing_mobilevit.js"),ee=c("./src/models/nougat/image_processing_nougat.js"),Y=c("./src/models/owlv2/image_processing_owlv2.js"),de=c("./src/models/owlvit/image_processing_owlvit.js"),me=c("./src/models/pvt/image_processing_pvt.js"),ye=c("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),Ce=c("./src/models/rt_detr/image_processing_rt_detr.js"),Ee=c("./src/models/sam/image_processing_sam.js"),Le=c("./src/models/segformer/image_processing_segformer.js"),_e=c("./src/models/siglip/image_processing_siglip.js"),U=c("./src/models/swin2sr/image_processing_swin2sr.js"),ce=c("./src/models/vit/image_processing_vit.js"),he=c("./src/models/vitmatte/image_processing_vitmatte.js"),ke=c("./src/models/vitpose/image_processing_vitpose.js"),Re=c("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(Oe,R,c)=>{c.r(R),c.d(R,{VLMImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{constructor(re){super({do_pad:!0,pad_size:{width:re.image_size,height:re.image_size},...re}),this.constant_values=this.config.background_color.map(Q=>Q*this.rescale_factor)}pad_image(re,Q,g,v){return super.pad_image(re,Q,g,{constant_values:this.constant_values,center:!0,...v})}}},"./src/models/janus/processing_janus.js":(Oe,R,c)=>{c.r(R),c.d(R,{VLChatProcessor:()=>v});var w=c("./src/base/processing_utils.js"),D=c("./src/models/auto/image_processing_auto.js"),G=c("./src/tokenizers.js"),re=c("./src/utils/core.js"),Q=c("./src/utils/tensor.js"),g=c("./src/utils/image.js");class v extends w.Processor{constructor(y,C){super(y,C),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(y,{images:C=null,chat_template:q="default"}={}){C?Array.isArray(C)||(C=[C]):C=await Promise.all(y.filter(Y=>Y.images).flatMap(Y=>Y.images).map(Y=>g.RawImage.read(Y)));const J=this.tokenizer,ie=J.apply_chat_template(y,{tokenize:!1,add_generation_prompt:!0,chat_template:q}),fe=Y=>J.encode(Y,{add_special_tokens:!1}),j=ie.split(this.image_tag),X=j.length-1;if(C.length!==X)throw new Error(`Number of images provided (${C.length}) does not match number of "${this.image_tag}" image tags (${X})`);const[Z,N,I]=J.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let _=fe(j[0]),k=new Array(_.length).fill(!1);for(let Y=1;Y<j.length;++Y){const de=new Array(this.num_image_tokens).fill(Z),me=fe(j[Y]);_=(0,re.mergeArrays)(_,[N],de,[I],me);const ye=new Array(this.num_image_tokens).fill(!0);k=(0,re.mergeArrays)(k,[!1],ye,[!1],new Array(me.length).fill(!1))}const E=[1,_.length],ee={input_ids:new Q.Tensor("int64",_,E),attention_mask:new Q.Tensor("int64",new Array(_.length).fill(1),E),images_seq_mask:new Q.Tensor("bool",k,E),images_emb_mask:new Q.Tensor("bool",new Array(X*this.num_image_tokens).fill(!0),[1,X,this.num_image_tokens])};if(C&&C.length>0){const Y=await this.image_processor(C);return Y.pixel_values.unsqueeze_(0),{...ee,...Y}}return ee}}Te(v,"image_processor_class",D.AutoImageProcessor),Te(v,"tokenizer_class",G.AutoTokenizer),Te(v,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(Oe,R,c)=>{c.r(R),c.d(R,{JinaCLIPImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{constructor(re){const{resize_mode:Q,fill_color:g,interpolation:v,size:b,...y}=re,C=Q==="squash"?{width:b,height:b}:Q==="shortest"?{shortest_edge:b}:{longest_edge:b},q=v==="bicubic"?3:2;super({...y,size:C,resample:q,do_center_crop:!0,crop_size:b,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(Oe,R,c)=>{c.r(R),c.d(R,{JinaCLIPProcessor:()=>re});var w=c("./src/base/processing_utils.js"),D=c("./src/models/auto/image_processing_auto.js"),G=c("./src/tokenizers.js");class re extends w.Processor{async _call(g=null,v=null,b={}){if(!g&&!v)throw new Error("Either text or images must be provided");const y=g?this.tokenizer(g,b):{},C=v?await this.image_processor(v,b):{};return{...y,...C}}}Te(re,"tokenizer_class",G.AutoTokenizer),Te(re,"image_processor_class",D.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(Oe,R,c)=>{c.r(R),c.d(R,{LlavaOnevisionImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(Oe,R,c)=>{c.r(R),c.d(R,{Mask2FormerImageProcessor:()=>D});var w=c("./src/models/maskformer/image_processing_maskformer.js");class D extends w.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(Oe,R,c)=>{c.r(R),c.d(R,{MaskFormerFeatureExtractor:()=>G,MaskFormerImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{post_process_panoptic_segmentation(...Q){return(0,w.post_process_panoptic_segmentation)(...Q)}post_process_instance_segmentation(...Q){return(0,w.post_process_instance_segmentation)(...Q)}}class G extends D{}},"./src/models/mgp_str/processing_mgp_str.js":(Oe,R,c)=>{c.r(R),c.d(R,{MgpstrProcessor:()=>g});var w=c("./src/base/processing_utils.js"),D=c("./src/models/auto/image_processing_auto.js"),G=c("./src/tokenizers.js"),re=c("./src/utils/maths.js");const Q={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class g extends w.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(b,y){if(!Q.hasOwnProperty(y))throw new Error(`Format ${y} is not supported.`);const[C,q]=Q[y],J=this[C].bind(this),[ie,fe]=b.dims,j=[],X=[],Z=b.tolist();for(let I=0;I<ie;++I){const _=Z[I],k=[],E=[];for(let Y=1;Y<fe;++Y){const[de,me]=(0,re.max)((0,re.softmax)(_[Y]));if(E.push(de),me==q)break;k.push(me)}const ee=E.length>0?E.reduce((Y,de)=>Y*de,1):0;X.push(k),j.push(ee)}return[J(X),j]}char_decode(b){return this.char_tokenizer.batch_decode(b).map(y=>y.replaceAll(" ",""))}bpe_decode(b){return this.bpe_tokenizer.batch_decode(b)}wp_decode(b){return this.wp_tokenizer.batch_decode(b).map(y=>y.replaceAll(" ",""))}batch_decode([b,y,C]){const[q,J]=this._decode_helper(b,"char"),[ie,fe]=this._decode_helper(y,"bpe"),[j,X]=this._decode_helper(C,"wp"),Z=[],N=[];for(let I=0;I<q.length;++I){const[_,k]=(0,re.max)([J[I],fe[I],X[I]]);Z.push([q[I],ie[I],j[I]][k]),N.push(_)}return{generated_text:Z,scores:N,char_preds:q,bpe_preds:ie,wp_preds:j}}static async from_pretrained(...b){const y=await super.from_pretrained(...b),C=await G.AutoTokenizer.from_pretrained("Xenova/gpt2"),q=await G.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return y.components={image_processor:y.image_processor,char_tokenizer:y.tokenizer,bpe_tokenizer:C,wp_tokenizer:q},y}async _call(b,y=null){const C=await this.image_processor(b);return y&&(C.labels=this.tokenizer(y).input_ids),C}}Te(g,"tokenizer_class",G.AutoTokenizer),Te(g,"image_processor_class",D.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(Oe,R,c)=>{c.r(R),c.d(R,{MobileNetV1FeatureExtractor:()=>G,MobileNetV1ImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{}class G extends D{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(Oe,R,c)=>{c.r(R),c.d(R,{MobileNetV2FeatureExtractor:()=>G,MobileNetV2ImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{}class G extends D{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(Oe,R,c)=>{c.r(R),c.d(R,{MobileNetV3FeatureExtractor:()=>G,MobileNetV3ImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{}class G extends D{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(Oe,R,c)=>{c.r(R),c.d(R,{MobileNetV4FeatureExtractor:()=>G,MobileNetV4ImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{}class G extends D{}},"./src/models/mobilevit/image_processing_mobilevit.js":(Oe,R,c)=>{c.r(R),c.d(R,{MobileViTFeatureExtractor:()=>G,MobileViTImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{}class G extends D{}},"./src/models/nougat/image_processing_nougat.js":(Oe,R,c)=>{c.r(R),c.d(R,{NougatImageProcessor:()=>D});var w=c("./src/models/donut/image_processing_donut.js");class D extends w.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(Oe,R,c)=>{c.r(R),c.d(R,{Owlv2ImageProcessor:()=>D});var w=c("./src/models/owlvit/image_processing_owlvit.js");class D extends w.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(Oe,R,c)=>{c.r(R),c.d(R,{OwlViTFeatureExtractor:()=>G,OwlViTImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{post_process_object_detection(...Q){return(0,w.post_process_object_detection)(...Q)}}class G extends D{}},"./src/models/owlvit/processing_owlvit.js":(Oe,R,c)=>{c.r(R),c.d(R,{OwlViTProcessor:()=>re});var w=c("./src/base/processing_utils.js"),D=c("./src/models/auto/image_processing_auto.js"),G=c("./src/tokenizers.js");class re extends w.Processor{}Te(re,"tokenizer_class",G.AutoTokenizer),Te(re,"image_processor_class",D.AutoImageProcessor)},"./src/models/processors.js":(Oe,R,c)=>{c.r(R),c.d(R,{Florence2Processor:()=>w.Florence2Processor,Idefics3Processor:()=>G.Idefics3Processor,JinaCLIPProcessor:()=>Q.JinaCLIPProcessor,MgpstrProcessor:()=>D.MgpstrProcessor,OwlViTProcessor:()=>g.OwlViTProcessor,PyAnnoteProcessor:()=>v.PyAnnoteProcessor,Qwen2VLProcessor:()=>b.Qwen2VLProcessor,SamProcessor:()=>y.SamProcessor,SpeechT5Processor:()=>C.SpeechT5Processor,VLChatProcessor:()=>re.VLChatProcessor,Wav2Vec2ProcessorWithLM:()=>q.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>J.WhisperProcessor});var w=c("./src/models/florence2/processing_florence2.js"),D=c("./src/models/mgp_str/processing_mgp_str.js"),G=c("./src/models/idefics3/processing_idefics3.js"),re=c("./src/models/janus/processing_janus.js"),Q=c("./src/models/jina_clip/processing_jina_clip.js"),g=c("./src/models/owlvit/processing_owlvit.js"),v=c("./src/models/pyannote/processing_pyannote.js"),b=c("./src/models/qwen2_vl/processing_qwen2_vl.js"),y=c("./src/models/sam/processing_sam.js"),C=c("./src/models/speecht5/processing_speecht5.js"),q=c("./src/models/wav2vec2/processing_wav2vec2.js"),J=c("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(Oe,R,c)=>{c.r(R),c.d(R,{PvtImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(Oe,R,c)=>{c.r(R),c.d(R,{PyAnnoteFeatureExtractor:()=>G});var w=c("./src/base/feature_extraction_utils.js"),D=c("./src/utils/tensor.js");class G extends w.FeatureExtractor{async _call(Q){(0,w.validate_audio_inputs)(Q,"PyAnnoteFeatureExtractor"),Q instanceof Float64Array&&(Q=new Float32Array(Q));const g=[1,1,Q.length];return{input_values:new D.Tensor("float32",Q,g)}}}},"./src/models/pyannote/processing_pyannote.js":(Oe,R,c)=>{c.r(R),c.d(R,{PyAnnoteProcessor:()=>re});var w=c("./src/base/processing_utils.js"),D=c("./src/models/auto/feature_extraction_auto.js"),G=c("./src/utils/maths.js");class re extends w.Processor{async _call(g){return await this.feature_extractor(g)}samples_to_frames(g){return(g-this.config.offset)/this.config.step}post_process_speaker_diarization(g,v){const b=v/this.samples_to_frames(v)/this.config.sampling_rate,y=[];for(const C of g.tolist()){const q=[];let J=-1;for(let ie=0;ie<C.length;++ie){const fe=(0,G.softmax)(C[ie]),[j,X]=(0,G.max)(fe),[Z,N]=[ie,ie+1];X!==J?(J=X,q.push({id:X,start:Z,end:N,score:j})):(q.at(-1).end=N,q.at(-1).score+=j)}y.push(q.map(({id:ie,start:fe,end:j,score:X})=>({id:ie,start:fe*b,end:j*b,confidence:X/(j-fe)})))}return y}}Te(re,"feature_extractor_class",D.AutoFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(Oe,R,c)=>{c.r(R),c.d(R,{Qwen2VLImageProcessor:()=>G});var w=c("./src/base/image_processors_utils.js"),D=c("./src/utils/tensor.js");class G extends w.ImageProcessor{async _call(Q,...g){const{pixel_values:v,original_sizes:b,reshaped_input_sizes:y}=await super._call(Q,...g);let C=v;const{temporal_patch_size:q,merge_size:J,patch_size:ie}=this.config;C.dims[0]===1&&(C=(0,D.cat)(Array.from({length:q},()=>C),0));const fe=C.dims[0]/q,j=C.dims[1],X=Math.floor(C.dims[2]/ie),Z=Math.floor(C.dims[3]/ie),N=C.view(fe,q,j,Math.floor(X/J),J,ie,Math.floor(Z/J),J,ie).permute(0,3,6,4,7,2,1,5,8).view(fe*X*Z,j*q*ie*ie),I=new D.Tensor("int64",[fe,X,Z],[1,3]);return{pixel_values:N,image_grid_thw:I,original_sizes:b,reshaped_input_sizes:y}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(Oe,R,c)=>{c.r(R),c.d(R,{Qwen2VLProcessor:()=>re});var w=c("./src/base/processing_utils.js"),D=c("./src/models/auto/image_processing_auto.js"),G=c("./src/tokenizers.js");c("./src/utils/image.js");class re extends w.Processor{async _call(g,v=null,...b){Array.isArray(g)||(g=[g]);let y,C;if(v&&(y=await this.image_processor(v),C=y.image_grid_thw),C){let J=this.image_processor.config.merge_size**2,ie=0;const fe=C.tolist();g=g.map(j=>{for(;j.includes("<|image_pad|>");){const X=Number(fe[ie++].reduce((Z,N)=>Z*N,1n));j=j.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(X/J)))}return j.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(g),...y}}}Te(re,"image_processor_class",D.AutoImageProcessor),Te(re,"tokenizer_class",G.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(Oe,R,c)=>{c.r(R),c.d(R,{RTDetrImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{post_process_object_detection(...re){return(0,w.post_process_object_detection)(...re)}}},"./src/models/sam/image_processing_sam.js":(Oe,R,c)=>{c.r(R),c.d(R,{SamImageProcessor:()=>re});var w=c("./src/base/image_processors_utils.js"),D=c("./src/utils/core.js"),G=c("./src/utils/tensor.js");class re extends w.ImageProcessor{reshape_input_points(g,v,b,y=!1){g=structuredClone(g);let C=(0,D.calculateDimensions)(g);if(C.length===3)y||(C=[1,...C]),g=[g];else if(C.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let q=0;q<g.length;++q){let J=v[q],ie=b[q],fe=[ie[0]/J[0],ie[1]/J[1]];for(let j=0;j<g[q].length;++j)for(let X=0;X<g[q][j].length;++X)for(let Z=0;Z<g[q][j][X].length;++Z)g[q][j][X][Z]*=fe[Z%2]}return new G.Tensor("float32",Float32Array.from(g.flat(1/0)),C)}add_input_labels(g,v){let b=(0,D.calculateDimensions)(g);if(b.length===2)b=[1,...b],g=[g];else if(b.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(b.some((y,C)=>y!==v.dims[C]))throw Error(`The first ${b.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new G.Tensor("int64",g.flat(1/0).map(BigInt),b)}async _call(g,{input_points:v=null,input_labels:b=null,input_boxes:y=null}={}){const C=await super._call(g);if(v&&(C.input_points=this.reshape_input_points(v,C.original_sizes,C.reshaped_input_sizes)),b){if(!C.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");C.input_labels=this.add_input_labels(b,C.input_points)}return y&&(C.input_boxes=this.reshape_input_points(y,C.original_sizes,C.reshaped_input_sizes,!0)),C}async post_process_masks(g,v,b,{mask_threshold:y=0,binarize:C=!0,pad_size:q=null}={}){const J=[];q=q??this.pad_size;const ie=[q.height,q.width];for(let fe=0;fe<v.length;++fe){const j=v[fe],X=b[fe];let Z=await(0,G.interpolate_4d)(g[fe],{mode:"bilinear",size:ie});if(Z=Z.slice(null,null,[0,X[0]],[0,X[1]]),Z=await(0,G.interpolate_4d)(Z,{mode:"bilinear",size:j}),C){const N=Z.data,I=new Uint8Array(N.length);for(let _=0;_<N.length;++_)N[_]>y&&(I[_]=1);Z=new G.Tensor("bool",I,Z.dims)}J.push(Z)}return J}generate_crop_boxes(g,v,{crop_n_layers:b=0,overlap_ratio:y=.3413333333333333,points_per_crop:C=32,crop_n_points_downscale_factor:q=1}={}){}}},"./src/models/sam/processing_sam.js":(Oe,R,c)=>{c.r(R),c.d(R,{SamProcessor:()=>G});var w=c("./src/base/processing_utils.js"),D=c("./src/models/auto/image_processing_auto.js");class G extends w.Processor{async _call(...Q){return await this.image_processor(...Q)}post_process_masks(...Q){return this.image_processor.post_process_masks(...Q)}reshape_input_points(...Q){return this.image_processor.reshape_input_points(...Q)}}Te(G,"image_processor_class",D.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(Oe,R,c)=>{c.r(R),c.d(R,{SeamlessM4TFeatureExtractor:()=>re});var w=c("./src/base/feature_extraction_utils.js"),D=c("./src/utils/tensor.js"),G=c("./src/utils/audio.js");class re extends w.FeatureExtractor{constructor(g){super(g);const v=this.config.sampling_rate,b=(0,G.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(v/2),v,null,"kaldi",!0);for(let y=0;y<b.length;++y)b[y].push(0);this.mel_filters=b,this.window=(0,G.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(g,v){return g=g.map(b=>b*32768),(0,G.spectrogram)(g,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:v,transpose:!0})}async _call(g,{padding:v=!0,pad_to_multiple_of:b=2,do_normalize_per_mel_bins:y=!0,return_attention_mask:C=!0}={}){(0,w.validate_audio_inputs)(g,"SeamlessM4TFeatureExtractor");let q=await this._extract_fbank_features(g,this.config.max_length);if(y){const[I,_]=q.dims,k=q.data;for(let E=0;E<_;++E){let ee=0;for(let ye=0;ye<I;++ye)ee+=k[ye*_+E];const Y=ee/I;let de=0;for(let ye=0;ye<I;++ye)de+=(k[ye*_+E]-Y)**2;de/=I-1;const me=Math.sqrt(de+1e-7);for(let ye=0;ye<I;++ye){const Ce=ye*_+E;k[Ce]=(k[Ce]-Y)/me}}}let J;if(v){const[I,_]=q.dims,k=q.data,E=I%b;if(E>0){const ee=new Float32Array(_*(I+E));ee.set(k),ee.fill(this.config.padding_value,k.length);const Y=I+E;q=new D.Tensor(q.type,ee,[Y,_]),C&&(J=new D.Tensor("int64",new BigInt64Array(Y),[1,Y]),J.data.fill(1n,0,I))}}const[ie,fe]=q.dims,j=this.config.stride;if(ie%j!==0)throw new Error(`The number of frames (${ie}) must be a multiple of the stride (${j}).`);const Z=q.view(1,Math.floor(ie/j),fe*j),N={input_features:Z};if(C){const I=Z.dims[1],_=new BigInt64Array(I);if(J){const k=J.data;for(let E=1,ee=0;E<ie;E+=j,++ee)_[ee]=k[E]}else _.fill(1n);N.attention_mask=new D.Tensor("int64",_,[1,I])}return N}}},"./src/models/segformer/image_processing_segformer.js":(Oe,R,c)=>{c.r(R),c.d(R,{SegformerFeatureExtractor:()=>G,SegformerImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{post_process_semantic_segmentation(...Q){return(0,w.post_process_semantic_segmentation)(...Q)}}class G extends D{}},"./src/models/siglip/image_processing_siglip.js":(Oe,R,c)=>{c.r(R),c.d(R,{SiglipImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(Oe,R,c)=>{c.r(R),c.d(R,{SpeechT5FeatureExtractor:()=>D});var w=c("./src/base/feature_extraction_utils.js");class D extends w.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(Oe,R,c)=>{c.r(R),c.d(R,{SpeechT5Processor:()=>re});var w=c("./src/base/processing_utils.js"),D=c("./src/tokenizers.js"),G=c("./src/models/auto/feature_extraction_auto.js");class re extends w.Processor{async _call(g){return await this.feature_extractor(g)}}Te(re,"tokenizer_class",D.AutoTokenizer),Te(re,"feature_extractor_class",G.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(Oe,R,c)=>{c.r(R),c.d(R,{Swin2SRImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{pad_image(re,Q,g,v={}){const[b,y,C]=Q;return super.pad_image(re,Q,{width:y+(g-y%g)%g,height:b+(g-b%g)%g},{mode:"symmetric",center:!1,constant_values:-1,...v})}}},"./src/models/vit/image_processing_vit.js":(Oe,R,c)=>{c.r(R),c.d(R,{ViTFeatureExtractor:()=>G,ViTImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{}class G extends D{}},"./src/models/vitmatte/image_processing_vitmatte.js":(Oe,R,c)=>{c.r(R),c.d(R,{VitMatteImageProcessor:()=>G});var w=c("./src/base/image_processors_utils.js"),D=c("./src/utils/tensor.js");class G extends w.ImageProcessor{async _call(Q,g){Array.isArray(Q)||(Q=[Q]),Array.isArray(g)||(g=[g]);const v=await Promise.all(Q.map(C=>this.preprocess(C))),b=await Promise.all(g.map(C=>this.preprocess(C,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,D.stack)(v.map((C,q)=>(0,D.cat)([C.pixel_values,b[q].pixel_values],0)),0),original_sizes:v.map(C=>C.original_size),reshaped_input_sizes:v.map(C=>C.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(Oe,R,c)=>{c.r(R),c.d(R,{VitPoseImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{post_process_pose_estimation(re,Q,{threshold:g=null}={}){const v=re.tolist(),[b,y,C,q]=re.dims,J=[];for(let ie=0;ie<b;++ie){const fe=v[ie],j=Q[ie],X=[];for(let Z=0;Z<j.length;++Z){const N=j[Z],I=[],_=[],k=[],E=N.at(-2)/q,ee=N.at(-1)/C;for(let Y=0;Y<fe.length;++Y){let[de,me]=[0,0],ye=0,Ce=-1/0;const Ee=fe[Y];for(let _e=0;_e<Ee.length;++_e){const U=Ee[_e];for(let ce=0;ce<U.length;++ce){const he=U[ce];ye+=he,Ce=Math.max(Ce,he),de+=(ce+.5)*he,me+=_e*he}}if(g!=null&&Ce<g)continue;const Le=[E*de/ye,ee*me/ye];I.push(Le),k.push(Y),_.push(Ce)}X.push({bbox:N,scores:_,labels:k,keypoints:I})}J.push(X)}return J}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(Oe,R,c)=>{c.r(R),c.d(R,{Wav2Vec2FeatureExtractor:()=>G});var w=c("./src/base/feature_extraction_utils.js"),D=c("./src/utils/tensor.js");class G extends w.FeatureExtractor{_zero_mean_unit_var_norm(Q){const v=Q.reduce((y,C)=>y+C,0)/Q.length,b=Q.reduce((y,C)=>y+(C-v)**2,0)/Q.length;return Q.map(y=>(y-v)/Math.sqrt(b+1e-7))}async _call(Q){(0,w.validate_audio_inputs)(Q,"Wav2Vec2FeatureExtractor"),Q instanceof Float64Array&&(Q=new Float32Array(Q));let g=Q;this.config.do_normalize&&(g=this._zero_mean_unit_var_norm(g));const v=[1,g.length];return{input_values:new D.Tensor("float32",g,v),attention_mask:new D.Tensor("int64",new BigInt64Array(g.length).fill(1n),v)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(Oe,R,c)=>{c.r(R),c.d(R,{Wav2Vec2ProcessorWithLM:()=>G});var w=c("./src/base/processing_utils.js"),D=c("./src/models/auto/feature_extraction_auto.js");class G extends w.Processor{async _call(Q){return await this.feature_extractor(Q)}}Te(G,"feature_extractor_class",D.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(Oe,R,c)=>{c.r(R),c.d(R,{WeSpeakerFeatureExtractor:()=>G});var w=c("./src/base/feature_extraction_utils.js");c("./src/utils/tensor.js");var D=c("./src/utils/audio.js");class G extends w.FeatureExtractor{constructor(Q){super(Q);const g=this.config.sampling_rate,v=(0,D.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(g/2),g,null,"kaldi",!0);for(let b=0;b<v.length;++b)v[b].push(0);this.mel_filters=v,this.window=(0,D.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(Q){return Q=Q.map(g=>g*32768),(0,D.spectrogram)(Q,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(Q){(0,w.validate_audio_inputs)(Q,"WeSpeakerFeatureExtractor");const g=(await this._extract_fbank_features(Q)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const v=g.mean(1).data,b=g.data,[y,C,q]=g.dims;for(let J=0;J<y;++J){const ie=J*C*q,fe=J*q;for(let j=0;j<C;++j){const X=ie+j*q;for(let Z=0;Z<q;++Z)b[X+Z]-=v[fe+Z]}}}return{input_features:g}}}},"./src/models/whisper/common_whisper.js":(Oe,R,c)=>{c.r(R),c.d(R,{WHISPER_LANGUAGE_MAPPING:()=>D,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>G,whisper_language_to_code:()=>re});const w=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],D=new Map(w),G=new Map([...w.map(([Q,g])=>[g,Q]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function re(Q){Q=Q.toLowerCase();let g=G.get(Q);if(g===void 0)if(D.has(Q))g=Q;else{const b=Q.length===2?D.keys():D.values();throw new Error(`Language "${Q}" is not supported. Must be one of: ${JSON.stringify(b)}`)}return g}},"./src/models/whisper/feature_extraction_whisper.js":(Oe,R,c)=>{c.r(R),c.d(R,{WhisperFeatureExtractor:()=>re});var w=c("./src/base/feature_extraction_utils.js");c("./src/utils/tensor.js");var D=c("./src/utils/audio.js"),G=c("./src/utils/maths.js");class re extends w.FeatureExtractor{constructor(g){var v;super(g),(v=this.config).mel_filters??(v.mel_filters=(0,D.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,D.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(g){const v=await(0,D.spectrogram)(g,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),b=v.data,y=(0,G.max)(b)[0];for(let C=0;C<b.length;++C)b[C]=(Math.max(b[C],y-8)+4)/4;return v}async _call(g){(0,w.validate_audio_inputs)(g,"WhisperFeatureExtractor");let v;return g.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),v=g.slice(0,this.config.n_samples)):(v=new Float32Array(this.config.n_samples),v.set(g)),{input_features:(await this._extract_fbank_features(v)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(Oe,R,c)=>{c.r(R),c.d(R,{WhisperGenerationConfig:()=>D});var w=c("./src/generation/configuration_utils.js");class D extends w.GenerationConfig{constructor(){super(...arguments);Te(this,"return_timestamps",null);Te(this,"return_token_timestamps",null);Te(this,"num_frames",null);Te(this,"alignment_heads",null);Te(this,"task",null);Te(this,"language",null);Te(this,"no_timestamps_token_id",null);Te(this,"prompt_ids",null);Te(this,"is_multilingual",null);Te(this,"lang_to_id",null);Te(this,"task_to_id",null);Te(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(Oe,R,c)=>{c.r(R),c.d(R,{WhisperProcessor:()=>re});var w=c("./src/models/auto/feature_extraction_auto.js"),D=c("./src/tokenizers.js"),G=c("./src/base/processing_utils.js");class re extends G.Processor{async _call(g){return await this.feature_extractor(g)}}Te(re,"tokenizer_class",D.AutoTokenizer),Te(re,"feature_extractor_class",w.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(Oe,R,c)=>{c.r(R),c.d(R,{YolosFeatureExtractor:()=>G,YolosImageProcessor:()=>D});var w=c("./src/base/image_processors_utils.js");class D extends w.ImageProcessor{post_process_object_detection(...Q){return(0,w.post_process_object_detection)(...Q)}}class G extends D{}},"./src/ops/registry.js":(Oe,R,c)=>{c.r(R),c.d(R,{TensorOpRegistry:()=>re});var w=c("./src/backends/onnx.js"),D=c("./src/utils/tensor.js");const G=async(Q,g,v)=>{const b=await(0,w.createInferenceSession)(new Uint8Array(Q),g);return async y=>{const C=Object.fromEntries(Object.entries(y).map(([J,ie])=>[J,ie.ort_tensor])),q=await b.run(C);return Array.isArray(v)?v.map(J=>new D.Tensor(q[J])):new D.Tensor(q[v])}};class re{static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=G([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=G([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=G([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=G([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=G([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=G([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}}Te(re,"session_options",{})},"./src/pipelines.js":(Oe,R,c)=>{c.r(R),c.d(R,{AudioClassificationPipeline:()=>me,AutomaticSpeechRecognitionPipeline:()=>Ce,DepthEstimationPipeline:()=>Ye,DocumentQuestionAnsweringPipeline:()=>ke,FeatureExtractionPipeline:()=>Y,FillMaskPipeline:()=>Z,ImageClassificationPipeline:()=>Le,ImageFeatureExtractionPipeline:()=>de,ImageSegmentationPipeline:()=>_e,ImageToImagePipeline:()=>Ke,ImageToTextPipeline:()=>Ee,ObjectDetectionPipeline:()=>ce,Pipeline:()=>ie,QuestionAnsweringPipeline:()=>X,SummarizationPipeline:()=>I,Text2TextGenerationPipeline:()=>N,TextClassificationPipeline:()=>fe,TextGenerationPipeline:()=>E,TextToAudioPipeline:()=>Re,TokenClassificationPipeline:()=>j,TranslationPipeline:()=>_,ZeroShotAudioClassificationPipeline:()=>ye,ZeroShotClassificationPipeline:()=>ee,ZeroShotImageClassificationPipeline:()=>U,ZeroShotObjectDetectionPipeline:()=>he,pipeline:()=>le});var w=c("./src/tokenizers.js"),D=c("./src/models.js"),G=c("./src/models/auto/processing_auto.js");c("./src/base/processing_utils.js");var re=c("./src/utils/generic.js"),Q=c("./src/utils/core.js"),g=c("./src/utils/maths.js"),v=c("./src/utils/audio.js"),b=c("./src/utils/tensor.js"),y=c("./src/utils/image.js");async function C(je){return Array.isArray(je)||(je=[je]),await Promise.all(je.map(we=>y.RawImage.read(we)))}async function q(je,we){return Array.isArray(je)||(je=[je]),await Promise.all(je.map($e=>typeof $e=="string"||$e instanceof URL?(0,v.read_audio)($e,we):$e instanceof Float64Array?new Float32Array($e):$e))}function J(je,we){we&&(je=je.map(ze=>ze|0));const[$e,et,Qe,qe]=je;return{xmin:$e,ymin:et,xmax:Qe,ymax:qe}}class ie extends re.Callable{constructor({task:we,model:$e,tokenizer:et=null,processor:Qe=null}){super(),this.task=we,this.model=$e,this.tokenizer=et,this.processor=Qe}async dispose(){await this.model.dispose()}}class fe extends ie{constructor(we){super(we)}async _call(we,{top_k:$e=1}={}){const et=this.tokenizer(we,{padding:!0,truncation:!0}),Qe=await this.model(et),qe=this.model.config.problem_type==="multi_label_classification"?dt=>dt.sigmoid():dt=>new b.Tensor("float32",(0,g.softmax)(dt.data),dt.dims),ze=this.model.config.id2label,nt=[];for(const dt of Qe.logits){const gt=qe(dt),ht=await(0,b.topk)(gt,$e),_t=ht[0].tolist(),ne=ht[1].tolist().map((V,ue)=>({label:ze?ze[V]:`LABEL_${V}`,score:_t[ue]}));$e===1?nt.push(...ne):nt.push(ne)}return Array.isArray(we)||$e===1?nt:nt[0]}}class j extends ie{constructor(we){super(we)}async _call(we,{ignore_labels:$e=["O"]}={}){const et=Array.isArray(we),Qe=this.tokenizer(et?we:[we],{padding:!0,truncation:!0}),ze=(await this.model(Qe)).logits,nt=this.model.config.id2label,dt=[];for(let gt=0;gt<ze.dims[0];++gt){const ht=Qe.input_ids[gt],_t=ze[gt],A=[];for(let ne=0;ne<_t.dims[0];++ne){const V=_t[ne],ue=(0,g.max)(V.data)[1],Ae=nt?nt[ue]:`LABEL_${ue}`;if($e.includes(Ae))continue;const Je=this.tokenizer.decode([ht[ne].item()],{skip_special_tokens:!0});if(Je==="")continue;const ot=(0,g.softmax)(V.data);A.push({entity:Ae,score:ot[ue],index:ne,word:Je})}dt.push(A)}return et?dt:dt[0]}}class X extends ie{constructor(we){super(we)}async _call(we,$e,{top_k:et=1}={}){const Qe=this.tokenizer(we,{text_pair:$e,padding:!0,truncation:!0}),{start_logits:qe,end_logits:ze}=await this.model(Qe),nt=Qe.input_ids.tolist(),dt=Qe.attention_mask.tolist(),gt=this.tokenizer.all_special_ids,ht=[];for(let _t=0;_t<qe.dims[0];++_t){const A=nt[_t],ne=A.findIndex(ut=>ut==this.tokenizer.sep_token_id);dt[_t].map((ut,At)=>ut==1&&(At===0||At>ne&&gt.findIndex(xt=>xt==A[At])===-1));const V=qe[_t].tolist(),ue=ze[_t].tolist();for(let ut=1;ut<V.length;++ut)(dt[_t]==0||ut<=ne||gt.findIndex(At=>At==A[ut])!==-1)&&(V[ut]=-1/0,ue[ut]=-1/0);const Ae=(0,g.softmax)(V).map((ut,At)=>[ut,At]),Je=(0,g.softmax)(ue).map((ut,At)=>[ut,At]);Ae[0][0]=0,Je[0][0]=0;const ot=(0,Q.product)(Ae,Je).filter(ut=>ut[0][1]<=ut[1][1]).map(ut=>[ut[0][1],ut[1][1],ut[0][0]*ut[1][0]]).sort((ut,At)=>At[2]-ut[2]);for(let ut=0;ut<Math.min(ot.length,et);++ut){const[At,xt,Et]=ot[ut],Ct=A.slice(At,xt+1),ar=this.tokenizer.decode(Ct,{skip_special_tokens:!0});ht.push({answer:ar,score:Et})}}return et===1?ht[0]:ht}}class Z extends ie{constructor(we){super(we)}async _call(we,{top_k:$e=5}={}){const et=this.tokenizer(we,{padding:!0,truncation:!0}),{logits:Qe}=await this.model(et),qe=[],ze=et.input_ids.tolist();for(let nt=0;nt<ze.length;++nt){const dt=ze[nt],gt=dt.findIndex(V=>V==this.tokenizer.mask_token_id);if(gt===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const ht=Qe[nt][gt],_t=await(0,b.topk)(new b.Tensor("float32",(0,g.softmax)(ht.data),ht.dims),$e),A=_t[0].tolist(),ne=_t[1].tolist();qe.push(ne.map((V,ue)=>{const Ae=dt.slice();return Ae[gt]=V,{score:A[ue],token:Number(V),token_str:this.tokenizer.model.vocab[V],sequence:this.tokenizer.decode(Ae,{skip_special_tokens:!0})}}))}return Array.isArray(we)?qe:qe[0]}}class N extends ie{constructor($e){super($e);Te(this,"_key","generated_text")}async _call($e,et={}){Array.isArray($e)||($e=[$e]),this.model.config.prefix&&($e=$e.map(gt=>this.model.config.prefix+gt));const Qe=this.model.config.task_specific_params;Qe&&Qe[this.task]&&Qe[this.task].prefix&&($e=$e.map(gt=>Qe[this.task].prefix+gt));const qe=this.tokenizer,ze={padding:!0,truncation:!0};let nt;this instanceof _&&"_build_translation_inputs"in qe?nt=qe._build_translation_inputs($e,ze,et):nt=qe($e,ze);const dt=await this.model.generate({...nt,...et});return qe.batch_decode(dt,{skip_special_tokens:!0}).map(gt=>({[this._key]:gt}))}}class I extends N{constructor($e){super($e);Te(this,"_key","summary_text")}}class _ extends N{constructor($e){super($e);Te(this,"_key","translation_text")}}function k(je){return Array.isArray(je)&&je.every(we=>"role"in we&&"content"in we)}class E extends ie{constructor(we){super(we)}async _call(we,$e={}){let et=!1,Qe=!1,qe;if(typeof we=="string")qe=we=[we];else if(Array.isArray(we)&&we.every(ne=>typeof ne=="string"))et=!0,qe=we;else{if(k(we))we=[we];else if(Array.isArray(we)&&we.every(k))et=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");Qe=!0,qe=we.map(ne=>this.tokenizer.apply_chat_template(ne,{tokenize:!1,add_generation_prompt:!0}))}const ze=$e.add_special_tokens??!1,nt=Qe?!1:$e.return_full_text??!0;this.tokenizer.padding_side="left";const dt=this.tokenizer(qe,{add_special_tokens:ze,padding:!0,truncation:!0}),gt=await this.model.generate({...dt,...$e}),ht=this.tokenizer.batch_decode(gt,{skip_special_tokens:!0});let _t;!nt&&dt.input_ids.dims.at(-1)>0&&(_t=this.tokenizer.batch_decode(dt.input_ids,{skip_special_tokens:!0}).map(ne=>ne.length));const A=Array.from({length:we.length},ne=>[]);for(let ne=0;ne<ht.length;++ne){const V=Math.floor(ne/gt.dims[0]*we.length);_t&&(ht[ne]=ht[ne].slice(_t[V])),A[V].push({generated_text:Qe?[...we[V],{role:"assistant",content:ht[ne]}]:ht[ne]})}return!et&&A.length===1?A[0]:A}}class ee extends ie{constructor(we){super(we),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([$e,et])=>[$e.toLowerCase(),et])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(we,$e,{hypothesis_template:et="This example is {}.",multi_label:Qe=!1}={}){const qe=Array.isArray(we);qe||(we=[we]),Array.isArray($e)||($e=[$e]);const ze=$e.map(gt=>et.replace("{}",gt)),nt=Qe||$e.length===1,dt=[];for(const gt of we){const ht=[];for(const ne of ze){const V=this.tokenizer(gt,{text_pair:ne,padding:!0,truncation:!0}),ue=await this.model(V);nt?ht.push([ue.logits.data[this.contradiction_id],ue.logits.data[this.entailment_id]]):ht.push(ue.logits.data[this.entailment_id])}const A=(nt?ht.map(ne=>(0,g.softmax)(ne)[1]):(0,g.softmax)(ht)).map((ne,V)=>[ne,V]).sort((ne,V)=>V[0]-ne[0]);dt.push({sequence:gt,labels:A.map(ne=>$e[ne[1]]),scores:A.map(ne=>ne[0])})}return qe?dt:dt[0]}}class Y extends ie{constructor(we){super(we)}async _call(we,{pooling:$e="none",normalize:et=!1,quantize:Qe=!1,precision:qe="binary"}={}){const ze=this.tokenizer(we,{padding:!0,truncation:!0}),nt=await this.model(ze);let dt=nt.last_hidden_state??nt.logits??nt.token_embeddings;if($e!=="none")if($e==="mean")dt=(0,b.mean_pooling)(dt,ze.attention_mask);else if($e==="cls")dt=dt.slice(null,0);else throw Error(`Pooling method '${$e}' not supported.`);return et&&(dt=dt.normalize(2,-1)),Qe&&(dt=(0,b.quantize_embeddings)(dt,qe)),dt}}class de extends ie{constructor(we){super(we)}async _call(we,{pool:$e=null}={}){const et=await C(we),{pixel_values:Qe}=await this.processor(et),qe=await this.model({pixel_values:Qe});let ze;if($e){if(!("pooler_output"in qe))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");ze=qe.pooler_output}else ze=qe.last_hidden_state??qe.logits??qe.image_embeds;return ze}}class me extends ie{constructor(we){super(we)}async _call(we,{top_k:$e=5}={}){const et=this.processor.feature_extractor.config.sampling_rate,Qe=await q(we,et),qe=this.model.config.id2label,ze=[];for(const nt of Qe){const dt=await this.processor(nt),ht=(await this.model(dt)).logits[0],_t=await(0,b.topk)(new b.Tensor("float32",(0,g.softmax)(ht.data),ht.dims),$e),A=_t[0].tolist(),V=_t[1].tolist().map((ue,Ae)=>({label:qe?qe[ue]:`LABEL_${ue}`,score:A[Ae]}));ze.push(V)}return Array.isArray(we)?ze:ze[0]}}class ye extends ie{constructor(we){super(we)}async _call(we,$e,{hypothesis_template:et="This is a sound of {}."}={}){const Qe=!Array.isArray(we);Qe&&(we=[we]);const qe=$e.map(ht=>et.replace("{}",ht)),ze=this.tokenizer(qe,{padding:!0,truncation:!0}),nt=this.processor.feature_extractor.config.sampling_rate,dt=await q(we,nt),gt=[];for(const ht of dt){const _t=await this.processor(ht),A=await this.model({...ze,..._t}),ne=(0,g.softmax)(A.logits_per_audio.data);gt.push([...ne].map((V,ue)=>({score:V,label:$e[ue]})))}return Qe?gt[0]:gt}}class Ce extends ie{constructor(we){super(we)}async _call(we,$e={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(we,$e);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(we,$e);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(we,$e){$e.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),$e.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const et=!Array.isArray(we);et&&(we=[we]);const Qe=this.processor.feature_extractor.config.sampling_rate,qe=await q(we,Qe),ze=[];for(const nt of qe){const dt=await this.processor(nt),ht=(await this.model(dt)).logits[0],_t=[];for(const ne of ht)_t.push((0,g.max)(ne.data)[1]);const A=this.tokenizer.decode(_t);ze.push({text:A})}return et?ze[0]:ze}async _call_whisper(we,$e){const et=$e.return_timestamps??!1,Qe=$e.chunk_length_s??0,qe=$e.force_full_sequences??!1;let ze=$e.stride_length_s??null;const nt={...$e};et==="word"&&(nt.return_token_timestamps=!0,nt.return_timestamps=!1);const dt=!Array.isArray(we);dt&&(we=[we]);const gt=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,ht=this.processor.feature_extractor.config.hop_length,_t=this.processor.feature_extractor.config.sampling_rate,A=await q(we,_t),ne=[];for(const V of A){let ue=[];if(Qe>0){if(ze===null)ze=Qe/6;else if(Qe<=ze)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const ot=_t*Qe,ut=_t*ze,At=ot-2*ut;let xt=0;for(;;){const Et=xt+ot,Ct=V.subarray(xt,Et),ar=await this.processor(Ct),Mr=xt===0,Nr=Et>=V.length;if(ue.push({stride:[Ct.length,Mr?0:ut,Nr?0:ut],input_features:ar.input_features,is_last:Nr}),Nr)break;xt+=At}}else ue=[{stride:[V.length,0,0],input_features:(await this.processor(V)).input_features,is_last:!0}];for(const ot of ue){nt.num_frames=Math.floor(ot.stride[0]/ht);const ut=await this.model.generate({inputs:ot.input_features,...nt});et==="word"?(ot.tokens=ut.sequences.tolist()[0],ot.token_timestamps=ut.token_timestamps.tolist()[0].map(At=>(0,g.round)(At,2))):ot.tokens=ut[0].tolist(),ot.stride=ot.stride.map(At=>At/_t)}const[Ae,Je]=this.tokenizer._decode_asr(ue,{time_precision:gt,return_timestamps:et,force_full_sequences:qe});ne.push({text:Ae,...Je})}return dt?ne[0]:ne}}class Ee extends ie{constructor(we){super(we)}async _call(we,$e={}){const et=Array.isArray(we),Qe=await C(we),{pixel_values:qe}=await this.processor(Qe),ze=[];for(const nt of qe){nt.dims=[1,...nt.dims];const dt=await this.model.generate({inputs:nt,...$e}),gt=this.tokenizer.batch_decode(dt,{skip_special_tokens:!0}).map(ht=>({generated_text:ht.trim()}));ze.push(gt)}return et?ze:ze[0]}}class Le extends ie{constructor(we){super(we)}async _call(we,{top_k:$e=5}={}){const et=await C(we),{pixel_values:Qe}=await this.processor(et),qe=await this.model({pixel_values:Qe}),ze=this.model.config.id2label,nt=[];for(const dt of qe.logits){const gt=await(0,b.topk)(new b.Tensor("float32",(0,g.softmax)(dt.data),dt.dims),$e),ht=gt[0].tolist(),A=gt[1].tolist().map((ne,V)=>({label:ze?ze[ne]:`LABEL_${ne}`,score:ht[V]}));nt.push(A)}return Array.isArray(we)?nt:nt[0]}}class _e extends ie{constructor(we){super(we),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(we,{threshold:$e=.5,mask_threshold:et=.5,overlap_mask_area_threshold:Qe=.8,label_ids_to_fuse:qe=null,target_sizes:ze=null,subtask:nt=null}={}){if(Array.isArray(we)&&we.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const gt=await C(we),ht=gt.map(Je=>[Je.height,Je.width]),{pixel_values:_t,pixel_mask:A}=await this.processor(gt),ne=await this.model({pixel_values:_t,pixel_mask:A});let V=null;if(nt!==null)V=this.subtasks_mapping[nt];else for(let[Je,ot]of Object.entries(this.subtasks_mapping))if(ot in this.processor.image_processor){V=this.processor.image_processor[ot].bind(this.processor.image_processor),nt=Je;break}const ue=this.model.config.id2label,Ae=[];if(nt==="panoptic"||nt==="instance"){const Je=V(ne,$e,et,Qe,qe,ze??ht)[0],ot=Je.segmentation;for(const ut of Je.segments_info){const At=new Uint8ClampedArray(ot.data.length);for(let Et=0;Et<ot.data.length;++Et)ot.data[Et]===ut.id&&(At[Et]=255);const xt=new y.RawImage(At,ot.dims[1],ot.dims[0],1);Ae.push({score:ut.score,label:ue[ut.label_id],mask:xt})}}else if(nt==="semantic"){const{segmentation:Je,labels:ot}=V(ne,ze??ht)[0];for(const ut of ot){const At=new Uint8ClampedArray(Je.data.length);for(let Et=0;Et<Je.data.length;++Et)Je.data[Et]===ut&&(At[Et]=255);const xt=new y.RawImage(At,Je.dims[1],Je.dims[0],1);Ae.push({score:null,label:ue[ut],mask:xt})}}else throw Error(`Subtask ${nt} not supported.`);return Ae}}class U extends ie{constructor(we){super(we)}async _call(we,$e,{hypothesis_template:et="This is a photo of {}"}={}){const Qe=Array.isArray(we),qe=await C(we),ze=$e.map(A=>et.replace("{}",A)),nt=this.tokenizer(ze,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:dt}=await this.processor(qe),gt=await this.model({...nt,pixel_values:dt}),ht=this.model.config.model_type==="siglip"?A=>A.sigmoid().data:A=>(0,g.softmax)(A.data),_t=[];for(const A of gt.logits_per_image){const V=[...ht(A)].map((ue,Ae)=>({score:ue,label:$e[Ae]}));V.sort((ue,Ae)=>Ae.score-ue.score),_t.push(V)}return Qe?_t:_t[0]}}class ce extends ie{constructor(we){super(we)}async _call(we,{threshold:$e=.9,percentage:et=!1}={}){const Qe=Array.isArray(we);if(Qe&&we.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const qe=await C(we),ze=et?null:qe.map(ne=>[ne.height,ne.width]),{pixel_values:nt,pixel_mask:dt}=await this.processor(qe),gt=await this.model({pixel_values:nt,pixel_mask:dt}),ht=this.processor.image_processor.post_process_object_detection(gt,$e,ze),_t=this.model.config.id2label,A=ht.map(ne=>ne.boxes.map((V,ue)=>({score:ne.scores[ue],label:_t[ne.classes[ue]],box:J(V,!et)})));return Qe?A:A[0]}}class he extends ie{constructor(we){super(we)}async _call(we,$e,{threshold:et=.1,top_k:Qe=null,percentage:qe=!1}={}){const ze=Array.isArray(we),nt=await C(we),dt=this.tokenizer($e,{padding:!0,truncation:!0}),gt=await this.processor(nt),ht=[];for(let _t=0;_t<nt.length;++_t){const A=nt[_t],ne=qe?null:[[A.height,A.width]],V=gt.pixel_values[_t].unsqueeze_(0),ue=await this.model({...dt,pixel_values:V}),Ae=this.processor.image_processor.post_process_object_detection(ue,et,ne,!0)[0];let Je=Ae.boxes.map((ot,ut)=>({score:Ae.scores[ut],label:$e[Ae.classes[ut]],box:J(ot,!qe)})).sort((ot,ut)=>ut.score-ot.score);Qe!==null&&(Je=Je.slice(0,Qe)),ht.push(Je)}return ze?ht:ht[0]}}class ke extends ie{constructor(we){super(we)}async _call(we,$e,et={}){const Qe=(await C(we))[0],{pixel_values:qe}=await this.processor(Qe),ze=`<s_docvqa><s_question>${$e}</s_question><s_answer>`,nt=this.tokenizer(ze,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,dt=await this.model.generate({inputs:qe,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:nt,...et}),ht=this.tokenizer.batch_decode(dt)[0].match(/<s_answer>(.*?)<\/s_answer>/);let _t=null;return ht&&ht.length>=2&&(_t=ht[1].trim()),[{answer:_t}]}}class Re extends ie{constructor($e){super($e);Te(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=$e.vocoder??null}async _call($e,{speaker_embeddings:et=null}={}){return this.processor?this._call_text_to_spectrogram($e,{speaker_embeddings:et}):this._call_text_to_waveform($e)}async _call_text_to_waveform($e){const et=this.tokenizer($e,{padding:!0,truncation:!0}),{waveform:Qe}=await this.model(et),qe=this.model.config.sampling_rate;return{audio:Qe.data,sampling_rate:qe}}async _call_text_to_spectrogram($e,{speaker_embeddings:et}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await D.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof et=="string"||et instanceof URL)&&(et=new Float32Array(await(await fetch(et)).arrayBuffer())),et instanceof Float32Array)et=new b.Tensor("float32",et,[1,et.length]);else if(!(et instanceof b.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:Qe}=this.tokenizer($e,{padding:!0,truncation:!0}),{waveform:qe}=await this.model.generate_speech(Qe,et,{vocoder:this.vocoder}),ze=this.processor.feature_extractor.config.sampling_rate;return{audio:qe.data,sampling_rate:ze}}}class Ke extends ie{constructor(we){super(we)}async _call(we){const $e=await C(we),et=await this.processor($e),Qe=await this.model(et),qe=[];for(const ze of Qe.reconstruction){const nt=ze.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");qe.push(y.RawImage.fromTensor(nt))}return qe.length>1?qe:qe[0]}}class Ye extends ie{constructor(we){super(we)}async _call(we){const $e=await C(we),et=await this.processor($e),{predicted_depth:Qe}=await this.model(et),qe=[];for(let ze=0;ze<$e.length;++ze){const nt=(0,b.interpolate)(Qe[ze],$e[ze].size.reverse(),"bilinear",!1),dt=nt.mul_(255/(0,g.max)(nt.data)[0]).to("uint8");qe.push({predicted_depth:Qe[ze],depth:y.RawImage.fromTensor(dt)})}return qe.length>1?qe:qe[0]}}const at=Object.freeze({"text-classification":{tokenizer:w.AutoTokenizer,pipeline:fe,model:D.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:w.AutoTokenizer,pipeline:j,model:D.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:w.AutoTokenizer,pipeline:X,model:D.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:w.AutoTokenizer,pipeline:Z,model:D.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:w.AutoTokenizer,pipeline:I,model:D.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:w.AutoTokenizer,pipeline:_,model:D.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:w.AutoTokenizer,pipeline:N,model:D.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:w.AutoTokenizer,pipeline:E,model:D.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:w.AutoTokenizer,pipeline:ee,model:D.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:me,model:D.AutoModelForAudioClassification,processor:G.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:w.AutoTokenizer,pipeline:ye,model:D.AutoModel,processor:G.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:w.AutoTokenizer,pipeline:Ce,model:[D.AutoModelForSpeechSeq2Seq,D.AutoModelForCTC],processor:G.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:w.AutoTokenizer,pipeline:Re,model:[D.AutoModelForTextToWaveform,D.AutoModelForTextToSpectrogram],processor:[G.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:w.AutoTokenizer,pipeline:Ee,model:D.AutoModelForVision2Seq,processor:G.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:Le,model:D.AutoModelForImageClassification,processor:G.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:_e,model:[D.AutoModelForImageSegmentation,D.AutoModelForSemanticSegmentation,D.AutoModelForUniversalSegmentation],processor:G.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:w.AutoTokenizer,pipeline:U,model:D.AutoModel,processor:G.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:ce,model:D.AutoModelForObjectDetection,processor:G.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:w.AutoTokenizer,pipeline:he,model:D.AutoModelForZeroShotObjectDetection,processor:G.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:w.AutoTokenizer,pipeline:ke,model:D.AutoModelForDocumentQuestionAnswering,processor:G.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:Ke,model:D.AutoModelForImageToImage,processor:G.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:Ye,model:D.AutoModelForDepthEstimation,processor:G.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:w.AutoTokenizer,pipeline:Y,model:D.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:G.AutoProcessor,pipeline:de,model:[D.AutoModelForImageFeatureExtraction,D.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),We=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function le(je,we=null,{progress_callback:$e=null,config:et=null,cache_dir:Qe=null,local_files_only:qe=!1,revision:ze="main",device:nt=null,dtype:dt=null,model_file_name:gt=null,session_options:ht={}}={}){je=We[je]??je;const _t=at[je.split("_",1)[0]];if(!_t)throw Error(`Unsupported pipeline: ${je}. Must be one of [${Object.keys(at)}]`);we||(we=_t.default.model,console.log(`No model specified. Using default model: "${we}".`));const A={progress_callback:$e,config:et,cache_dir:Qe,local_files_only:qe,revision:ze,device:nt,dtype:dt,model_file_name:gt,session_options:ht},ne=new Map([["tokenizer",_t.tokenizer],["model",_t.model],["processor",_t.processor]]),V=await He(ne,we,A);V.task=je,(0,Q.dispatchCallback)($e,{status:"ready",task:je,model:we});const ue=_t.pipeline;return new ue(V)}async function He(je,we,$e){const et=Object.create(null),Qe=[];for(const[qe,ze]of je.entries()){if(!ze)continue;let nt;Array.isArray(ze)?nt=new Promise(async(dt,gt)=>{var _t,A;let ht;for(const ne of ze){if(ne===null){dt(null);return}try{dt(await ne.from_pretrained(we,$e));return}catch(V){if((_t=V.message)!=null&&_t.includes("Unsupported model type"))ht=V;else if((A=V.message)!=null&&A.includes("Could not locate file"))ht=V;else{gt(V);return}}}gt(ht)}):nt=ze.from_pretrained(we,$e),et[qe]=nt,Qe.push(nt)}await Promise.all(Qe);for(const[qe,ze]of Object.entries(et))et[qe]=await ze;return et}},"./src/tokenizers.js":(Oe,R,c)=>{c.r(R),c.d(R,{AlbertTokenizer:()=>Ls,AutoTokenizer:()=>_r,BartTokenizer:()=>Bs,BertTokenizer:()=>Ts,BlenderbotSmallTokenizer:()=>jn,BlenderbotTokenizer:()=>Rn,BloomTokenizer:()=>As,CLIPTokenizer:()=>En,CamembertTokenizer:()=>it,CodeGenTokenizer:()=>xn,CodeLlamaTokenizer:()=>tn,CohereTokenizer:()=>Sn,ConvBertTokenizer:()=>Zs,DebertaTokenizer:()=>Ys,DebertaV2Tokenizer:()=>xs,DistilBertTokenizer:()=>ps,ElectraTokenizer:()=>It,EsmTokenizer:()=>Rs,FalconTokenizer:()=>Ln,GPT2Tokenizer:()=>en,GPTNeoXTokenizer:()=>zn,GemmaTokenizer:()=>co,Grok1Tokenizer:()=>rn,HerbertTokenizer:()=>Js,LlamaTokenizer:()=>Tn,M2M100Tokenizer:()=>Ns,MBart50Tokenizer:()=>ts,MBartTokenizer:()=>Sr,MPNetTokenizer:()=>Dn,MarianTokenizer:()=>Ot,MgpstrTokenizer:()=>kn,MobileBertTokenizer:()=>Xs,NllbTokenizer:()=>js,NougatTokenizer:()=>$n,PreTrainedTokenizer:()=>Dt,Qwen2Tokenizer:()=>Bn,RoFormerTokenizer:()=>zs,RobertaTokenizer:()=>Br,SiglipTokenizer:()=>Pn,SpeechT5Tokenizer:()=>Nn,SqueezeBertTokenizer:()=>un,T5Tokenizer:()=>Wr,TokenizerModel:()=>de,VitsTokenizer:()=>Un,Wav2Vec2CTCTokenizer:()=>Cn,WhisperTokenizer:()=>dn,XLMRobertaTokenizer:()=>uo,XLMTokenizer:()=>Mt,is_chinese_char:()=>Z});var w=c("./src/utils/generic.js"),D=c("./src/utils/core.js"),G=c("./src/utils/hub.js"),re=c("./src/utils/maths.js"),Q=c("./src/utils/tensor.js"),g=c("./src/utils/data-structures.js"),v=c("./node_modules/@huggingface/jinja/dist/index.js"),b=c("./src/models/whisper/common_whisper.js");c("./src/utils/constants.js");async function y(xe,T){const K=await Promise.all([(0,G.getModelJSON)(xe,"tokenizer.json",!0,T),(0,G.getModelJSON)(xe,"tokenizer_config.json",!0,T)]);return T.legacy!==null&&(K[1].legacy=T.legacy),K}function C(xe,T){const K=[];let oe=0;for(const Me of xe.matchAll(T)){const Pe=Me[0];oe<Me.index&&K.push(xe.slice(oe,Me.index)),Pe.length>0&&K.push(Pe),oe=Me.index+Pe.length}return oe<xe.length&&K.push(xe.slice(oe)),K}function q(xe,T=!0){if(xe.Regex!==void 0){let K=xe.Regex.replace(/\\([#&~])/g,"$1");for(const[oe,Me]of ee)K=K.replaceAll(oe,Me);return new RegExp(K,"gu")}else if(xe.String!==void 0){const K=(0,D.escapeRegExp)(xe.String);return new RegExp(T?K:`(${K})`,"gu")}else return console.warn("Unknown pattern type:",xe),null}function J(xe){return new Map(Object.entries(xe))}function ie(xe){const T=xe.dims;switch(T.length){case 1:return xe.tolist();case 2:if(T[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return xe.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${T.length}.`)}}function fe(xe){return xe.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function j(xe){return xe.replace(new RegExp("\\p{M}","gu"),"")}function X(xe){return j(xe.toLowerCase())}function Z(xe){return xe>=19968&&xe<=40959||xe>=13312&&xe<=19903||xe>=131072&&xe<=173791||xe>=173824&&xe<=177983||xe>=177984&&xe<=178207||xe>=178208&&xe<=183983||xe>=63744&&xe<=64255||xe>=194560&&xe<=195103}function N(xe,T,K){const oe=[];let Me=0;for(;Me<xe.length;){if(oe.push(xe[Me]),(T.get(xe[Me])??K)!==K){++Me;continue}for(;++Me<xe.length&&(T.get(xe[Me])??K)===K;)T.get(oe.at(-1))!==K&&(oe[oe.length-1]+=xe[Me])}return oe}function I(xe){return xe.match(/\S+/g)||[]}const _="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",k=new RegExp(`^[${_}]+$`,"gu"),E=".,!?…。，、।۔،",ee=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${E}])]+`,` ?[^\\s${E}]+`]]);class Y{constructor(T){this.content=T.content,this.id=T.id,this.single_word=T.single_word??!1,this.lstrip=T.lstrip??!1,this.rstrip=T.rstrip??!1,this.special=T.special??!1,this.normalized=T.normalized??null}}class de extends w.Callable{constructor(T){super(),this.config=T,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(T,...K){switch(T.type){case"WordPiece":return new me(T);case"Unigram":return new ye(T,...K);case"BPE":return new Le(T);default:if(T.vocab)return Array.isArray(T.vocab)?new ye(T,...K):new _e(T,...K);throw new Error(`Unknown TokenizerModel type: ${T.type}`)}}_call(T){return T=this.encode(T),this.fuse_unk&&(T=N(T,this.tokens_to_ids,this.unk_token_id)),T}encode(T){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(T){return T.map(K=>this.tokens_to_ids.get(K)??this.unk_token_id)}convert_ids_to_tokens(T){return T.map(K=>this.vocab[K]??this.unk_token)}}class me extends de{constructor(T){super(T),this.tokens_to_ids=J(T.vocab),this.unk_token_id=this.tokens_to_ids.get(T.unk_token),this.unk_token=T.unk_token,this.max_input_chars_per_word=T.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[K,oe]of this.tokens_to_ids)this.vocab[oe]=K}encode(T){const K=[];for(const oe of T){const Me=[...oe];if(Me.length>this.max_input_chars_per_word){K.push(this.unk_token);continue}let Pe=!1,Ue=0;const lt=[];for(;Ue<Me.length;){let mt=Me.length,pt=null;for(;Ue<mt;){let Tt=Me.slice(Ue,mt).join("");if(Ue>0&&(Tt=this.config.continuing_subword_prefix+Tt),this.tokens_to_ids.has(Tt)){pt=Tt;break}--mt}if(pt===null){Pe=!0;break}lt.push(pt),Ue=mt}Pe?K.push(this.unk_token):K.push(...lt)}return K}}class ye extends de{constructor(T,K){super(T);const oe=T.vocab.length;this.vocab=new Array(oe),this.scores=new Array(oe);for(let Me=0;Me<oe;++Me){const Pe=T.vocab[Me];this.vocab[Me]=Pe[0],this.scores[Me]=Pe[1]}this.unk_token_id=T.unk_id,this.unk_token=this.vocab[T.unk_id],this.tokens_to_ids=new Map(this.vocab.map((Me,Pe)=>[Me,Pe])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=K.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,re.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new g.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(T){const K=T.chars,oe=1;let Me=0;for(;Me<K.length;){let Pe=!1;const Ue=K.slice(Me).join(""),lt=this.trie.commonPrefixSearch(Ue);for(const mt of lt){const pt=this.tokens_to_ids.get(mt),Tt=this.scores[pt],Wt=(0,D.len)(mt);T.insert(Me,Wt,Tt,pt),!Pe&&Wt===oe&&(Pe=!0)}Pe||T.insert(Me,oe,this.unk_score,this.unk_token_id),Me+=oe}}tokenize(T){const K=new g.TokenLattice(T,this.bos_token_id,this.eos_token_id);return this.populateNodes(K),K.tokens()}encode(T){const K=[];for(const oe of T){const Me=this.tokenize(oe);K.push(...Me)}return K}}const Ce=(()=>{const xe=[...Array.from({length:94},(Me,Pe)=>Pe+33),...Array.from({length:12},(Me,Pe)=>Pe+161),...Array.from({length:82},(Me,Pe)=>Pe+174)],T=xe.slice();let K=0;for(let Me=0;Me<256;++Me)xe.includes(Me)||(xe.push(Me),T.push(256+K),K+=1);const oe=T.map(Me=>String.fromCharCode(Me));return Object.fromEntries(xe.map((Me,Pe)=>[Me,oe[Pe]]))})(),Ee=(0,D.reverseDictionary)(Ce);class Le extends de{constructor(T){super(T),this.tokens_to_ids=J(T.vocab),this.unk_token_id=this.tokens_to_ids.get(T.unk_token),this.unk_token=T.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[oe,Me]of this.tokens_to_ids)this.vocab[Me]=oe;const K=Array.isArray(T.merges[0]);this.merges=K?T.merges:T.merges.map(oe=>oe.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((oe,Me)=>[JSON.stringify(oe),Me])),this.end_of_word_suffix=T.end_of_word_suffix,this.continuing_subword_suffix=T.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(T){if(T.length===0)return[];const K=this.cache.get(T);if(K!==void 0)return K;const oe=Array.from(T);this.end_of_word_suffix&&(oe[oe.length-1]+=this.end_of_word_suffix);let Me=[];if(oe.length>1){const Pe=new g.PriorityQueue((mt,pt)=>mt.score<pt.score);let Ue={token:oe[0],bias:0,prev:null,next:null},lt=Ue;for(let mt=1;mt<oe.length;++mt){const pt={bias:mt/oe.length,token:oe[mt],prev:lt,next:null};lt.next=pt,this._add_node(Pe,lt),lt=pt}for(;!Pe.isEmpty();){const mt=Pe.pop();if(mt.deleted||!mt.next||mt.next.deleted)continue;if(mt.deleted=!0,mt.next.deleted=!0,mt.prev){const Tt={...mt.prev};mt.prev.deleted=!0,mt.prev=Tt,Tt.prev?Tt.prev.next=Tt:Ue=Tt}const pt={token:mt.token+mt.next.token,bias:mt.bias,prev:mt.prev,next:mt.next.next};pt.prev?(pt.prev.next=pt,this._add_node(Pe,pt.prev)):Ue=pt,pt.next&&(pt.next.prev=pt,this._add_node(Pe,pt))}for(let mt=Ue;mt!==null;mt=mt.next)Me.push(mt.token)}else Me=oe;if(this.continuing_subword_suffix)for(let Pe=0;Pe<Me.length-1;++Pe)Me[Pe]+=this.continuing_subword_suffix;return this.cache.set(T,Me),Me}_add_node(T,K){const oe=this.bpe_ranks.get(JSON.stringify([K.token,K.next.token]));oe!==void 0&&(K.score=oe+K.bias,T.push(K))}encode(T){const K=[];for(const oe of T){if(this.ignore_merges&&this.tokens_to_ids.has(oe)){K.push(oe);continue}const Me=this.bpe(oe);for(const Pe of Me)if(this.tokens_to_ids.has(Pe))K.push(Pe);else if(this.byte_fallback){const Ue=Array.from(this.text_encoder.encode(Pe)).map(lt=>`<0x${lt.toString(16).toUpperCase().padStart(2,"0")}>`);Ue.every(lt=>this.tokens_to_ids.has(lt))?K.push(...Ue):K.push(this.unk_token)}else K.push(this.unk_token)}return K}}class _e extends de{constructor(T,K){super(T),this.tokens_to_ids=J(K.target_lang?T.vocab[K.target_lang]:T.vocab),this.bos_token=K.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=K.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=K.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=K.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[oe,Me]of this.tokens_to_ids)this.vocab[Me]=oe}encode(T){return T}}class U extends w.Callable{constructor(T){super(),this.config=T}static fromConfig(T){if(T===null)return null;switch(T.type){case"BertNormalizer":return new He(T);case"Precompiled":return new Mr(T);case"Sequence":return new le(T);case"Replace":return new ce(T);case"NFC":return new he(T);case"NFKC":return new ke(T);case"NFKD":return new Re(T);case"Strip":return new Ke(T);case"StripAccents":return new Ye(T);case"Lowercase":return new at(T);case"Prepend":return new We(T);default:throw new Error(`Unknown Normalizer type: ${T.type}`)}}normalize(T){throw Error("normalize should be implemented in subclass.")}_call(T){return this.normalize(T)}}class ce extends U{normalize(T){const K=q(this.config.pattern);return K===null?T:T.replaceAll(K,this.config.content)}}class he extends U{normalize(T){return T=T.normalize("NFC"),T}}class ke extends U{normalize(T){return T=T.normalize("NFKC"),T}}class Re extends U{normalize(T){return T=T.normalize("NFKD"),T}}class Ke extends U{normalize(T){return this.config.strip_left&&this.config.strip_right?T=T.trim():(this.config.strip_left&&(T=T.trimStart()),this.config.strip_right&&(T=T.trimEnd())),T}}class Ye extends U{normalize(T){return T=j(T),T}}class at extends U{normalize(T){return T=T.toLowerCase(),T}}class We extends U{normalize(T){return T=this.config.prepend+T,T}}class le extends U{constructor(T){super(T),this.normalizers=T.normalizers.map(K=>U.fromConfig(K))}normalize(T){return this.normalizers.reduce((K,oe)=>oe.normalize(K),T)}}class He extends U{_tokenize_chinese_chars(T){const K=[];for(let oe=0;oe<T.length;++oe){const Me=T[oe],Pe=Me.charCodeAt(0);Z(Pe)?(K.push(" "),K.push(Me),K.push(" ")):K.push(Me)}return K.join("")}stripAccents(T){return T.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(T){switch(T){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(T)}}_clean_text(T){const K=[];for(const oe of T){const Me=oe.charCodeAt(0);Me===0||Me===65533||this._is_control(oe)||(/^\s$/.test(oe)?K.push(" "):K.push(oe))}return K.join("")}normalize(T){return this.config.clean_text&&(T=this._clean_text(T)),this.config.handle_chinese_chars&&(T=this._tokenize_chinese_chars(T)),this.config.lowercase?(T=T.toLowerCase(),this.config.strip_accents!==!1&&(T=this.stripAccents(T))):this.config.strip_accents&&(T=this.stripAccents(T)),T}}class je extends w.Callable{static fromConfig(T){if(T===null)return null;switch(T.type){case"BertPreTokenizer":return new we(T);case"Sequence":return new Nr(T);case"Whitespace":return new Fr(T);case"WhitespaceSplit":return new as(T);case"Metaspace":return new Ct(T);case"ByteLevel":return new $e(T);case"Split":return new et(T);case"Punctuation":return new Qe(T);case"Digits":return new qe(T);case"Replace":return new qs(T);default:throw new Error(`Unknown PreTokenizer type: ${T.type}`)}}pre_tokenize_text(T,K){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(T,K){return(Array.isArray(T)?T.map(oe=>this.pre_tokenize_text(oe,K)):this.pre_tokenize_text(T,K)).flat()}_call(T,K){return this.pre_tokenize(T,K)}}class we extends je{constructor(T){super(),this.pattern=new RegExp(`[^\\s${_}]+|[${_}]`,"gu")}pre_tokenize_text(T,K){return T.trim().match(this.pattern)||[]}}class $e extends je{constructor(T){super(),this.config=T,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=Ce,this.text_encoder=new TextEncoder}pre_tokenize_text(T,K){return this.add_prefix_space&&!T.startsWith(" ")&&(T=" "+T),(this.use_regex?T.match(this.pattern)||[]:[T]).map(Me=>Array.from(this.text_encoder.encode(Me),Pe=>this.byte_encoder[Pe]).join(""))}}class et extends je{constructor(T){super(),this.config=T,this.pattern=q(this.config.pattern,this.config.invert)}pre_tokenize_text(T,K){var oe;return this.pattern===null?[]:this.config.invert?T.match(this.pattern)||[]:((oe=this.config.behavior)==null?void 0:oe.toLowerCase())==="removed"?T.split(this.pattern).filter(Me=>Me):C(T,this.pattern)}}class Qe extends je{constructor(T){super(),this.config=T,this.pattern=new RegExp(`[^${_}]+|[${_}]+`,"gu")}pre_tokenize_text(T,K){return T.match(this.pattern)||[]}}class qe extends je{constructor(T){super(),this.config=T;const K=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(K,"gu")}pre_tokenize_text(T,K){return T.match(this.pattern)||[]}}class ze extends w.Callable{constructor(T){super(),this.config=T}static fromConfig(T){if(T===null)return null;switch(T.type){case"TemplateProcessing":return new gt(T);case"ByteLevel":return new ht(T);case"RobertaProcessing":return new dt(T);case"BertProcessing":return new nt(T);case"Sequence":return new _t(T);default:throw new Error(`Unknown PostProcessor type: ${T.type}`)}}post_process(T,...K){throw Error("post_process should be implemented in subclass.")}_call(T,...K){return this.post_process(T,...K)}}class nt extends ze{constructor(T){super(T),this.cls=T.cls[0],this.sep=T.sep[0]}post_process(T,K=null,{add_special_tokens:oe=!0}={}){oe&&(T=(0,D.mergeArrays)([this.cls],T,[this.sep]));let Me=new Array(T.length).fill(0);if(K!==null){const Pe=oe&&this instanceof dt?[this.sep]:[],Ue=oe?[this.sep]:[];T=(0,D.mergeArrays)(T,Pe,K,Ue),Me=(0,D.mergeArrays)(Me,new Array(K.length+Pe.length+Ue.length).fill(1))}return{tokens:T,token_type_ids:Me}}}class dt extends nt{}class gt extends ze{constructor(T){super(T),this.single=T.single,this.pair=T.pair}post_process(T,K=null,{add_special_tokens:oe=!0}={}){const Me=K===null?this.single:this.pair;let Pe=[],Ue=[];for(const lt of Me)"SpecialToken"in lt?oe&&(Pe.push(lt.SpecialToken.id),Ue.push(lt.SpecialToken.type_id)):"Sequence"in lt&&(lt.Sequence.id==="A"?(Pe=(0,D.mergeArrays)(Pe,T),Ue=(0,D.mergeArrays)(Ue,new Array(T.length).fill(lt.Sequence.type_id))):lt.Sequence.id==="B"&&(Pe=(0,D.mergeArrays)(Pe,K),Ue=(0,D.mergeArrays)(Ue,new Array(K.length).fill(lt.Sequence.type_id))));return{tokens:Pe,token_type_ids:Ue}}}class ht extends ze{post_process(T,K=null){return K&&(T=(0,D.mergeArrays)(T,K)),{tokens:T}}}class _t extends ze{constructor(T){super(T),this.processors=T.processors.map(K=>ze.fromConfig(K))}post_process(T,K=null,oe={}){let Me;for(const Pe of this.processors)if(Pe instanceof ht)T=Pe.post_process(T).tokens,K&&(K=Pe.post_process(K).tokens);else{const Ue=Pe.post_process(T,K,oe);T=Ue.tokens,Me=Ue.token_type_ids}return{tokens:T,token_type_ids:Me}}}class A extends w.Callable{constructor(T){super(),this.config=T,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=T.trim_offsets}static fromConfig(T){if(T===null)return null;switch(T.type){case"WordPiece":return new Je(T);case"Metaspace":return new ar(T);case"ByteLevel":return new ot(T);case"Replace":return new ne(T);case"ByteFallback":return new V(T);case"Fuse":return new ue(T);case"Strip":return new Ae(T);case"Sequence":return new At(T);case"CTC":return new ut(T);case"BPEDecoder":return new xt(T);default:throw new Error(`Unknown Decoder type: ${T.type}`)}}_call(T){return this.decode(T)}decode(T){return this.decode_chain(T).join("")}decode_chain(T){throw Error("`decode_chain` should be implemented in subclass.")}}class ne extends A{decode_chain(T){const K=q(this.config.pattern);return K===null?T:T.map(oe=>oe.replaceAll(K,this.config.content))}}class V extends A{constructor(T){super(T),this.text_decoder=new TextDecoder}decode_chain(T){const K=[];let oe=[];for(const Me of T){let Pe=null;if(Me.length===6&&Me.startsWith("<0x")&&Me.endsWith(">")){const Ue=parseInt(Me.slice(3,5),16);isNaN(Ue)||(Pe=Ue)}if(Pe!==null)oe.push(Pe);else{if(oe.length>0){const Ue=this.text_decoder.decode(Uint8Array.from(oe));K.push(Ue),oe=[]}K.push(Me)}}if(oe.length>0){const Me=this.text_decoder.decode(Uint8Array.from(oe));K.push(Me),oe=[]}return K}}class ue extends A{decode_chain(T){return[T.join("")]}}class Ae extends A{constructor(T){super(T),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(T){return T.map(K=>{let oe=0;for(let Pe=0;Pe<this.start&&K[Pe]===this.content;++Pe){oe=Pe+1;continue}let Me=K.length;for(let Pe=0;Pe<this.stop;++Pe){const Ue=K.length-Pe-1;if(K[Ue]===this.content){Me=Ue;continue}else break}return K.slice(oe,Me)})}}class Je extends A{constructor(T){super(T),this.cleanup=T.cleanup}decode_chain(T){return T.map((K,oe)=>(oe!==0&&(K.startsWith(this.config.prefix)?K=K.replace(this.config.prefix,""):K=" "+K),this.cleanup&&(K=fe(K)),K))}}class ot extends A{constructor(T){super(T),this.byte_decoder=Ee,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(T){const K=T.join(""),oe=new Uint8Array([...K].map(Pe=>this.byte_decoder[Pe]));return this.text_decoder.decode(oe)}decode_chain(T){const K=[];let oe=[];for(const Me of T)this.added_tokens.find(Pe=>Pe.content===Me)!==void 0?(oe.length>0&&(K.push(this.convert_tokens_to_string(oe)),oe=[]),K.push(Me)):oe.push(Me);return oe.length>0&&K.push(this.convert_tokens_to_string(oe)),K}}class ut extends A{constructor(T){super(T),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(T){if(T.length===0)return"";const K=[T[0]];for(let Pe=1;Pe<T.length;++Pe)T[Pe]!==K.at(-1)&&K.push(T[Pe]);let Me=K.filter(Pe=>Pe!==this.pad_token).join("");return this.cleanup&&(Me=fe(Me).replaceAll(this.word_delimiter_token," ").trim()),Me}decode_chain(T){return[this.convert_tokens_to_string(T)]}}class At extends A{constructor(T){super(T),this.decoders=T.decoders.map(K=>A.fromConfig(K))}decode_chain(T){return this.decoders.reduce((K,oe)=>oe.decode_chain(K),T)}}class xt extends A{constructor(T){super(T),this.suffix=this.config.suffix}decode_chain(T){return T.map((K,oe)=>K.replaceAll(this.suffix,oe===T.length-1?"":" "))}}class Et extends A{decode_chain(T){let K="";for(let oe=1;oe<T.length;oe+=2)K+=T[oe];return[K]}}class Ct extends je{constructor(T){super(),this.addPrefixSpace=T.add_prefix_space,this.replacement=T.replacement,this.strRep=T.str_rep||this.replacement,this.prepend_scheme=T.prepend_scheme??"always"}pre_tokenize_text(T,{section_index:K=void 0}={}){let oe=T.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!oe.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&K===0)&&(oe=this.strRep+oe),[oe]}}class ar extends A{constructor(T){super(T),this.addPrefixSpace=T.add_prefix_space,this.replacement=T.replacement}decode_chain(T){const K=[];for(let oe=0;oe<T.length;++oe){let Me=T[oe].replaceAll(this.replacement," ");this.addPrefixSpace&&oe==0&&Me.startsWith(" ")&&(Me=Me.substring(1)),K.push(Me)}return K}}class Mr extends U{constructor(T){super(T),this.charsmap=T.precompiled_charsmap}normalize(T){return T=T.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),T=T.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),T.includes("～")?T=T.split("～").map(oe=>oe.normalize("NFKC")).join("～"):T=T.normalize("NFKC"),T}}class Nr extends je{constructor(T){super(),this.tokenizers=T.pretokenizers.map(K=>je.fromConfig(K))}pre_tokenize_text(T,K){return this.tokenizers.reduce((oe,Me)=>Me.pre_tokenize(oe,K),[T])}}class Fr extends je{constructor(T){super()}pre_tokenize_text(T,K){return T.match(/\w+|[^\w\s]+/g)||[]}}class as extends je{constructor(T){super()}pre_tokenize_text(T,K){return I(T)}}class qs extends je{constructor(T){super(),this.config=T,this.pattern=q(this.config.pattern),this.content=this.config.content}pre_tokenize_text(T,K){return this.pattern===null?[T]:[T.replaceAll(this.pattern,this.config.content)]}}const Qs=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Ds(xe,T,K,oe){for(const Me of Object.keys(xe)){const Pe=T-xe[Me].length,Ue=K(Me),lt=new Array(Pe).fill(Ue);xe[Me]=oe==="right"?(0,D.mergeArrays)(xe[Me],lt):(0,D.mergeArrays)(lt,xe[Me])}}function vn(xe,T){for(const K of Object.keys(xe))xe[K].length=T}class Dt extends w.Callable{constructor(K,oe){super();Te(this,"return_token_type_ids",!1);Te(this,"padding_side","right");this._tokenizer_config=oe,this.normalizer=U.fromConfig(K.normalizer),this.pre_tokenizer=je.fromConfig(K.pre_tokenizer),this.model=de.fromConfig(K.model,oe),this.post_processor=ze.fromConfig(K.post_processor),this.decoder=A.fromConfig(K.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const Me of K.added_tokens){const Pe=new Y(Me);this.added_tokens.push(Pe),this.model.tokens_to_ids.set(Pe.content,Pe.id),this.model.vocab[Pe.id]=Pe.content,Pe.special&&(this.special_tokens.push(Pe.content),this.all_special_ids.push(Pe.id))}if(this.additional_special_tokens=oe.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((Me,Pe)=>Pe.content.length-Me.content.length).map(Me=>`${Me.lstrip?"\\s*":""}(${(0,D.escapeRegExp)(Me.content)})${Me.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=oe.model_max_length,this.remove_space=oe.remove_space,this.clean_up_tokenization_spaces=oe.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=oe.do_lowercase_and_remove_accent??!1,oe.padding_side&&(this.padding_side=oe.padding_side),this.legacy=!1,this.chat_template=oe.chat_template??null,Array.isArray(this.chat_template)){const Me=Object.create(null);for(const{name:Pe,template:Ue}of this.chat_template){if(typeof Pe!="string"||typeof Ue!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');Me[Pe]=Ue}this.chat_template=Me}this._compiled_template_cache=new Map}getToken(...K){for(const oe of K){const Me=this._tokenizer_config[oe];if(Me)if(typeof Me=="object"){if(Me.__type==="AddedToken")return Me.content;throw Error(`Unknown token: ${Me}`)}else return Me}return null}static async from_pretrained(K,{progress_callback:oe=null,config:Me=null,cache_dir:Pe=null,local_files_only:Ue=!1,revision:lt="main",legacy:mt=null}={}){const pt=await y(K,{progress_callback:oe,config:Me,cache_dir:Pe,local_files_only:Ue,revision:lt,legacy:mt});return new this(...pt)}_call(K,{text_pair:oe=null,add_special_tokens:Me=!0,padding:Pe=!1,truncation:Ue=null,max_length:lt=null,return_tensor:mt=!0,return_token_type_ids:pt=null}={}){const Tt=Array.isArray(K);let Wt;if(Tt){if(K.length===0)throw Error("text array must be non-empty");if(oe!==null){if(Array.isArray(oe)){if(K.length!==oe.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");Wt=K.map((Jt,Cr)=>this._encode_plus(Jt,{text_pair:oe[Cr],add_special_tokens:Me,return_token_type_ids:pt}))}else Wt=K.map(Jt=>this._encode_plus(Jt,{add_special_tokens:Me,return_token_type_ids:pt}))}else{if(K==null)throw Error("text may not be null or undefined");if(Array.isArray(oe))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");Wt=[this._encode_plus(K,{text_pair:oe,add_special_tokens:Me,return_token_type_ids:pt})]}if(lt===null?Pe==="max_length"?lt=this.model_max_length:lt=(0,re.max)(Wt.map(Jt=>Jt.input_ids.length))[0]:Ue||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),lt=Math.min(lt,this.model_max_length??1/0),Pe||Ue)for(let Jt=0;Jt<Wt.length;++Jt)Wt[Jt].input_ids.length!==lt&&(Wt[Jt].input_ids.length>lt?Ue&&vn(Wt[Jt],lt):Pe&&Ds(Wt[Jt],lt,Cr=>Cr==="input_ids"?this.pad_token_id:0,this.padding_side));const gr={};if(mt){if(!(Pe&&Ue)&&Wt.some(Cr=>{var qt;for(const lr of Object.keys(Cr))if(Cr[lr].length!==((qt=Wt[0][lr])==null?void 0:qt.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const Jt=[Wt.length,Wt[0].input_ids.length];for(const Cr of Object.keys(Wt[0]))gr[Cr]=new Q.Tensor("int64",BigInt64Array.from(Wt.flatMap(qt=>qt[Cr]).map(BigInt)),Jt)}else{for(const Jt of Object.keys(Wt[0]))gr[Jt]=Wt.map(Cr=>Cr[Jt]);if(!Tt)for(const Jt of Object.keys(gr))gr[Jt]=gr[Jt][0]}return gr}_encode_text(K){return K===null?null:(this.added_tokens_regex?K.split(this.added_tokens_regex).filter(Pe=>Pe):[K]).map((Pe,Ue)=>{if(this.added_tokens.find(mt=>mt.content===Pe)!==void 0)return Pe;{if(this.remove_space===!0&&(Pe=Pe.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(Pe=X(Pe)),this.normalizer!==null&&(Pe=this.normalizer(Pe)),Pe.length===0)return[];const mt=this.pre_tokenizer!==null?this.pre_tokenizer(Pe,{section_index:Ue}):[Pe];return this.model(mt)}}).flat()}_encode_plus(K,{text_pair:oe=null,add_special_tokens:Me=!0,return_token_type_ids:Pe=null}={}){const{tokens:Ue,token_type_ids:lt}=this._tokenize_helper(K,{pair:oe,add_special_tokens:Me}),mt=this.model.convert_tokens_to_ids(Ue),pt={input_ids:mt,attention_mask:new Array(mt.length).fill(1)};return(Pe??this.return_token_type_ids)&&lt&&(pt.token_type_ids=lt),pt}_tokenize_helper(K,{pair:oe=null,add_special_tokens:Me=!1}={}){const Pe=this._encode_text(K),Ue=this._encode_text(oe);return this.post_processor?this.post_processor(Pe,Ue,{add_special_tokens:Me}):{tokens:(0,D.mergeArrays)(Pe??[],Ue??[])}}tokenize(K,{pair:oe=null,add_special_tokens:Me=!1}={}){return this._tokenize_helper(K,{pair:oe,add_special_tokens:Me}).tokens}encode(K,{text_pair:oe=null,add_special_tokens:Me=!0,return_token_type_ids:Pe=null}={}){return this._encode_plus(K,{text_pair:oe,add_special_tokens:Me,return_token_type_ids:Pe}).input_ids}batch_decode(K,oe={}){return K instanceof Q.Tensor&&(K=K.tolist()),K.map(Me=>this.decode(Me,oe))}decode(K,oe={}){if(K instanceof Q.Tensor&&(K=ie(K)),!Array.isArray(K)||K.length===0||!(0,D.isIntegralNumber)(K[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(K,oe)}decode_single(K,{skip_special_tokens:oe=!1,clean_up_tokenization_spaces:Me=null}){let Pe=this.model.convert_ids_to_tokens(K);oe&&(Pe=Pe.filter(lt=>!this.special_tokens.includes(lt)));let Ue=this.decoder?this.decoder(Pe):Pe.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Ue=Ue.replaceAll(this.decoder.end_of_word_suffix," "),oe&&(Ue=Ue.trim())),(Me??this.clean_up_tokenization_spaces)&&(Ue=fe(Ue)),Ue}get_chat_template({chat_template:K=null,tools:oe=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const Me=this.chat_template;if(K!==null&&Object.hasOwn(Me,K))K=Me[K];else if(K===null)if(oe!==null&&"tool_use"in Me)K=Me.tool_use;else if("default"in Me)K=Me.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(Me).sort()}.`)}else if(K===null)if(this.chat_template)K=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return K}apply_chat_template(K,{tools:oe=null,documents:Me=null,chat_template:Pe=null,add_generation_prompt:Ue=!1,tokenize:lt=!0,padding:mt=!1,truncation:pt=!1,max_length:Tt=null,return_tensor:Wt=!0,return_dict:gr=!1,tokenizer_kwargs:Jt={},...Cr}={}){if(Pe=this.get_chat_template({chat_template:Pe,tools:oe}),typeof Pe!="string")throw Error(`chat_template must be a string, but got ${typeof Pe}`);let qt=this._compiled_template_cache.get(Pe);qt===void 0&&(qt=new v.Template(Pe),this._compiled_template_cache.set(Pe,qt));const lr=Object.create(null);for(const Gr of Qs){const De=this.getToken(Gr);De&&(lr[Gr]=De)}const hs=qt.render({messages:K,add_generation_prompt:Ue,tools:oe,documents:Me,...lr,...Cr});if(lt){const Gr=this._call(hs,{add_special_tokens:!1,padding:mt,truncation:pt,max_length:Tt,return_tensor:Wt,...Jt});return gr?Gr:Gr.input_ids}return hs}}class Ts extends Dt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Ls extends Dt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Xs extends Dt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class un extends Dt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Ys extends Dt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class xs extends Dt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Js extends Dt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Zs extends Dt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class zs extends Dt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class ps extends Dt{}class it extends Dt{}class Mt extends Dt{constructor(K,oe){super(K,oe);Te(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class It extends Dt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Wr extends Dt{}class en extends Dt{}class Bs extends Dt{}class Sr extends Dt{constructor(T,K){super(T,K),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(oe=>this.languageRegex.test(oe)),this.lang_to_token=oe=>oe}_build_translation_inputs(T,K,oe){return Es(this,T,K,oe)}}class ts extends Sr{}class Br extends Dt{}class As extends Dt{}const br="▁";class Tn extends Dt{constructor(K,oe){super(K,oe);Te(this,"padding_side","left");this.legacy=oe.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new Ct({replacement:br,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(K){if(K===null)return null;if(this.legacy||K.length===0)return super._encode_text(K);let oe=super._encode_text(br+K.replaceAll(br," "));return oe.length>1&&oe[0]===br&&this.special_tokens.includes(oe[1])&&(oe=oe.slice(1)),oe}}class tn extends Dt{}class uo extends Dt{}class Dn extends Dt{}class Ln extends Dt{}class zn extends Dt{}class Rs extends Dt{}class Bn extends Dt{}class co extends Dt{}class rn extends Dt{}function Es(xe,T,K,oe){if(!("language_codes"in xe)||!Array.isArray(xe.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in xe)||!(xe.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in xe)||typeof xe.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const Me=oe.src_lang,Pe=oe.tgt_lang;if(!xe.language_codes.includes(Pe))throw new Error(`Target language code "${Pe}" is not valid. Must be one of: {${xe.language_codes.join(", ")}}`);if(Me!==void 0){if(!xe.language_codes.includes(Me))throw new Error(`Source language code "${Me}" is not valid. Must be one of: {${xe.language_codes.join(", ")}}`);for(const Ue of xe.post_processor.config.single)if("SpecialToken"in Ue&&xe.languageRegex.test(Ue.SpecialToken.id)){Ue.SpecialToken.id=xe.lang_to_token(Me);break}}return oe.forced_bos_token_id=xe.model.convert_tokens_to_ids([xe.lang_to_token(Pe)])[0],xe._call(T,K)}class js extends Dt{constructor(T,K){super(T,K),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(oe=>this.languageRegex.test(oe)),this.lang_to_token=oe=>oe}_build_translation_inputs(T,K,oe){return Es(this,T,K,oe)}}class Ns extends Dt{constructor(T,K){super(T,K),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(oe=>this.languageRegex.test(oe)).map(oe=>oe.slice(2,-2)),this.lang_to_token=oe=>`__${oe}__`}_build_translation_inputs(T,K,oe){return Es(this,T,K,oe)}}class dn extends Dt{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(T,{return_timestamps:K=!1,return_language:oe=!1,time_precision:Me=null,force_full_sequences:Pe=!0}={}){if(Me===null)throw Error("Must specify time_precision");let Ue=null;const lt=K==="word";function mt(){return{language:Ue,timestamp:[null,null],text:""}}const pt=[];let Tt=mt(),Wt=0;const gr=this.timestamp_begin;let Jt=[],Cr=[],qt=!1,lr=null;const hs=new Set(this.all_special_ids);for(const wr of T){const qr=wr.tokens,ms=lt?wr.token_timestamps:null;let Ps=null,Ut=gr;if("stride"in wr){const[or,yr,wt]=wr.stride;if(Wt-=yr,lr=or-wt,yr&&(Ut=yr/Me+gr),wt)for(let Zt=qr.length-1;Zt>=0;--Zt){const Dr=Number(qr[Zt]);if(Dr>=gr){if(Ps!==null&&(Dr-gr)*Me<lr)break;Ps=Dr}}}let Rr=[],us=[];for(let or=0;or<qr.length;++or){const yr=Number(qr[or]);if(hs.has(yr)){const wt=this.decode([yr]),Zt=b.WHISPER_LANGUAGE_MAPPING.get(wt.slice(2,-2));if(Zt!==void 0){if(Ue!==null&&Zt!==Ue&&!K){Jt.push(Rr);const Dr=this.findLongestCommonSequence(Jt)[0],Is=this.decode(Dr);Tt.text=Is,pt.push(Tt),Jt=[],Rr=[],Tt=mt()}Ue=Tt.language=Zt}}else if(yr>=gr){const wt=(yr-gr)*Me+Wt,Zt=(0,re.round)(wt,2);if(Ps!==null&&yr>=Ps)qt=!0;else if(qt||Jt.length>0&&yr<Ut)qt=!1;else if(Tt.timestamp[0]===null)Tt.timestamp[0]=Zt;else if(Zt!==Tt.timestamp[0]){Tt.timestamp[1]=Zt,Jt.push(Rr),lt&&Cr.push(us);const[Dr,Is]=this.findLongestCommonSequence(Jt,Cr),Fs=this.decode(Dr);Tt.text=Fs,lt&&(Tt.words=this.collateWordTimestamps(Dr,Is,Ue)),pt.push(Tt),Jt=[],Rr=[],Cr=[],us=[],Tt=mt()}}else if(Rr.push(yr),lt){let wt=(0,re.round)(ms[or]+Wt,2),Zt;if(or+1<ms.length){Zt=(0,re.round)(ms[or+1]+Wt,2);const Dr=this.decode([yr]);k.test(Dr)&&(Zt=(0,re.round)(Math.min(wt+Me,Zt),2))}else Zt=null;us.push([wt,Zt])}}if("stride"in wr){const[or,yr,wt]=wr.stride;Wt+=or-wt}Rr.length>0?(Jt.push(Rr),lt&&Cr.push(us)):Jt.every(or=>or.length===0)&&(Tt=mt(),Jt=[],Rr=[],Cr=[],us=[])}if(Jt.length>0){if(Pe&&K)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[wr,qr]=this.findLongestCommonSequence(Jt,Cr),ms=this.decode(wr);Tt.text=ms,lt&&(Tt.words=this.collateWordTimestamps(wr,qr,Ue)),pt.push(Tt)}let Gr=Object.create(null);const De=pt.map(wr=>wr.text).join("");if(K||oe){for(let wr=0;wr<pt.length;++wr){const qr=pt[wr];K||delete qr.timestamp,oe||delete qr.language}if(lt){const wr=[];for(const qr of pt)for(const ms of qr.words)wr.push(ms);Gr={chunks:wr}}else Gr={chunks:pt}}return[De,Gr]}findLongestCommonSequence(T,K=null){let oe=T[0],Me=oe.length,Pe=[];const Ue=Array.isArray(K)&&K.length>0;let lt=Ue?[]:null,mt=Ue?K[0]:null;for(let pt=1;pt<T.length;++pt){const Tt=T[pt];let Wt=0,gr=[Me,Me,0,0];const Jt=Tt.length;for(let wr=1;wr<Me+Jt;++wr){const qr=Math.max(0,Me-wr),ms=Math.min(Me,Me+Jt-wr),Ps=oe.slice(qr,ms),Ut=Math.max(0,wr-Me),Rr=Math.min(Jt,wr),us=Tt.slice(Ut,Rr);if(Ps.length!==us.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let or;Ue?or=Ps.filter((Zt,Dr)=>Zt===us[Dr]&&mt[qr+Dr]<=K[pt][Ut+Dr]).length:or=Ps.filter((Zt,Dr)=>Zt===us[Dr]).length;const yr=wr/1e4,wt=or/wr+yr;or>1&&wt>Wt&&(Wt=wt,gr=[qr,ms,Ut,Rr])}const[Cr,qt,lr,hs]=gr,Gr=Math.floor((qt+Cr)/2),De=Math.floor((hs+lr)/2);Pe.push(...oe.slice(0,Gr)),oe=Tt.slice(De),Me=oe.length,Ue&&(lt.push(...mt.slice(0,Gr)),mt=K[pt].slice(De))}return Pe.push(...oe),Ue?(lt.push(...mt),[Pe,lt]):[Pe,[]]}collateWordTimestamps(T,K,oe){const[Me,Pe,Ue]=this.combineTokensIntoWords(T,oe),lt=[];for(let mt=0;mt<Me.length;++mt){const pt=Ue[mt];lt.push({text:Me[mt],timestamp:[K[pt.at(0)][0],K[pt.at(-1)][1]]})}return lt}combineTokensIntoWords(T,K,oe=`"'“¡¿([{-`,Me=`"'.。,，!！?？:：”)]}、`){K=K??"english";let Pe,Ue,lt;return["chinese","japanese","thai","lao","myanmar"].includes(K)?[Pe,Ue,lt]=this.splitTokensOnUnicode(T):[Pe,Ue,lt]=this.splitTokensOnSpaces(T),this.mergePunctuations(Pe,Ue,lt,oe,Me)}decode(T,K){let oe;return K!=null&&K.decode_with_timestamps?(T instanceof Q.Tensor&&(T=ie(T)),oe=this.decodeWithTimestamps(T,K)):oe=super.decode(T,K),oe}decodeWithTimestamps(T,K){const oe=(K==null?void 0:K.time_precision)??.02,Me=Array.from(this.all_special_ids).at(-1)+1;let Pe=[[]];for(let Ue of T)if(Ue=Number(Ue),Ue>=Me){const lt=((Ue-Me)*oe).toFixed(2);Pe.push(`<|${lt}|>`),Pe.push([])}else Pe[Pe.length-1].push(Ue);return Pe=Pe.map(Ue=>typeof Ue=="string"?Ue:super.decode(Ue,K)),Pe.join("")}splitTokensOnUnicode(T){const K=this.decode(T,{decode_with_timestamps:!0}),oe="�",Me=[],Pe=[],Ue=[];let lt=[],mt=[],pt=0;for(let Tt=0;Tt<T.length;++Tt){const Wt=T[Tt];lt.push(Wt),mt.push(Tt);const gr=this.decode(lt,{decode_with_timestamps:!0});(!gr.includes(oe)||K[pt+gr.indexOf(oe)]===oe)&&(Me.push(gr),Pe.push(lt),Ue.push(mt),lt=[],mt=[],pt+=gr.length)}return[Me,Pe,Ue]}splitTokensOnSpaces(T){const[K,oe,Me]=this.splitTokensOnUnicode(T),Pe=[],Ue=[],lt=[],mt=new RegExp(`^[${_}]$`,"gu");for(let pt=0;pt<K.length;++pt){const Tt=K[pt],Wt=oe[pt],gr=Me[pt],Jt=Wt[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),Cr=Tt.startsWith(" "),qt=Tt.trim(),lr=mt.test(qt);if(Jt||Cr||lr||Pe.length===0)Pe.push(Tt),Ue.push(Wt),lt.push(gr);else{const hs=Pe.length-1;Pe[hs]+=Tt,Ue[hs].push(...Wt),lt[hs].push(...gr)}}return[Pe,Ue,lt]}mergePunctuations(T,K,oe,Me,Pe){const Ue=structuredClone(T),lt=structuredClone(K),mt=structuredClone(oe);let pt=Ue.length-2,Tt=Ue.length-1;for(;pt>=0;)Ue[pt].startsWith(" ")&&Me.includes(Ue[pt].trim())?(Ue[Tt]=Ue[pt]+Ue[Tt],lt[Tt]=(0,D.mergeArrays)(lt[pt],lt[Tt]),mt[Tt]=(0,D.mergeArrays)(mt[pt],mt[Tt]),Ue[pt]="",lt[pt]=[],mt[pt]=[]):Tt=pt,--pt;for(pt=0,Tt=1;Tt<Ue.length;)!Ue[pt].endsWith(" ")&&Pe.includes(Ue[Tt])?(Ue[pt]+=Ue[Tt],lt[pt]=(0,D.mergeArrays)(lt[pt],lt[Tt]),mt[pt]=(0,D.mergeArrays)(mt[pt],mt[Tt]),Ue[Tt]="",lt[Tt]=[],mt[Tt]=[]):pt=Tt,++Tt;return[Ue.filter(Wt=>Wt),lt.filter(Wt=>Wt.length>0),mt.filter(Wt=>Wt.length>0)]}}class xn extends Dt{}class En extends Dt{}class Pn extends Dt{}class Ot extends Dt{constructor(T,K){super(T,K),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(oe=>this.languageRegex.test(oe)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(T){if(T===null)return null;const[K,...oe]=T.trim().split(this.languageRegex);if(oe.length===0)return super._encode_text(K);if(oe.length===2){const[Me,Pe]=oe;return this.supported_language_codes.includes(Me)||console.warn(`Unsupported language code "${Me}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,D.mergeArrays)([Me],super._encode_text(Pe))}}}class Cn extends Dt{}class Rn extends Dt{}class jn extends Dt{}class Nn extends Dt{}class $n extends Dt{}class Un extends Dt{constructor(T,K){super(T,K),this.decoder=new Et({})}}class Sn extends Dt{}class kn extends Dt{}class _r{static async from_pretrained(T,{progress_callback:K=null,config:oe=null,cache_dir:Me=null,local_files_only:Pe=!1,revision:Ue="main",legacy:lt=null}={}){var gr;const[mt,pt]=await y(T,{progress_callback:K,config:oe,cache_dir:Me,local_files_only:Pe,revision:Ue,legacy:lt}),Tt=((gr=pt.tokenizer_class)==null?void 0:gr.replace(/Fast$/,""))??"PreTrainedTokenizer";let Wt=this.TOKENIZER_CLASS_MAPPING[Tt];return Wt||(console.warn(`Unknown tokenizer class "${Tt}", attempting to construct from base class.`),Wt=Dt),new Wt(mt,pt)}}Te(_r,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:Wr,DistilBertTokenizer:ps,CamembertTokenizer:it,DebertaTokenizer:Ys,DebertaV2Tokenizer:xs,BertTokenizer:Ts,HerbertTokenizer:Js,ConvBertTokenizer:Zs,RoFormerTokenizer:zs,XLMTokenizer:Mt,ElectraTokenizer:It,MobileBertTokenizer:Xs,SqueezeBertTokenizer:un,AlbertTokenizer:Ls,GPT2Tokenizer:en,BartTokenizer:Bs,MBartTokenizer:Sr,MBart50Tokenizer:ts,RobertaTokenizer:Br,WhisperTokenizer:dn,CodeGenTokenizer:xn,CLIPTokenizer:En,SiglipTokenizer:Pn,MarianTokenizer:Ot,BloomTokenizer:As,NllbTokenizer:js,M2M100Tokenizer:Ns,LlamaTokenizer:Tn,CodeLlamaTokenizer:tn,XLMRobertaTokenizer:uo,MPNetTokenizer:Dn,FalconTokenizer:Ln,GPTNeoXTokenizer:zn,EsmTokenizer:Rs,Wav2Vec2CTCTokenizer:Cn,BlenderbotTokenizer:Rn,BlenderbotSmallTokenizer:jn,SpeechT5Tokenizer:Nn,NougatTokenizer:$n,VitsTokenizer:Un,Qwen2Tokenizer:Bn,GemmaTokenizer:co,Grok1Tokenizer:rn,CohereTokenizer:Sn,MgpstrTokenizer:kn,PreTrainedTokenizer:Dt})},"./src/utils/audio.js":(Oe,R,c)=>{c.r(R),c.d(R,{hamming:()=>b,hanning:()=>v,mel_filter_bank:()=>j,read_audio:()=>Q,spectrogram:()=>_,window_function:()=>k});var w=c("./src/utils/hub.js"),D=c("./src/utils/maths.js"),G=c("./src/utils/core.js"),re=c("./src/utils/tensor.js");async function Q(E,ee){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const Y=await(await(0,w.getFile)(E)).arrayBuffer(),de=new AudioContext({sampleRate:ee});typeof ee>"u"&&console.warn(`No sampling rate provided, using default of ${de.sampleRate}Hz.`);const me=await de.decodeAudioData(Y);let ye;if(me.numberOfChannels===2){const Ce=Math.sqrt(2),Ee=me.getChannelData(0),Le=me.getChannelData(1);ye=new Float32Array(Ee.length);for(let _e=0;_e<me.length;++_e)ye[_e]=Ce*(Ee[_e]+Le[_e])/2}else ye=me.getChannelData(0);return ye}function g(E,ee){if(E<1)return new Float64Array;if(E===1)return new Float64Array([1]);const Y=1-ee,de=2*Math.PI/(E-1),me=new Float64Array(E);for(let ye=0;ye<E;++ye)me[ye]=ee-Y*Math.cos(ye*de);return me}function v(E){return g(E,.5)}function b(E){return g(E,.54)}const y={htk:E=>2595*Math.log10(1+E/700),kaldi:E=>1127*Math.log(1+E/700),slaney:(E,ee=1e3,Y=15,de=27/Math.log(6.4))=>E>=ee?Y+Math.log(E/ee)*de:3*E/200};function C(E,ee="htk"){const Y=y[ee];if(!Y)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof E=="number"?Y(E):E.map(de=>Y(de))}const q={htk:E=>700*(10**(E/2595)-1),kaldi:E=>700*(Math.exp(E/1127)-1),slaney:(E,ee=1e3,Y=15,de=Math.log(6.4)/27)=>E>=Y?ee*Math.exp(de*(E-Y)):200*E/3};function J(E,ee="htk"){const Y=q[ee];if(!Y)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof E=="number"?Y(E):E.map(de=>Y(de))}function ie(E,ee){const Y=Float64Array.from({length:ee.length-1},(Ce,Ee)=>ee[Ee+1]-ee[Ee]),de=Array.from({length:E.length},()=>new Array(ee.length));for(let Ce=0;Ce<E.length;++Ce){const Ee=de[Ce];for(let Le=0;Le<ee.length;++Le)Ee[Le]=ee[Le]-E[Ce]}const me=ee.length-2,ye=Array.from({length:me},()=>new Array(E.length));for(let Ce=0;Ce<E.length;++Ce){const Ee=de[Ce];for(let Le=0;Le<me;++Le){const _e=-Ee[Le]/Y[Le],U=Ee[Le+2]/Y[Le+1];ye[Le][Ce]=Math.max(0,Math.min(_e,U))}}return ye}function fe(E,ee,Y){const de=(ee-E)/(Y-1);return Float64Array.from({length:Y},(me,ye)=>E+de*ye)}function j(E,ee,Y,de,me,ye=null,Ce="htk",Ee=!1){if(ye!==null&&ye!=="slaney")throw new Error('norm must be one of null or "slaney"');const Le=C(Y,Ce),_e=C(de,Ce),U=fe(Le,_e,ee+2);let ce=J(U,Ce),he;if(Ee){const Re=me/(E*2);he=C(Float64Array.from({length:E},(Ke,Ye)=>Ye*Re),Ce),ce=U}else he=fe(0,Math.floor(me/2),E);const ke=ie(he,ce);if(ye!==null&&ye==="slaney")for(let Re=0;Re<ee;++Re){const Ke=ke[Re],Ye=2/(ce[Re+2]-ce[Re]);for(let at=0;at<E;++at)Ke[at]*=Ye}return ke}function X(E,ee,Y){const de=new E.constructor(E.length+ee+Y),me=E.length-1;for(let ye=0;ye<E.length;++ye)de[ee+ye]=E[ye];for(let ye=1;ye<=ee;++ye)de[ee-ye]=E[(0,G.calculateReflectOffset)(ye,me)];for(let ye=1;ye<=Y;++ye)de[me+ee+ye]=E[(0,G.calculateReflectOffset)(me-ye,me)];return de}function Z(E,ee,Y,de,me){if(Y<=0)throw new Error("reference must be greater than zero");if(de<=0)throw new Error("min_value must be greater than zero");Y=Math.max(de,Y);const ye=Math.log10(Y);for(let Ce=0;Ce<E.length;++Ce)E[Ce]=ee*Math.log10(Math.max(de,E[Ce])-ye);if(me!==null){if(me<=0)throw new Error("db_range must be greater than zero");const Ce=(0,D.max)(E)[0]-me;for(let Ee=0;Ee<E.length;++Ee)E[Ee]=Math.max(E[Ee],Ce)}return E}function N(E,ee=1,Y=1e-5,de=null){return Z(E,20,ee,Y,de)}function I(E,ee=1,Y=1e-10,de=null){return Z(E,10,ee,Y,de)}async function _(E,ee,Y,de,{fft_length:me=null,power:ye=1,center:Ce=!0,pad_mode:Ee="reflect",onesided:Le=!0,preemphasis:_e=null,mel_filters:U=null,mel_floor:ce=1e-10,log_mel:he=null,reference:ke=1,min_value:Re=1e-10,db_range:Ke=null,remove_dc_offset:Ye=null,min_num_frames:at=null,max_num_frames:We=null,do_pad:le=!0,transpose:He=!1}={}){const je=ee.length;if(me===null&&(me=Y),Y>me)throw Error(`frame_length (${Y}) may not be larger than fft_length (${me})`);if(je!==Y)throw new Error(`Length of the window (${je}) must equal frame_length (${Y})`);if(de<=0)throw new Error("hop_length must be greater than zero");if(ye===null&&U!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(Ce){if(Ee!=="reflect")throw new Error(`pad_mode="${Ee}" not implemented yet.`);const A=Math.floor((me-1)/2)+1;E=X(E,A,A)}let we=Math.floor(1+Math.floor((E.length-Y)/de));at!==null&&we<at&&(we=at);const $e=Le?Math.floor(me/2)+1:me;let et=we,Qe=we;We!==null&&(We>we?le&&(Qe=We):Qe=et=We);const qe=new D.FFT(me),ze=new Float64Array(me),nt=new Float64Array(qe.outputBufferSize),dt=new Float32Array($e*Qe);for(let A=0;A<et;++A){const ne=A*de,V=Math.min(E.length-ne,Y);V!==Y&&ze.fill(0,0,Y);for(let ue=0;ue<V;++ue)ze[ue]=E[ne+ue];if(Ye){let ue=0;for(let Je=0;Je<V;++Je)ue+=ze[Je];const Ae=ue/V;for(let Je=0;Je<V;++Je)ze[Je]-=Ae}if(_e!==null){for(let ue=V-1;ue>=1;--ue)ze[ue]-=_e*ze[ue-1];ze[0]*=1-_e}for(let ue=0;ue<ee.length;++ue)ze[ue]*=ee[ue];qe.realTransform(nt,ze);for(let ue=0;ue<$e;++ue){const Ae=ue<<1;dt[ue*Qe+A]=nt[Ae]**2+nt[Ae+1]**2}}if(ye!==null&&ye!==2){const A=2/ye;for(let ne=0;ne<dt.length;++ne)dt[ne]**=A}const gt=U.length;let ht=await(0,re.matmul)(new re.Tensor("float32",U.flat(),[gt,$e]),new re.Tensor("float32",dt,[$e,Qe]));He&&(ht=ht.transpose(1,0));const _t=ht.data;for(let A=0;A<_t.length;++A)_t[A]=Math.max(ce,_t[A]);if(ye!==null&&he!==null){const A=Math.min(_t.length,et*gt);switch(he){case"log":for(let ne=0;ne<A;++ne)_t[ne]=Math.log(_t[ne]);break;case"log10":for(let ne=0;ne<A;++ne)_t[ne]=Math.log10(_t[ne]);break;case"dB":if(ye===1)N(_t,ke,Re,Ke);else if(ye===2)I(_t,ke,Re,Ke);else throw new Error(`Cannot use log_mel option '${he}' with power ${ye}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${he}'`)}}return ht}function k(E,ee,{periodic:Y=!0,frame_length:de=null,center:me=!0}={}){const ye=Y?E+1:E;let Ce;switch(ee){case"boxcar":Ce=new Float64Array(ye).fill(1);break;case"hann":case"hann_window":Ce=v(ye);break;case"hamming":Ce=b(ye);break;case"povey":Ce=v(ye).map(Ee=>Math.pow(Ee,.85));break;default:throw new Error(`Unknown window type ${ee}.`)}if(Y&&(Ce=Ce.subarray(0,E)),de===null)return Ce;if(E>de)throw new Error(`Length of the window (${E}) may not be larger than frame_length (${de})`);return Ce}},"./src/utils/constants.js":(Oe,R,c)=>{c.r(R),c.d(R,{CHAT_TEMPLATE_NAME:()=>g,CONFIG_NAME:()=>D,FEATURE_EXTRACTOR_NAME:()=>G,GENERATION_CONFIG_NAME:()=>v,GITHUB_ISSUE_URL:()=>w,IMAGE_PROCESSOR_NAME:()=>re,PROCESSOR_NAME:()=>Q});const w="https://github.com/huggingface/transformers.js/issues/new/choose",D="config.json",G="preprocessor_config.json",re=G,Q="processor_config.json",g="chat_template.json",v="generation_config.json"},"./src/utils/core.js":(Oe,R,c)=>{c.r(R),c.d(R,{calculateDimensions:()=>v,calculateReflectOffset:()=>q,count:()=>fe,dispatchCallback:()=>w,escapeRegExp:()=>G,isIntegralNumber:()=>Q,isNullishDimension:()=>g,isTypedArray:()=>re,len:()=>ie,mergeArrays:()=>y,pick:()=>J,pop:()=>b,product:()=>C,reverseDictionary:()=>D});function w(j,X){j&&j(X)}function D(j){return Object.fromEntries(Object.entries(j).map(([X,Z])=>[Z,X]))}function G(j){return j.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function re(j){var X,Z,N;return((N=(Z=(X=j==null?void 0:j.prototype)==null?void 0:X.__proto__)==null?void 0:Z.constructor)==null?void 0:N.name)==="TypedArray"}function Q(j){return Number.isInteger(j)||typeof j=="bigint"}function g(j){return j==null||j===-1}function v(j){const X=[];let Z=j;for(;Array.isArray(Z);)X.push(Z.length),Z=Z[0];return X}function b(j,X,Z=void 0){const N=j[X];if(N!==void 0)return delete j[X],N;if(Z===void 0)throw Error(`Key ${X} does not exist in object.`);return Z}function y(...j){return Array.prototype.concat.apply([],j)}function C(...j){return j.reduce((X,Z)=>X.flatMap(N=>Z.map(I=>[N,I])))}function q(j,X){return Math.abs((j+X)%(2*X)-X)}function J(j,X){return Object.assign({},...X.map(Z=>{if(j[Z]!==void 0)return{[Z]:j[Z]}}))}function ie(j){let X=0;for(const Z of j)++X;return X}function fe(j,X){let Z=0;for(const N of j)N===X&&++Z;return Z}},"./src/utils/data-structures.js":(Oe,R,c)=>{c.r(R),c.d(R,{CharTrie:()=>D,PriorityQueue:()=>w,TokenLattice:()=>re});class w{constructor(v=(y,C)=>y>C,b=1/0){this._heap=[],this._comparator=v,this._maxSize=b}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...v){return this.extend(v)}extend(v){for(const b of v)if(this.size<this._maxSize)this._heap.push(b),this._siftUp();else{const y=this._smallest();this._comparator(b,this._heap[y])&&(this._heap[y]=b,this._siftUpFrom(y))}return this.size}pop(){const v=this.peek(),b=this.size-1;return b>0&&this._swap(0,b),this._heap.pop(),this._siftDown(),v}replace(v){const b=this.peek();return this._heap[0]=v,this._siftDown(),b}_parent(v){return(v+1>>>1)-1}_left(v){return(v<<1)+1}_right(v){return v+1<<1}_greater(v,b){return this._comparator(this._heap[v],this._heap[b])}_swap(v,b){const y=this._heap[v];this._heap[v]=this._heap[b],this._heap[b]=y}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(v){for(;v>0&&this._greater(v,this._parent(v));)this._swap(v,this._parent(v)),v=this._parent(v)}_siftDown(){let v=0;for(;this._left(v)<this.size&&this._greater(this._left(v),v)||this._right(v)<this.size&&this._greater(this._right(v),v);){const b=this._right(v)<this.size&&this._greater(this._right(v),this._left(v))?this._right(v):this._left(v);this._swap(v,b),v=b}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class D{constructor(){this.root=G.default()}extend(v){for(const b of v)this.push(b)}push(v){let b=this.root;for(const y of v){let C=b.children.get(y);C===void 0&&(C=G.default(),b.children.set(y,C)),b=C}b.isLeaf=!0}*commonPrefixSearch(v){let b=this.root;if(b===void 0)return;let y="";for(const C of v){if(y+=C,b=b.children.get(C),b===void 0)return;b.isLeaf&&(yield y)}}}class G{constructor(v,b){this.isLeaf=v,this.children=b}static default(){return new G(!1,new Map)}}class re{constructor(v,b,y){this.chars=Array.from(v),this.len=this.chars.length,this.bosTokenId=b,this.eosTokenId=y,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const C=new Q(this.bosTokenId,0,0,0,0),q=new Q(this.eosTokenId,1,this.len,0,0);this.nodes.push(C.clone()),this.nodes.push(q.clone()),this.beginNodes[this.len].push(q),this.endNodes[0].push(C)}insert(v,b,y,C){const q=this.nodes.length,J=new Q(C,q,v,b,y);this.beginNodes[v].push(J),this.endNodes[v+b].push(J),this.nodes.push(J)}viterbi(){const v=this.len;let b=0;for(;b<=v;){if(this.beginNodes[b].length==0)return[];for(let ie of this.beginNodes[b]){ie.prev=null;let fe=0,j=null;for(let X of this.endNodes[b]){const Z=X.backtraceScore+ie.score;(j===null||Z>fe)&&(j=X.clone(),fe=Z)}if(j!==null)ie.prev=j,ie.backtraceScore=fe;else return[]}++b}const y=[],q=this.beginNodes[v][0].prev;if(q===null)return[];let J=q.clone();for(;J.prev!==null;)y.push(J.clone()),J=J.clone().prev.clone();return y.reverse(),y}piece(v){return this.chars.slice(v.pos,v.pos+v.length).join("")}tokens(){return this.viterbi().map(b=>this.piece(b))}tokenIds(){return this.viterbi().map(b=>b.tokenId)}}class Q{constructor(v,b,y,C,q){this.tokenId=v,this.nodeId=b,this.pos=y,this.length=C,this.score=q,this.prev=null,this.backtraceScore=0}clone(){const v=new Q(this.tokenId,this.nodeId,this.pos,this.length,this.score);return v.prev=this.prev,v.backtraceScore=this.backtraceScore,v}}},"./src/utils/devices.js":(Oe,R,c)=>{c.r(R),c.d(R,{DEVICE_TYPES:()=>w});const w=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(Oe,R,c)=>{c.r(R),c.d(R,{DATA_TYPES:()=>re,DEFAULT_DEVICE_DTYPE_MAPPING:()=>Q,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>g,isWebGpuFp16Supported:()=>G});var w=c("./src/env.js"),D=c("./src/utils/devices.js");const G=function(){let v;return async function(){if(v===void 0)if(!w.apis.IS_WEBGPU_AVAILABLE)v=!1;else try{v=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{v=!1}return v}}(),re=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),Q=Object.freeze({[D.DEVICE_TYPES.wasm]:re.q8}),g=Object.freeze({[re.fp32]:"",[re.fp16]:"_fp16",[re.int8]:"_int8",[re.uint8]:"_uint8",[re.q8]:"_quantized",[re.q4]:"_q4",[re.q4f16]:"_q4f16",[re.bnb4]:"_bnb4"})},"./src/utils/generic.js":(Oe,R,c)=>{c.r(R),c.d(R,{Callable:()=>w});const w=class{constructor(){let D=function(...G){return D._call(...G)};return Object.setPrototypeOf(D,new.target.prototype)}_call(...D){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(Oe,R,c)=>{c.r(R),c.d(R,{getFile:()=>b,getModelFile:()=>ie,getModelJSON:()=>fe});var w=c("?7a2c"),D=c("?a42a"),G=c("./src/env.js"),re=c("./src/utils/core.js");const Q={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class g{constructor(N){if(this.filePath=N,this.headers=new Headers,this.exists=w.existsSync(N),this.exists){this.status=200,this.statusText="OK";let I=w.statSync(N);this.headers.set("content-length",I.size.toString()),this.updateContentType();let _=this;this.body=new ReadableStream({start(k){_.arrayBuffer().then(E=>{k.enqueue(new Uint8Array(E)),k.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const N=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",Q[N]??"application/octet-stream")}clone(){let N=new g(this.filePath);return N.exists=this.exists,N.status=this.status,N.statusText=this.statusText,N.headers=new Headers(this.headers),N}async arrayBuffer(){return(await w.promises.readFile(this.filePath)).buffer}async blob(){const N=await w.promises.readFile(this.filePath);return new Blob([N],{type:this.headers.get("content-type")})}async text(){return await w.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function v(Z,N=null,I=null){let _;try{_=new URL(Z)}catch{return!1}return!(N&&!N.includes(_.protocol)||I&&!I.includes(_.hostname))}async function b(Z){var N;if(G.env.useFS&&!v(Z,["http:","https:","blob:"]))return new g(Z);if(typeof process<"u"&&((N=process==null?void 0:process.release)==null?void 0:N.name)==="node"){const I=!!(gs!=null&&gs.TESTING_REMOTELY),_=G.env.version,k=new Headers;if(k.set("User-Agent",`transformers.js/${_}; is_ci/${I};`),v(Z,["http:","https:"],["huggingface.co","hf.co"])){const ee=(gs==null?void 0:gs.HF_TOKEN)??(gs==null?void 0:gs.HF_ACCESS_TOKEN);ee&&k.set("Authorization",`Bearer ${ee}`)}return fetch(Z,{headers:k})}else return fetch(Z)}const y={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function C(Z,N,I){if(!I)return null;const _=y[Z]??`Error (${Z}) occurred while trying to load file`;throw Error(`${_}: "${N}".`)}class q{constructor(N){this.path=N}async match(N){let I=D.join(this.path,N),_=new g(I);if(_.exists)return _}async put(N,I){const _=Buffer.from(await I.arrayBuffer());let k=D.join(this.path,N);try{await w.promises.mkdir(D.dirname(k),{recursive:!0}),await w.promises.writeFile(k,_)}catch(E){console.warn("An error occurred while writing the file to cache:",E)}}}async function J(Z,...N){for(let I of N)try{let _=await Z.match(I);if(_)return _}catch{continue}}async function ie(Z,N,I=!0,_={}){if(!G.env.allowLocalModels){if(_.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!G.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,re.dispatchCallback)(_.progress_callback,{status:"initiate",name:Z,file:N});let k;if(!k&&G.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{k=await caches.open("transformers-cache")}catch(he){console.warn("An error occurred while opening the browser cache:",he)}}if(!k&&G.env.useFSCache&&(k=new q(_.cache_dir??G.env.cacheDir)),!k&&G.env.useCustomCache){if(!G.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!G.env.customCache.match||!G.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");k=G.env.customCache}const E=_.revision??"main";let ee=X(Z,N),Y=X(G.env.localModelPath,ee),de=X(G.env.remoteHost,G.env.remotePathTemplate.replaceAll("{model}",Z).replaceAll("{revision}",encodeURIComponent(E)),N),me=E==="main"?ee:X(Z,E,N),ye,Ce=k instanceof q?me:de,Ee=!1,Le;k&&(Le=await J(k,Y,Ce));const _e=Le!==void 0;if(Le===void 0){if(G.env.allowLocalModels)if(v(ee,["http:","https:"])){if(_.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${ee}.`);if(!G.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${ee}.`)}else try{Le=await b(Y),ye=Y}catch(ke){console.warn(`Unable to load from local path "${Y}": "${ke}"`)}if(Le===void 0||Le.status===404){if(_.local_files_only||!G.env.allowRemoteModels){if(I)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${Y}".`);return null}if(Le=await b(de),Le.status!==200)return C(Le.status,de,I);ye=Ce}Ee=k&&typeof Response<"u"&&Le instanceof Response&&Le.status===200}(0,re.dispatchCallback)(_.progress_callback,{status:"download",name:Z,file:N});const U={status:"progress",name:Z,file:N};let ce;return _.progress_callback?_e&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(ce=new Uint8Array(await Le.arrayBuffer()),(0,re.dispatchCallback)(_.progress_callback,{...U,progress:100,loaded:ce.length,total:ce.length})):ce=await j(Le,he=>{(0,re.dispatchCallback)(_.progress_callback,{...U,...he})}):ce=new Uint8Array(await Le.arrayBuffer()),Ee&&ye&&await k.match(ye)===void 0&&await k.put(ye,new Response(ce,{headers:Le.headers})).catch(he=>{console.warn(`Unable to add response to browser cache: ${he}.`)}),(0,re.dispatchCallback)(_.progress_callback,{status:"done",name:Z,file:N}),ce}async function fe(Z,N,I=!0,_={}){let k=await ie(Z,N,I,_);if(k===null)return{};let ee=new TextDecoder("utf-8").decode(k);return JSON.parse(ee)}async function j(Z,N){const I=Z.headers.get("Content-Length");I===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let _=parseInt(I??"0"),k=new Uint8Array(_),E=0;const ee=Z.body.getReader();async function Y(){const{done:de,value:me}=await ee.read();if(de)return;let ye=E+me.length;if(ye>_){_=ye;let Ee=new Uint8Array(_);Ee.set(k),k=Ee}k.set(me,E),E=ye;const Ce=E/_*100;return N({progress:Ce,loaded:E,total:_}),Y()}return await Y(),k}function X(...Z){return Z=Z.map((N,I)=>(I&&(N=N.replace(new RegExp("^/"),"")),I!==Z.length-1&&(N=N.replace(new RegExp("/$"),"")),N)),Z.join("/")}},"./src/utils/image.js":(Oe,R,c)=>{c.r(R),c.d(R,{RawImage:()=>J,load_image:()=>ie});var w=c("./src/utils/core.js"),D=c("./src/utils/hub.js"),G=c("./src/env.js"),re=c("./src/utils/tensor.js"),Q=c("?2b25");let g,v,b;const y=G.apis.IS_BROWSER_ENV||G.apis.IS_WEBWORKER_ENV;if(y)g=(fe,j)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(fe,j)},b=self.createImageBitmap,v=self.ImageData;else if(Q)b=async fe=>{const X=(await fe.metadata()).channels,{data:Z,info:N}=await fe.rotate().raw().toBuffer({resolveWithObject:!0}),I=new J(new Uint8ClampedArray(Z),N.width,N.height,N.channels);return X!==void 0&&X!==N.channels&&I.convert(X),I};else throw new Error("Unable to load image processing library.");const C={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},q=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class J{constructor(j,X,Z,N){this.data=j,this.width=X,this.height=Z,this.channels=N}get size(){return[this.width,this.height]}static async read(j){if(j instanceof J)return j;if(typeof j=="string"||j instanceof URL)return await this.fromURL(j);throw new Error(`Unsupported input type: ${typeof j}`)}static fromCanvas(j){if(!y)throw new Error("fromCanvas() is only supported in browser environments.");const Z=j.getContext("2d").getImageData(0,0,j.width,j.height).data;return new J(Z,j.width,j.height,4)}static async fromURL(j){const X=await(0,D.getFile)(j);if(X.status!==200)throw new Error(`Unable to read image from "${j}" (${X.status} ${X.statusText})`);const Z=await X.blob();return this.fromBlob(Z)}static async fromBlob(j){if(y){const X=await b(j),Z=g(X.width,X.height).getContext("2d");return Z.drawImage(X,0,0),new this(Z.getImageData(0,0,X.width,X.height).data,X.width,X.height,4)}else{const X=Q(await j.arrayBuffer());return await b(X)}}static fromTensor(j,X="CHW"){if(j.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${j.dims.length} dimensions.`);if(X==="CHW")j=j.transpose(1,2,0);else if(X!=="HWC")throw new Error(`Unsupported channel format: ${X}`);if(!(j.data instanceof Uint8ClampedArray||j.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${j.type}`);switch(j.dims[2]){case 1:case 2:case 3:case 4:return new J(j.data,j.dims[1],j.dims[0],j.dims[2]);default:throw new Error(`Unsupported number of channels: ${j.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const j=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let X=0,Z=0;X<this.data.length;X+=this.channels){const N=this.data[X],I=this.data[X+1],_=this.data[X+2];j[Z++]=Math.round(.2989*N+.587*I+.114*_)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(j,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const j=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let X=0,Z=0;X<this.data.length;++X)j[Z++]=this.data[X],j[Z++]=this.data[X],j[Z++]=this.data[X];break;case 4:for(let X=0,Z=0;X<this.data.length;X+=4)j[Z++]=this.data[X],j[Z++]=this.data[X+1],j[Z++]=this.data[X+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(j,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const j=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let X=0,Z=0;X<this.data.length;++X)j[Z++]=this.data[X],j[Z++]=this.data[X],j[Z++]=this.data[X],j[Z++]=255;break;case 3:for(let X=0,Z=0;X<this.data.length;X+=3)j[Z++]=this.data[X],j[Z++]=this.data[X+1],j[Z++]=this.data[X+2],j[Z++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(j,this.width,this.height,4)}async resize(j,X,{resample:Z=2}={}){if(this.width===j&&this.height===X)return this;let N=C[Z]??Z;const I=(0,w.isNullishDimension)(j),_=(0,w.isNullishDimension)(X);if(I&&_)return this;if(I?j=X/this.height*this.width:_&&(X=j/this.width*this.height),y){const k=this.channels,E=this.toCanvas(),ee=g(j,X).getContext("2d");return ee.drawImage(E,0,0,j,X),new J(ee.getImageData(0,0,j,X).data,j,X,4).convert(k)}else{let k=this.toSharp();switch(N){case"box":case"hamming":(N==="box"||N==="hamming")&&(console.warn(`Resampling method ${N} is not yet supported. Using bilinear instead.`),N="bilinear");case"nearest":case"bilinear":case"bicubic":k=k.affine([j/this.width,0,0,X/this.height],{interpolator:N});break;case"lanczos":k=k.resize({width:j,height:X,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${N} is not supported.`)}return await b(k)}}async pad([j,X,Z,N]){if(j=Math.max(j,0),X=Math.max(X,0),Z=Math.max(Z,0),N=Math.max(N,0),j===0&&X===0&&Z===0&&N===0)return this;if(y){const I=this.channels,_=this.toCanvas(),k=this.width+j+X,E=this.height+Z+N,ee=g(k,E).getContext("2d");return ee.drawImage(_,0,0,this.width,this.height,j,Z,this.width,this.height),new J(ee.getImageData(0,0,k,E).data,k,E,4).convert(I)}else{const I=this.toSharp().extend({left:j,right:X,top:Z,bottom:N});return await b(I)}}async crop([j,X,Z,N]){if(j=Math.max(j,0),X=Math.max(X,0),Z=Math.min(Z,this.width-1),N=Math.min(N,this.height-1),j===0&&X===0&&Z===this.width-1&&N===this.height-1)return this;const I=Z-j+1,_=N-X+1;if(y){const k=this.channels,E=this.toCanvas(),ee=g(I,_).getContext("2d");return ee.drawImage(E,j,X,I,_,0,0,I,_),new J(ee.getImageData(0,0,I,_).data,I,_,4).convert(k)}else{const k=this.toSharp().extract({left:j,top:X,width:I,height:_});return await b(k)}}async center_crop(j,X){if(this.width===j&&this.height===X)return this;const Z=(this.width-j)/2,N=(this.height-X)/2;if(y){const I=this.channels,_=this.toCanvas(),k=g(j,X).getContext("2d");let E=0,ee=0,Y=0,de=0;return Z>=0?E=Z:Y=-Z,N>=0?ee=N:de=-N,k.drawImage(_,E,ee,j,X,Y,de,j,X),new J(k.getImageData(0,0,j,X).data,j,X,4).convert(I)}else{let I=this.toSharp();if(Z>=0&&N>=0)I=I.extract({left:Math.floor(Z),top:Math.floor(N),width:j,height:X});else if(Z<=0&&N<=0){const _=Math.floor(-N),k=Math.floor(-Z);I=I.extend({top:_,left:k,right:j-this.width-k,bottom:X-this.height-_})}else{let _=[0,0],k=0;N<0?(_[0]=Math.floor(-N),_[1]=X-this.height-_[0]):k=Math.floor(N);let E=[0,0],ee=0;Z<0?(E[0]=Math.floor(-Z),E[1]=j-this.width-E[0]):ee=Math.floor(Z),I=I.extend({top:_[0],bottom:_[1],left:E[0],right:E[1]}).extract({left:ee,top:k,width:j,height:X})}return await b(I)}}async toBlob(j="image/png",X=1){if(!y)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:j,quality:X})}toTensor(j="CHW"){let X=new re.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(j!=="HWC")if(j==="CHW")X=X.permute(2,0,1);else throw new Error(`Unsupported channel format: ${j}`);return X}toCanvas(){if(!y)throw new Error("toCanvas() is only supported in browser environments.");const j=this.clone().rgba(),X=g(j.width,j.height),Z=new v(j.data,j.width,j.height);return X.getContext("2d").putImageData(Z,0,0),X}split(){const{data:j,width:X,height:Z,channels:N}=this,I=j.constructor,_=j.length/N,k=Array.from({length:N},()=>new I(_));for(let E=0;E<_;++E){const ee=N*E;for(let Y=0;Y<N;++Y)k[Y][E]=j[ee+Y]}return k.map(E=>new J(E,X,Z,1))}_update(j,X,Z,N=null){return this.data=j,this.width=X,this.height=Z,N!==null&&(this.channels=N),this}clone(){return new J(this.data.slice(),this.width,this.height,this.channels)}convert(j){if(this.channels===j)return this;switch(j){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(j){if(y){if(G.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const X=j.split(".").pop().toLowerCase(),Z=q.get(X)??"image/png",N=await this.toBlob(Z),I=URL.createObjectURL(N),_=document.createElement("a");_.href=I,_.download=j,_.click(),_.remove()}else{if(G.env.useFS)return await this.toSharp().toFile(j);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(y)throw new Error("toSharp() is only supported in server-side environments.");return Q(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const ie=J.read.bind(J)},"./src/utils/maths.js":(Oe,R,c)=>{c.r(R),c.d(R,{FFT:()=>ie,bankers_round:()=>X,cos_sim:()=>g,dot:()=>Q,dynamic_time_warping:()=>Z,interpolate_data:()=>w,log_softmax:()=>re,magnitude:()=>v,max:()=>y,medianFilter:()=>fe,min:()=>b,permute_data:()=>D,round:()=>j,softmax:()=>G});function w(N,[I,_,k],[E,ee],Y="bilinear",de=!1){const me=ee/k,ye=E/_,Ce=new N.constructor(E*ee*I),Ee=_*k,Le=E*ee;for(let _e=0;_e<E;++_e)for(let U=0;U<ee;++U){const ce=_e*ee+U,he=(U+.5)/me-.5,ke=(_e+.5)/ye-.5;let Re=Math.floor(he),Ke=Math.floor(ke);const Ye=Math.min(Re+1,k-1),at=Math.min(Ke+1,_-1);Re=Math.max(Re,0),Ke=Math.max(Ke,0);const We=he-Re,le=ke-Ke,He=(1-We)*(1-le),je=We*(1-le),we=(1-We)*le,$e=We*le,et=Ke*k,Qe=at*k,qe=et+Re,ze=et+Ye,nt=Qe+Re,dt=Qe+Ye;for(let gt=0;gt<I;++gt){const ht=gt*Ee;Ce[gt*Le+ce]=He*N[ht+qe]+je*N[ht+ze]+we*N[ht+nt]+$e*N[ht+dt]}}return Ce}function D(N,I,_){const k=new Array(_.length),E=new Array(_.length);for(let de=_.length-1,me=1;de>=0;--de)E[de]=me,k[de]=I[_[de]],me*=k[de];const ee=_.map((de,me)=>E[_.indexOf(me)]),Y=new N.constructor(N.length);for(let de=0;de<N.length;++de){let me=0;for(let ye=I.length-1,Ce=de;ye>=0;--ye)me+=Ce%I[ye]*ee[ye],Ce=Math.floor(Ce/I[ye]);Y[me]=N[de]}return[Y,k]}function G(N){const I=y(N)[0],_=N.map(ee=>Math.exp(ee-I)),k=_.reduce((ee,Y)=>ee+Y,0);return _.map(ee=>ee/k)}function re(N){const I=y(N)[0];let _=0;for(let ee=0;ee<N.length;++ee)_+=Math.exp(N[ee]-I);const k=Math.log(_);return N.map(ee=>ee-I-k)}function Q(N,I){let _=0;for(let k=0;k<N.length;++k)_+=N[k]*I[k];return _}function g(N,I){const _=Q(N,I),k=v(N),E=v(I);return _/(k*E)}function v(N){return Math.sqrt(N.reduce((I,_)=>I+_*_,0))}function b(N){if(N.length===0)throw Error("Array must not be empty");let I=N[0],_=0;for(let k=1;k<N.length;++k)N[k]<I&&(I=N[k],_=k);return[I,_]}function y(N){if(N.length===0)throw Error("Array must not be empty");let I=N[0],_=0;for(let k=1;k<N.length;++k)N[k]>I&&(I=N[k],_=k);return[Number(I),_]}function C(N){return N>0&&(N&N-1)===0}class q{constructor(I){if(this.size=I|0,this.size<=1||!C(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=I<<1,this.table=new Float64Array(this.size*2);for(let k=0;k<this.table.length;k+=2){const E=Math.PI*k/this.size;this.table[k]=Math.cos(E),this.table[k+1]=-Math.sin(E)}let _=0;for(let k=1;this.size>k;k<<=1)++_;this._width=_%2===0?_-1:_,this._bitrev=new Int32Array(1<<this._width);for(let k=0;k<this._bitrev.length;++k){this._bitrev[k]=0;for(let E=0;E<this._width;E+=2){const ee=this._width-E-2;this._bitrev[k]|=(k>>>E&3)<<ee}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(I,_){const k=_||new Array(I.length>>>1);for(let E=0;E<I.length;E+=2)k[E>>>1]=I[E];return k}toComplexArray(I,_){const k=_||this.createComplexArray();for(let E=0;E<k.length;E+=2)k[E]=I[E>>>1],k[E+1]=0;return k}transform(I,_){if(I===_)throw new Error("Input and output buffers must be different");this._transform4(I,_,1)}realTransform(I,_){if(I===_)throw new Error("Input and output buffers must be different");this._realTransform4(I,_,1)}inverseTransform(I,_){if(I===_)throw new Error("Input and output buffers must be different");this._transform4(I,_,-1);for(let k=0;k<I.length;++k)I[k]/=this.size}_transform4(I,_,k){const E=this._csize;let Y=1<<this._width,de=E/Y<<1,me,ye;const Ce=this._bitrev;if(de===4)for(me=0,ye=0;me<E;me+=de,++ye){const Le=Ce[ye];this._singleTransform2(_,I,me,Le,Y)}else for(me=0,ye=0;me<E;me+=de,++ye){const Le=Ce[ye];this._singleTransform4(_,I,me,Le,Y,k)}const Ee=this.table;for(Y>>=2;Y>=2;Y>>=2){de=E/Y<<1;const Le=de>>>2;for(me=0;me<E;me+=de){const _e=me+Le-1;for(let U=me,ce=0;U<_e;U+=2,ce+=Y){const he=U,ke=he+Le,Re=ke+Le,Ke=Re+Le,Ye=I[he],at=I[he+1],We=I[ke],le=I[ke+1],He=I[Re],je=I[Re+1],we=I[Ke],$e=I[Ke+1],et=Ee[ce],Qe=k*Ee[ce+1],qe=We*et-le*Qe,ze=We*Qe+le*et,nt=Ee[2*ce],dt=k*Ee[2*ce+1],gt=He*nt-je*dt,ht=He*dt+je*nt,_t=Ee[3*ce],A=k*Ee[3*ce+1],ne=we*_t-$e*A,V=we*A+$e*_t,ue=Ye+gt,Ae=at+ht,Je=Ye-gt,ot=at-ht,ut=qe+ne,At=ze+V,xt=k*(qe-ne),Et=k*(ze-V);I[he]=ue+ut,I[he+1]=Ae+At,I[ke]=Je+Et,I[ke+1]=ot-xt,I[Re]=ue-ut,I[Re+1]=Ae-At,I[Ke]=Je-Et,I[Ke+1]=ot+xt}}}}_singleTransform2(I,_,k,E,ee){const Y=I[E],de=I[E+1],me=I[E+ee],ye=I[E+ee+1];_[k]=Y+me,_[k+1]=de+ye,_[k+2]=Y-me,_[k+3]=de-ye}_singleTransform4(I,_,k,E,ee,Y){const de=ee*2,me=ee*3,ye=I[E],Ce=I[E+1],Ee=I[E+ee],Le=I[E+ee+1],_e=I[E+de],U=I[E+de+1],ce=I[E+me],he=I[E+me+1],ke=ye+_e,Re=Ce+U,Ke=ye-_e,Ye=Ce-U,at=Ee+ce,We=Le+he,le=Y*(Ee-ce),He=Y*(Le-he);_[k]=ke+at,_[k+1]=Re+We,_[k+2]=Ke+He,_[k+3]=Ye-le,_[k+4]=ke-at,_[k+5]=Re-We,_[k+6]=Ke-He,_[k+7]=Ye+le}_realTransform4(I,_,k){const E=this._csize;let Y=1<<this._width,de=E/Y<<1,me,ye;const Ce=this._bitrev;if(de===4)for(me=0,ye=0;me<E;me+=de,++ye){const _e=Ce[ye];this._singleRealTransform2(_,I,me,_e>>>1,Y>>>1)}else for(me=0,ye=0;me<E;me+=de,++ye){const _e=Ce[ye];this._singleRealTransform4(_,I,me,_e>>>1,Y>>>1,k)}const Ee=this.table;for(Y>>=2;Y>=2;Y>>=2){de=E/Y<<1;const _e=de>>>1,U=_e>>>1,ce=U>>>1;for(me=0;me<E;me+=de)for(let he=0,ke=0;he<=ce;he+=2,ke+=Y){const Re=me+he,Ke=Re+U,Ye=Ke+U,at=Ye+U,We=I[Re],le=I[Re+1],He=I[Ke],je=I[Ke+1],we=I[Ye],$e=I[Ye+1],et=I[at],Qe=I[at+1],qe=We,ze=le,nt=Ee[ke],dt=k*Ee[ke+1],gt=He*nt-je*dt,ht=He*dt+je*nt,_t=Ee[2*ke],A=k*Ee[2*ke+1],ne=we*_t-$e*A,V=we*A+$e*_t,ue=Ee[3*ke],Ae=k*Ee[3*ke+1],Je=et*ue-Qe*Ae,ot=et*Ae+Qe*ue,ut=qe+ne,At=ze+V,xt=qe-ne,Et=ze-V,Ct=gt+Je,ar=ht+ot,Mr=k*(gt-Je),Nr=k*(ht-ot);if(I[Re]=ut+Ct,I[Re+1]=At+ar,I[Ke]=xt+Nr,I[Ke+1]=Et-Mr,he===0){I[Ye]=ut-Ct,I[Ye+1]=At-ar;continue}if(he===ce)continue;const Fr=me+U-he,as=me+_e-he;I[Fr]=xt-k*Nr,I[Fr+1]=-Et-k*Mr,I[as]=ut-k*Ct,I[as+1]=-At+k*ar}}const Le=E>>>1;for(let _e=2;_e<Le;_e+=2)I[E-_e]=I[_e],I[E-_e+1]=-I[_e+1]}_singleRealTransform2(I,_,k,E,ee){const Y=I[E],de=I[E+ee];_[k]=Y+de,_[k+1]=0,_[k+2]=Y-de,_[k+3]=0}_singleRealTransform4(I,_,k,E,ee,Y){const de=ee*2,me=ee*3,ye=I[E],Ce=I[E+ee],Ee=I[E+de],Le=I[E+me],_e=ye+Ee,U=ye-Ee,ce=Ce+Le,he=Y*(Ce-Le);_[k]=_e+ce,_[k+1]=0,_[k+2]=U,_[k+3]=-he,_[k+4]=_e-ce,_[k+5]=0,_[k+6]=U,_[k+7]=he}}class J{constructor(I){const _=2*(I-1),k=2*(2*I-1),E=2**Math.ceil(Math.log2(k));this.bufferSize=E,this._a=_;const ee=new Float64Array(k),Y=new Float64Array(E);this._chirpBuffer=new Float64Array(E),this._buffer1=new Float64Array(E),this._buffer2=new Float64Array(E),this._outBuffer1=new Float64Array(E),this._outBuffer2=new Float64Array(E);const de=-2*Math.PI/I,me=Math.cos(de),ye=Math.sin(de);for(let Ce=0;Ce<k>>1;++Ce){const Ee=(Ce+1-I)**2/2,Le=Math.sqrt(me**2+ye**2)**Ee,_e=Ee*Math.atan2(ye,me),U=2*Ce;ee[U]=Le*Math.cos(_e),ee[U+1]=Le*Math.sin(_e),Y[U]=ee[U],Y[U+1]=-ee[U+1]}this._slicedChirpBuffer=ee.subarray(_,k),this._f=new q(E>>1),this._f.transform(this._chirpBuffer,Y)}_transform(I,_,k){const E=this._buffer1,ee=this._buffer2,Y=this._outBuffer1,de=this._outBuffer2,me=this._chirpBuffer,ye=this._slicedChirpBuffer,Ce=this._a;if(k)for(let Ee=0;Ee<ye.length;Ee+=2){const Le=Ee+1,_e=Ee>>1,U=_[_e];E[Ee]=U*ye[Ee],E[Le]=U*ye[Le]}else for(let Ee=0;Ee<ye.length;Ee+=2){const Le=Ee+1;E[Ee]=_[Ee]*ye[Ee]-_[Le]*ye[Le],E[Le]=_[Ee]*ye[Le]+_[Le]*ye[Ee]}this._f.transform(Y,E);for(let Ee=0;Ee<me.length;Ee+=2){const Le=Ee+1;ee[Ee]=Y[Ee]*me[Ee]-Y[Le]*me[Le],ee[Le]=Y[Ee]*me[Le]+Y[Le]*me[Ee]}this._f.inverseTransform(de,ee);for(let Ee=0;Ee<de.length;Ee+=2){const Le=de[Ee+Ce],_e=de[Ee+Ce+1],U=ye[Ee],ce=ye[Ee+1];I[Ee]=Le*U-_e*ce,I[Ee+1]=Le*ce+_e*U}}transform(I,_){this._transform(I,_,!1)}realTransform(I,_){this._transform(I,_,!0)}}class ie{constructor(I){this.fft_length=I,this.isPowerOfTwo=C(I),this.isPowerOfTwo?(this.fft=new q(I),this.outputBufferSize=2*I):(this.fft=new J(I),this.outputBufferSize=this.fft.bufferSize)}realTransform(I,_){this.fft.realTransform(I,_)}transform(I,_){this.fft.transform(I,_)}}function fe(N,I){if(I%2===0||I<=0)throw new Error("Window size must be a positive odd number");const _=new N.constructor(N.length),k=new N.constructor(I),E=Math.floor(I/2);for(let ee=0;ee<N.length;++ee){let Y=0;for(let de=-E;de<=E;++de){let me=ee+de;me<0?me=Math.abs(me):me>=N.length&&(me=2*(N.length-1)-me),k[Y++]=N[me]}k.sort(),_[ee]=k[E]}return _}function j(N,I){const _=Math.pow(10,I);return Math.round(N*_)/_}function X(N){const I=Math.round(N);return Math.abs(N)%1===.5?I%2===0?I:I-1:I}function Z(N){const I=N.length,_=N[0].length,k=[I+1,_+1],E=Array.from({length:k[0]},()=>Array(k[1]).fill(1/0));E[0][0]=0;const ee=Array.from({length:k[0]},()=>Array(k[1]).fill(-1));for(let Ce=1;Ce<k[1];++Ce)for(let Ee=1;Ee<k[0];++Ee){const Le=E[Ee-1][Ce-1],_e=E[Ee-1][Ce],U=E[Ee][Ce-1];let ce,he;Le<_e&&Le<U?(ce=Le,he=0):_e<Le&&_e<U?(ce=_e,he=1):(ce=U,he=2),E[Ee][Ce]=N[Ee-1][Ce-1]+ce,ee[Ee][Ce]=he}for(let Ce=0;Ce<k[1];++Ce)ee[0][Ce]=2;for(let Ce=0;Ce<k[0];++Ce)ee[Ce][0]=1;let Y=I,de=_,me=[],ye=[];for(;Y>0||de>0;)switch(me.push(Y-1),ye.push(de-1),ee[Y][de]){case 0:--Y,--de;break;case 1:--Y;break;case 2:--de;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${Y}, ${de}]. Please file a bug report.`)}return me.reverse(),ye.reverse(),[me,ye]}},"./src/utils/tensor.js":(Oe,R,c)=>{c.r(R),c.d(R,{Tensor:()=>Q,cat:()=>N,full:()=>Y,full_like:()=>de,interpolate:()=>b,interpolate_4d:()=>y,layer_norm:()=>fe,matmul:()=>C,mean:()=>k,mean_pooling:()=>ie,ones:()=>me,ones_like:()=>ye,permute:()=>v,quantize_embeddings:()=>Le,rfft:()=>q,stack:()=>I,std_mean:()=>_,topk:()=>J,zeros:()=>Ce,zeros_like:()=>Ee});var w=c("./src/utils/maths.js"),D=c("./src/backends/onnx.js"),G=c("./src/ops/registry.js");const re=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class Q{constructor(...U){Te(this,"ort_tensor");return(0,D.isONNXTensor)(U[0])?this.ort_tensor=U[0]:this.ort_tensor=new D.Tensor(U[0],U[1],U[2]),new Proxy(this,{get:(ce,he)=>{if(typeof he=="string"){let ke=Number(he);if(Number.isInteger(ke))return ce._getitem(ke)}return ce[he]},set:(ce,he,ke)=>ce[he]=ke})}get dims(){return this.ort_tensor.dims}set dims(U){this.ort_tensor.dims=U}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[U,...ce]=this.dims;if(ce.length>0){const he=ce.reduce((ke,Re)=>ke*Re);for(let ke=0;ke<U;++ke)yield this._subarray(ke,he,ce)}else yield*this.data}_getitem(U){const[ce,...he]=this.dims;if(U=Z(U,ce),he.length>0){const ke=he.reduce((Re,Ke)=>Re*Ke);return this._subarray(U,ke,he)}else return new Q(this.type,[this.data[U]],he)}indexOf(U){const ce=this.data;for(let he=0;he<ce.length;++he)if(ce[he]==U)return he;return-1}_subarray(U,ce,he){const ke=U*ce,Re=(U+1)*ce,Ke="subarray"in this.data?this.data.subarray(ke,Re):this.data.slice(ke,Re);return new Q(this.type,Ke,he)}item(){const U=this.data;if(U.length!==1)throw new Error(`a Tensor with ${U.length} elements cannot be converted to Scalar`);return U[0]}tolist(){return g(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const U=this.data;for(let ce=0;ce<U.length;++ce)U[ce]=1/(1+Math.exp(-U[ce]));return this}map(U){return this.clone().map_(U)}map_(U){const ce=this.data;for(let he=0;he<ce.length;++he)ce[he]=U(ce[he],he,ce);return this}mul(U){return this.clone().mul_(U)}mul_(U){const ce=this.data;for(let he=0;he<ce.length;++he)ce[he]*=U;return this}div(U){return this.clone().div_(U)}div_(U){const ce=this.data;for(let he=0;he<ce.length;++he)ce[he]/=U;return this}add(U){return this.clone().add_(U)}add_(U){const ce=this.data;for(let he=0;he<ce.length;++he)ce[he]+=U;return this}sub(U){return this.clone().sub_(U)}sub_(U){const ce=this.data;for(let he=0;he<ce.length;++he)ce[he]-=U;return this}clone(){return new Q(this.type,this.data.slice(),this.dims.slice())}slice(...U){const ce=[],he=[];for(let We=0;We<this.dims.length;++We){let le=U[We];if(le==null)he.push([0,this.dims[We]]),ce.push(this.dims[We]);else if(typeof le=="number")le=Z(le,this.dims[We],We),he.push([le,le+1]);else if(Array.isArray(le)&&le.length===2){let[He,je]=le;if(He=He===null?0:Z(He,this.dims[We],We,!1),je=je===null?this.dims[We]:Z(je,this.dims[We],We,!1),He>je)throw new Error(`Invalid slice: ${le}`);const we=[Math.max(He,0),Math.min(je,this.dims[We])];he.push(we),ce.push(we[1]-we[0])}else throw new Error(`Invalid slice: ${le}`)}const ke=he.map(([We,le])=>le-We),Re=ke.reduce((We,le)=>We*le),Ke=this.data,Ye=new Ke.constructor(Re),at=this.stride();for(let We=0;We<Re;++We){let le=0;for(let He=ke.length-1,je=We;He>=0;--He){const we=ke[He];le+=(je%we+he[He][0])*at[He],je=Math.floor(je/we)}Ye[We]=Ke[le]}return new Q(this.type,Ye,ce)}permute(...U){return v(this,U)}transpose(...U){return this.permute(...U)}sum(U=null,ce=!1){return this.norm(1,U,ce)}norm(U="fro",ce=null,he=!1){if(U==="fro")U=2;else if(typeof U=="string")throw Error(`Unsupported norm: ${U}`);const ke=this.data;if(ce===null){let Ye=ke.reduce((at,We)=>at+We**U,0)**(1/U);return new Q(this.type,[Ye],[])}ce=Z(ce,this.dims.length);const Re=this.dims.slice();Re[ce]=1;const Ke=new ke.constructor(ke.length/this.dims[ce]);for(let Ye=0;Ye<ke.length;++Ye){let at=0;for(let We=this.dims.length-1,le=Ye,He=1;We>=0;--We){const je=this.dims[We];if(We!==ce){const we=le%je;at+=we*He,He*=Re[We]}le=Math.floor(le/je)}Ke[at]+=ke[Ye]**U}if(U!==1)for(let Ye=0;Ye<Ke.length;++Ye)Ke[Ye]=Ke[Ye]**(1/U);return he||Re.splice(ce,1),new Q(this.type,Ke,Re)}normalize_(U=2,ce=1){ce=Z(ce,this.dims.length);const he=this.norm(U,ce,!0),ke=this.data,Re=he.data;for(let Ke=0;Ke<ke.length;++Ke){let Ye=0;for(let at=this.dims.length-1,We=Ke,le=1;at>=0;--at){const He=this.dims[at];if(at!==ce){const je=We%He;Ye+=je*le,le*=this.dims[at]}We=Math.floor(We/He)}ke[Ke]/=Re[Ye]}return this}normalize(U=2,ce=1){return this.clone().normalize_(U,ce)}stride(){return E(this.dims)}squeeze(U=null){return new Q(this.type,this.data,j(this.dims,U))}squeeze_(U=null){return this.dims=j(this.dims,U),this}unsqueeze(U=null){return new Q(this.type,this.data,X(this.dims,U))}unsqueeze_(U=null){return this.dims=X(this.dims,U),this}flatten_(U=0,ce=-1){ce=(ce+this.dims.length)%this.dims.length;let he=this.dims.slice(0,U),ke=this.dims.slice(U,ce+1),Re=this.dims.slice(ce+1);return this.dims=[...he,ke.reduce((Ke,Ye)=>Ke*Ye,1),...Re],this}flatten(U=0,ce=-1){return this.clone().flatten_(U,ce)}view(...U){let ce=-1;for(let ke=0;ke<U.length;++ke)if(U[ke]===-1){if(ce!==-1)throw new Error("Only one dimension can be inferred");ce=ke}const he=this.data;if(ce!==-1){const ke=U.reduce((Re,Ke,Ye)=>Ye!==ce?Re*Ke:Re,1);U[ce]=he.length/ke}return new Q(this.type,he,U)}neg_(){const U=this.data;for(let ce=0;ce<U.length;++ce)U[ce]=-U[ce];return this}neg(){return this.clone().neg_()}clamp_(U,ce){const he=this.data;for(let ke=0;ke<he.length;++ke)he[ke]=Math.min(Math.max(he[ke],U),ce);return this}clamp(U,ce){return this.clone().clamp_(U,ce)}round_(){const U=this.data;for(let ce=0;ce<U.length;++ce)U[ce]=Math.round(U[ce]);return this}round(){return this.clone().round_()}mean(U=null,ce=!1){return k(this,U,ce)}to(U){if(this.type===U)return this;if(!re.hasOwnProperty(U))throw new Error(`Unsupported type: ${U}`);return new Q(U,re[U].from(this.data),this.dims)}}function g(_e,U){const ce=_e.length,he=U.reduce((Re,Ke)=>Re*Ke);if(ce!==he)throw Error(`cannot reshape array of size ${ce} into shape (${U})`);let ke=_e;for(let Re=U.length-1;Re>=0;Re--)ke=ke.reduce((Ke,Ye)=>{let at=Ke[Ke.length-1];return at.length<U[Re]?at.push(Ye):Ke.push([Ye]),Ke},[[]]);return ke[0]}function v(_e,U){const[ce,he]=(0,w.permute_data)(_e.data,_e.dims,U);return new Q(_e.type,ce,he)}function b(_e,[U,ce],he="bilinear",ke=!1){const Re=_e.dims.at(-3)??1,Ke=_e.dims.at(-2),Ye=_e.dims.at(-1);let at=(0,w.interpolate_data)(_e.data,[Re,Ke,Ye],[U,ce],he,ke);return new Q(_e.type,at,[Re,U,ce])}async function y(_e,{size:U=null,mode:ce="bilinear"}={}){if(_e.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!U)throw new Error("`interpolate_4d` requires a `size` argument.");let he;if(U.length===2)he=[..._e.dims.slice(0,2),...U];else if(U.length===3)he=[_e.dims[0],...U];else if(U.length===4)he=U;else throw new Error("`size` must be of length 2, 3, or 4.");let ke;if(ce==="bilinear")ke=await G.TensorOpRegistry.bilinear_interpolate_4d;else if(ce==="bicubic")ke=await G.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${ce}`);const Re=new Q("int64",new BigInt64Array(he.map(BigInt)),[he.length]);return await ke({x:_e,s:Re})}async function C(_e,U){return await(await G.TensorOpRegistry.matmul)({a:_e,b:U})}async function q(_e,U){return await(await G.TensorOpRegistry.rfft)({x:_e,a:U})}async function J(_e,U){const ce=await G.TensorOpRegistry.top_k;return U===null?U=_e.dims.at(-1):U=Math.min(U,_e.dims.at(-1)),await ce({x:_e,k:new Q("int64",[BigInt(U)],[1])})}function ie(_e,U){const ce=_e.data,he=U.data,ke=[_e.dims[0],_e.dims[2]],Re=new ce.constructor(ke[0]*ke[1]),[Ke,Ye,at]=_e.dims;let We=0;for(let le=0;le<Ke;++le){const He=le*at*Ye;for(let je=0;je<at;++je){let we=0,$e=0;const et=le*Ye,Qe=He+je;for(let ze=0;ze<Ye;++ze){const nt=Number(he[et+ze]);$e+=nt,we+=ce[Qe+ze*at]*nt}const qe=we/$e;Re[We++]=qe}}return new Q(_e.type,Re,ke)}function fe(_e,U,{eps:ce=1e-5}={}){if(_e.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[he,ke]=_e.dims;if(U.length!==1&&U[0]!==ke)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[Re,Ke]=_(_e,1,0,!0),Ye=Re.data,at=Ke.data,We=_e.data,le=new We.constructor(We.length);for(let He=0;He<he;++He){const je=He*ke;for(let we=0;we<ke;++we){const $e=je+we;le[$e]=(We[$e]-at[He])/(Ye[He]+ce)}}return new Q(_e.type,le,_e.dims)}function j(_e,U){return _e=_e.slice(),U===null?_e=_e.filter(ce=>ce!==1):typeof U=="number"?_e[U]===1&&_e.splice(U,1):Array.isArray(U)&&(_e=_e.filter((ce,he)=>ce!==1||!U.includes(he))),_e}function X(_e,U){return U=Z(U,_e.length+1),_e=_e.slice(),_e.splice(U,0,1),_e}function Z(_e,U,ce=null,he=!0){if(he&&(_e<-U||_e>=U))throw new Error(`IndexError: index ${_e} is out of bounds for dimension${ce===null?"":" "+ce} with size ${U}`);return _e<0&&(_e=(_e%U+U)%U),_e}function N(_e,U=0){U=Z(U,_e[0].dims.length);const ce=_e[0].dims.slice();ce[U]=_e.reduce((Ke,Ye)=>Ke+Ye.dims[U],0);const he=ce.reduce((Ke,Ye)=>Ke*Ye,1),ke=new _e[0].data.constructor(he),Re=_e[0].type;if(U===0){let Ke=0;for(const Ye of _e){const at=Ye.data;ke.set(at,Ke),Ke+=at.length}}else{let Ke=0;for(let Ye=0;Ye<_e.length;++Ye){const{data:at,dims:We}=_e[Ye];for(let le=0;le<at.length;++le){let He=0;for(let je=We.length-1,we=le,$e=1;je>=0;--je){const et=We[je];let Qe=we%et;je===U&&(Qe+=Ke),He+=Qe*$e,$e*=ce[je],we=Math.floor(we/et)}ke[He]=at[le]}Ke+=We[U]}}return new Q(Re,ke,ce)}function I(_e,U=0){return N(_e.map(ce=>ce.unsqueeze(U)),U)}function _(_e,U=null,ce=1,he=!1){const ke=_e.data,Re=_e.dims;if(U===null){const je=ke.reduce((Qe,qe)=>Qe+qe,0)/ke.length,we=Math.sqrt(ke.reduce((Qe,qe)=>Qe+(qe-je)**2,0)/(ke.length-ce)),$e=new Q(_e.type,[je],[]);return[new Q(_e.type,[we],[]),$e]}U=Z(U,Re.length);const Ke=k(_e,U,he),Ye=Ke.data,at=Re.slice();at[U]=1;const We=new ke.constructor(ke.length/Re[U]);for(let He=0;He<ke.length;++He){let je=0;for(let we=Re.length-1,$e=He,et=1;we>=0;--we){const Qe=Re[we];if(we!==U){const qe=$e%Qe;je+=qe*et,et*=at[we]}$e=Math.floor($e/Qe)}We[je]+=(ke[He]-Ye[je])**2}for(let He=0;He<We.length;++He)We[He]=Math.sqrt(We[He]/(Re[U]-ce));return he||at.splice(U,1),[new Q(_e.type,We,at),Ke]}function k(_e,U=null,ce=!1){const he=_e.data;if(U===null){const Ye=he.reduce((at,We)=>at+We,0);return new Q(_e.type,[Ye/he.length],[])}const ke=_e.dims;U=Z(U,ke.length);const Re=ke.slice();Re[U]=1;const Ke=new he.constructor(he.length/ke[U]);for(let Ye=0;Ye<he.length;++Ye){let at=0;for(let We=ke.length-1,le=Ye,He=1;We>=0;--We){const je=ke[We];if(We!==U){const we=le%je;at+=we*He,He*=Re[We]}le=Math.floor(le/je)}Ke[at]+=he[Ye]}if(ke[U]!==1)for(let Ye=0;Ye<Ke.length;++Ye)Ke[Ye]=Ke[Ye]/ke[U];return ce||Re.splice(U,1),new Q(_e.type,Ke,Re)}function E(_e){const U=new Array(_e.length);for(let ce=_e.length-1,he=1;ce>=0;--ce)U[ce]=he,he*=_e[ce];return U}function ee(_e,U,ce,he){const ke=_e.reduce((Re,Ke)=>Re*Ke,1);return new Q(ce,new he(ke).fill(U),_e)}function Y(_e,U){let ce,he;if(typeof U=="number")ce="float32",he=Float32Array;else if(typeof U=="bigint")ce="int64",he=BigInt64Array;else if(typeof U=="boolean")ce="bool",he=Uint8Array;else throw new Error(`Unsupported data type: ${typeof U}`);return ee(_e,U,ce,he)}function de(_e,U){return Y(_e.dims,U)}function me(_e){return ee(_e,1n,"int64",BigInt64Array)}function ye(_e){return me(_e.dims)}function Ce(_e){return ee(_e,0n,"int64",BigInt64Array)}function Ee(_e){return Ce(_e.dims)}function Le(_e,U){if(_e.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(_e.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(U))throw new Error("The precision must be either 'binary' or 'ubinary'");const ce=U==="binary",he=ce?"int8":"uint8",ke=ce?Int8Array:Uint8Array,Re=_e.data,Ke=new ke(Re.length/8);for(let Ye=0;Ye<Re.length;++Ye){const at=Re[Ye]>0?1:0,We=Math.floor(Ye/8),le=Ye%8;Ke[We]|=at<<7-le,ce&&le===0&&(Ke[We]-=128)}return new Q(he,Ke,[_e.dims[0],_e.dims[1]/8])}}},lo={};function fr(Oe){var R=lo[Oe];if(R!==void 0)return R.exports;var c=lo[Oe]={exports:{}};return ln[Oe](c,c.exports,fr),c.exports}fr.m=ln,(()=>{var Oe=Object.getPrototypeOf?c=>Object.getPrototypeOf(c):c=>c.__proto__,R;fr.t=function(c,w){if(w&1&&(c=this(c)),w&8||typeof c=="object"&&c&&(w&4&&c.__esModule||w&16&&typeof c.then=="function"))return c;var D=Object.create(null);fr.r(D);var G={};R=R||[null,Oe({}),Oe([]),Oe(Oe)];for(var re=w&2&&c;typeof re=="object"&&!~R.indexOf(re);re=Oe(re))Object.getOwnPropertyNames(re).forEach(Q=>G[Q]=()=>c[Q]);return G.default=()=>c,fr.d(D,G),D}})(),fr.d=(Oe,R)=>{for(var c in R)fr.o(R,c)&&!fr.o(Oe,c)&&Object.defineProperty(Oe,c,{enumerable:!0,get:R[c]})},fr.o=(Oe,R)=>Object.prototype.hasOwnProperty.call(Oe,R),fr.r=Oe=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(Oe,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Oe,"__esModule",{value:!0})},(()=>{var Oe;if(typeof self.location.href=="string"&&(Oe=self.location.href),!Oe)throw new Error("Automatic publicPath is not supported in this browser");Oe=Oe.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),fr.p=Oe})(),fr.b=new URL("./",self.location.href);var u={};/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/fr.r(u),fr.d(u,{ASTFeatureExtractor:()=>bn.ASTFeatureExtractor,ASTForAudioClassification:()=>M.ASTForAudioClassification,ASTModel:()=>M.ASTModel,ASTPreTrainedModel:()=>M.ASTPreTrainedModel,AlbertForMaskedLM:()=>M.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>M.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>M.AlbertForSequenceClassification,AlbertModel:()=>M.AlbertModel,AlbertPreTrainedModel:()=>M.AlbertPreTrainedModel,AlbertTokenizer:()=>Qt.AlbertTokenizer,AudioClassificationPipeline:()=>zr.AudioClassificationPipeline,AutoConfig:()=>xp.AutoConfig,AutoFeatureExtractor:()=>Hm.AutoFeatureExtractor,AutoImageProcessor:()=>Qm.AutoImageProcessor,AutoModel:()=>M.AutoModel,AutoModelForAudioClassification:()=>M.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>M.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>M.AutoModelForCTC,AutoModelForCausalLM:()=>M.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>M.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>M.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>M.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>M.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>M.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>M.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>M.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>M.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>M.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>M.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>M.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>M.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>M.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>M.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>M.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>M.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>M.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>M.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>M.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>M.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>M.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>M.AutoModelForVision2Seq,AutoModelForXVector:()=>M.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>M.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>Ym.AutoProcessor,AutoTokenizer:()=>Qt.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>zr.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>M.BartForConditionalGeneration,BartForSequenceClassification:()=>M.BartForSequenceClassification,BartModel:()=>M.BartModel,BartPretrainedModel:()=>M.BartPretrainedModel,BartTokenizer:()=>Qt.BartTokenizer,BaseModelOutput:()=>M.BaseModelOutput,BaseStreamer:()=>Ep.BaseStreamer,BeitFeatureExtractor:()=>Kt.BeitFeatureExtractor,BeitForImageClassification:()=>M.BeitForImageClassification,BeitModel:()=>M.BeitModel,BeitPreTrainedModel:()=>M.BeitPreTrainedModel,BertForMaskedLM:()=>M.BertForMaskedLM,BertForQuestionAnswering:()=>M.BertForQuestionAnswering,BertForSequenceClassification:()=>M.BertForSequenceClassification,BertForTokenClassification:()=>M.BertForTokenClassification,BertModel:()=>M.BertModel,BertPreTrainedModel:()=>M.BertPreTrainedModel,BertTokenizer:()=>Qt.BertTokenizer,BitImageProcessor:()=>Kt.BitImageProcessor,BlenderbotForConditionalGeneration:()=>M.BlenderbotForConditionalGeneration,BlenderbotModel:()=>M.BlenderbotModel,BlenderbotPreTrainedModel:()=>M.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>M.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>M.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>M.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>Qt.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>Qt.BlenderbotTokenizer,BloomForCausalLM:()=>M.BloomForCausalLM,BloomModel:()=>M.BloomModel,BloomPreTrainedModel:()=>M.BloomPreTrainedModel,BloomTokenizer:()=>Qt.BloomTokenizer,CLIPFeatureExtractor:()=>Kt.CLIPFeatureExtractor,CLIPImageProcessor:()=>Kt.CLIPImageProcessor,CLIPModel:()=>M.CLIPModel,CLIPPreTrainedModel:()=>M.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>M.CLIPSegForImageSegmentation,CLIPSegModel:()=>M.CLIPSegModel,CLIPSegPreTrainedModel:()=>M.CLIPSegPreTrainedModel,CLIPTextModel:()=>M.CLIPTextModel,CLIPTextModelWithProjection:()=>M.CLIPTextModelWithProjection,CLIPTokenizer:()=>Qt.CLIPTokenizer,CLIPVisionModel:()=>M.CLIPVisionModel,CLIPVisionModelWithProjection:()=>M.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>M.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>M.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>M.CamembertForSequenceClassification,CamembertForTokenClassification:()=>M.CamembertForTokenClassification,CamembertModel:()=>M.CamembertModel,CamembertPreTrainedModel:()=>M.CamembertPreTrainedModel,CamembertTokenizer:()=>Qt.CamembertTokenizer,CausalLMOutput:()=>M.CausalLMOutput,CausalLMOutputWithPast:()=>M.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>Kt.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>M.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>M.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>M.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>bn.ClapFeatureExtractor,ClapModel:()=>M.ClapModel,ClapPreTrainedModel:()=>M.ClapPreTrainedModel,ClapTextModelWithProjection:()=>M.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>cs.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>M.CodeGenForCausalLM,CodeGenModel:()=>M.CodeGenModel,CodeGenPreTrainedModel:()=>M.CodeGenPreTrainedModel,CodeGenTokenizer:()=>Qt.CodeGenTokenizer,CodeLlamaTokenizer:()=>Qt.CodeLlamaTokenizer,CohereForCausalLM:()=>M.CohereForCausalLM,CohereModel:()=>M.CohereModel,CoherePreTrainedModel:()=>M.CoherePreTrainedModel,CohereTokenizer:()=>Qt.CohereTokenizer,ConvBertForMaskedLM:()=>M.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>M.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>M.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>M.ConvBertForTokenClassification,ConvBertModel:()=>M.ConvBertModel,ConvBertPreTrainedModel:()=>M.ConvBertPreTrainedModel,ConvBertTokenizer:()=>Qt.ConvBertTokenizer,ConvNextFeatureExtractor:()=>Kt.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>M.ConvNextForImageClassification,ConvNextImageProcessor:()=>Kt.ConvNextImageProcessor,ConvNextModel:()=>M.ConvNextModel,ConvNextPreTrainedModel:()=>M.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>M.ConvNextV2ForImageClassification,ConvNextV2Model:()=>M.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>M.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>Kt.DPTFeatureExtractor,DPTForDepthEstimation:()=>M.DPTForDepthEstimation,DPTImageProcessor:()=>Kt.DPTImageProcessor,DPTModel:()=>M.DPTModel,DPTPreTrainedModel:()=>M.DPTPreTrainedModel,DebertaForMaskedLM:()=>M.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>M.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>M.DebertaForSequenceClassification,DebertaForTokenClassification:()=>M.DebertaForTokenClassification,DebertaModel:()=>M.DebertaModel,DebertaPreTrainedModel:()=>M.DebertaPreTrainedModel,DebertaTokenizer:()=>Qt.DebertaTokenizer,DebertaV2ForMaskedLM:()=>M.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>M.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>M.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>M.DebertaV2ForTokenClassification,DebertaV2Model:()=>M.DebertaV2Model,DebertaV2PreTrainedModel:()=>M.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>Qt.DebertaV2Tokenizer,DecisionTransformerModel:()=>M.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>M.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>Kt.DeiTFeatureExtractor,DeiTForImageClassification:()=>M.DeiTForImageClassification,DeiTImageProcessor:()=>Kt.DeiTImageProcessor,DeiTModel:()=>M.DeiTModel,DeiTPreTrainedModel:()=>M.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>M.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>M.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>zr.DepthEstimationPipeline,DepthProForDepthEstimation:()=>M.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>M.DepthProPreTrainedModel,DetrFeatureExtractor:()=>Kt.DetrFeatureExtractor,DetrForObjectDetection:()=>M.DetrForObjectDetection,DetrForSegmentation:()=>M.DetrForSegmentation,DetrImageProcessor:()=>Kt.DetrImageProcessor,DetrModel:()=>M.DetrModel,DetrObjectDetectionOutput:()=>M.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>M.DetrPreTrainedModel,DetrSegmentationOutput:()=>M.DetrSegmentationOutput,Dinov2ForImageClassification:()=>M.Dinov2ForImageClassification,Dinov2Model:()=>M.Dinov2Model,Dinov2PreTrainedModel:()=>M.Dinov2PreTrainedModel,DistilBertForMaskedLM:()=>M.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>M.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>M.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>M.DistilBertForTokenClassification,DistilBertModel:()=>M.DistilBertModel,DistilBertPreTrainedModel:()=>M.DistilBertPreTrainedModel,DistilBertTokenizer:()=>Qt.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>zr.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>Kt.DonutFeatureExtractor,DonutImageProcessor:()=>Kt.DonutImageProcessor,DonutSwinModel:()=>M.DonutSwinModel,DonutSwinPreTrainedModel:()=>M.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>M.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>Kt.EfficientNetImageProcessor,EfficientNetModel:()=>M.EfficientNetModel,EfficientNetPreTrainedModel:()=>M.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>M.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>M.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>M.ElectraForSequenceClassification,ElectraForTokenClassification:()=>M.ElectraForTokenClassification,ElectraModel:()=>M.ElectraModel,ElectraPreTrainedModel:()=>M.ElectraPreTrainedModel,ElectraTokenizer:()=>Qt.ElectraTokenizer,EosTokenCriteria:()=>Fa.EosTokenCriteria,EsmForMaskedLM:()=>M.EsmForMaskedLM,EsmForSequenceClassification:()=>M.EsmForSequenceClassification,EsmForTokenClassification:()=>M.EsmForTokenClassification,EsmModel:()=>M.EsmModel,EsmPreTrainedModel:()=>M.EsmPreTrainedModel,EsmTokenizer:()=>Qt.EsmTokenizer,FFT:()=>vs.FFT,FalconForCausalLM:()=>M.FalconForCausalLM,FalconModel:()=>M.FalconModel,FalconPreTrainedModel:()=>M.FalconPreTrainedModel,FalconTokenizer:()=>Qt.FalconTokenizer,FastViTForImageClassification:()=>M.FastViTForImageClassification,FastViTModel:()=>M.FastViTModel,FastViTPreTrainedModel:()=>M.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>zr.FeatureExtractionPipeline,FeatureExtractor:()=>Km.FeatureExtractor,FillMaskPipeline:()=>zr.FillMaskPipeline,Florence2ForConditionalGeneration:()=>M.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>M.Florence2PreTrainedModel,Florence2Processor:()=>Os.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>cs.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>cs.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>Kt.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>M.GLPNForDepthEstimation,GLPNModel:()=>M.GLPNModel,GLPNPreTrainedModel:()=>M.GLPNPreTrainedModel,GPT2LMHeadModel:()=>M.GPT2LMHeadModel,GPT2Model:()=>M.GPT2Model,GPT2PreTrainedModel:()=>M.GPT2PreTrainedModel,GPT2Tokenizer:()=>Qt.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>M.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>M.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>M.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>M.GPTJForCausalLM,GPTJModel:()=>M.GPTJModel,GPTJPreTrainedModel:()=>M.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>M.GPTNeoForCausalLM,GPTNeoModel:()=>M.GPTNeoModel,GPTNeoPreTrainedModel:()=>M.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>M.GPTNeoXForCausalLM,GPTNeoXModel:()=>M.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>M.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>Qt.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>M.Gemma2ForCausalLM,Gemma2Model:()=>M.Gemma2Model,Gemma2PreTrainedModel:()=>M.Gemma2PreTrainedModel,GemmaForCausalLM:()=>M.GemmaForCausalLM,GemmaModel:()=>M.GemmaModel,GemmaPreTrainedModel:()=>M.GemmaPreTrainedModel,GemmaTokenizer:()=>Qt.GemmaTokenizer,GraniteForCausalLM:()=>M.GraniteForCausalLM,GraniteModel:()=>M.GraniteModel,GranitePreTrainedModel:()=>M.GranitePreTrainedModel,Grok1Tokenizer:()=>Qt.Grok1Tokenizer,GroupViTModel:()=>M.GroupViTModel,GroupViTPreTrainedModel:()=>M.GroupViTPreTrainedModel,HerbertTokenizer:()=>Qt.HerbertTokenizer,HieraForImageClassification:()=>M.HieraForImageClassification,HieraModel:()=>M.HieraModel,HieraPreTrainedModel:()=>M.HieraPreTrainedModel,HubertForCTC:()=>M.HubertForCTC,HubertForSequenceClassification:()=>M.HubertForSequenceClassification,HubertModel:()=>M.HubertModel,HubertPreTrainedModel:()=>M.HubertPreTrainedModel,Idefics3ForConditionalGeneration:()=>M.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>Kt.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>M.Idefics3PreTrainedModel,Idefics3Processor:()=>Os.Idefics3Processor,ImageClassificationPipeline:()=>zr.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>zr.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>bn.ImageFeatureExtractor,ImageMattingOutput:()=>M.ImageMattingOutput,ImageProcessor:()=>qm.ImageProcessor,ImageSegmentationPipeline:()=>zr.ImageSegmentationPipeline,ImageToImagePipeline:()=>zr.ImageToImagePipeline,ImageToTextPipeline:()=>zr.ImageToTextPipeline,InterruptableStoppingCriteria:()=>Fa.InterruptableStoppingCriteria,JAISLMHeadModel:()=>M.JAISLMHeadModel,JAISModel:()=>M.JAISModel,JAISPreTrainedModel:()=>M.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>Kt.JinaCLIPImageProcessor,JinaCLIPModel:()=>M.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>M.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>Os.JinaCLIPProcessor,JinaCLIPTextModel:()=>M.JinaCLIPTextModel,JinaCLIPVisionModel:()=>M.JinaCLIPVisionModel,LlamaForCausalLM:()=>M.LlamaForCausalLM,LlamaModel:()=>M.LlamaModel,LlamaPreTrainedModel:()=>M.LlamaPreTrainedModel,LlamaTokenizer:()=>Qt.LlamaTokenizer,LlavaForConditionalGeneration:()=>M.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>M.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>Kt.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>M.LlavaPreTrainedModel,LogitsProcessor:()=>cs.LogitsProcessor,LogitsProcessorList:()=>cs.LogitsProcessorList,LogitsWarper:()=>cs.LogitsWarper,LongT5ForConditionalGeneration:()=>M.LongT5ForConditionalGeneration,LongT5Model:()=>M.LongT5Model,LongT5PreTrainedModel:()=>M.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>M.M2M100ForConditionalGeneration,M2M100Model:()=>M.M2M100Model,M2M100PreTrainedModel:()=>M.M2M100PreTrainedModel,M2M100Tokenizer:()=>Qt.M2M100Tokenizer,MBart50Tokenizer:()=>Qt.MBart50Tokenizer,MBartForCausalLM:()=>M.MBartForCausalLM,MBartForConditionalGeneration:()=>M.MBartForConditionalGeneration,MBartForSequenceClassification:()=>M.MBartForSequenceClassification,MBartModel:()=>M.MBartModel,MBartPreTrainedModel:()=>M.MBartPreTrainedModel,MBartTokenizer:()=>Qt.MBartTokenizer,MPNetForMaskedLM:()=>M.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>M.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>M.MPNetForSequenceClassification,MPNetForTokenClassification:()=>M.MPNetForTokenClassification,MPNetModel:()=>M.MPNetModel,MPNetPreTrainedModel:()=>M.MPNetPreTrainedModel,MPNetTokenizer:()=>Qt.MPNetTokenizer,MT5ForConditionalGeneration:()=>M.MT5ForConditionalGeneration,MT5Model:()=>M.MT5Model,MT5PreTrainedModel:()=>M.MT5PreTrainedModel,MarianMTModel:()=>M.MarianMTModel,MarianModel:()=>M.MarianModel,MarianPreTrainedModel:()=>M.MarianPreTrainedModel,MarianTokenizer:()=>Qt.MarianTokenizer,Mask2FormerImageProcessor:()=>Kt.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>Kt.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>M.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>Kt.MaskFormerImageProcessor,MaskFormerModel:()=>M.MaskFormerModel,MaskFormerPreTrainedModel:()=>M.MaskFormerPreTrainedModel,MaskedLMOutput:()=>M.MaskedLMOutput,MaxLengthCriteria:()=>Fa.MaxLengthCriteria,MgpstrForSceneTextRecognition:()=>M.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>M.MgpstrModelOutput,MgpstrPreTrainedModel:()=>M.MgpstrPreTrainedModel,MgpstrProcessor:()=>Os.MgpstrProcessor,MgpstrTokenizer:()=>Qt.MgpstrTokenizer,MinLengthLogitsProcessor:()=>cs.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>cs.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>M.MistralForCausalLM,MistralModel:()=>M.MistralModel,MistralPreTrainedModel:()=>M.MistralPreTrainedModel,MobileBertForMaskedLM:()=>M.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>M.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>M.MobileBertForSequenceClassification,MobileBertModel:()=>M.MobileBertModel,MobileBertPreTrainedModel:()=>M.MobileBertPreTrainedModel,MobileBertTokenizer:()=>Qt.MobileBertTokenizer,MobileLLMForCausalLM:()=>M.MobileLLMForCausalLM,MobileLLMModel:()=>M.MobileLLMModel,MobileLLMPreTrainedModel:()=>M.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>Kt.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>M.MobileNetV1ForImageClassification,MobileNetV1ImageProcessor:()=>Kt.MobileNetV1ImageProcessor,MobileNetV1Model:()=>M.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>M.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>Kt.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>M.MobileNetV2ForImageClassification,MobileNetV2ImageProcessor:()=>Kt.MobileNetV2ImageProcessor,MobileNetV2Model:()=>M.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>M.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>Kt.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>M.MobileNetV3ForImageClassification,MobileNetV3ImageProcessor:()=>Kt.MobileNetV3ImageProcessor,MobileNetV3Model:()=>M.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>M.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>Kt.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>M.MobileNetV4ForImageClassification,MobileNetV4ImageProcessor:()=>Kt.MobileNetV4ImageProcessor,MobileNetV4Model:()=>M.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>M.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>Kt.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>M.MobileViTForImageClassification,MobileViTImageProcessor:()=>Kt.MobileViTImageProcessor,MobileViTModel:()=>M.MobileViTModel,MobileViTPreTrainedModel:()=>M.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>M.MobileViTV2ForImageClassification,MobileViTV2Model:()=>M.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>M.MobileViTV2PreTrainedModel,ModelOutput:()=>M.ModelOutput,Moondream1ForConditionalGeneration:()=>M.Moondream1ForConditionalGeneration,MptForCausalLM:()=>M.MptForCausalLM,MptModel:()=>M.MptModel,MptPreTrainedModel:()=>M.MptPreTrainedModel,MultiModalityCausalLM:()=>M.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>M.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>M.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>M.MusicgenForConditionalGeneration,MusicgenModel:()=>M.MusicgenModel,MusicgenPreTrainedModel:()=>M.MusicgenPreTrainedModel,NllbTokenizer:()=>Qt.NllbTokenizer,NoBadWordsLogitsProcessor:()=>cs.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>cs.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>M.NomicBertModel,NomicBertPreTrainedModel:()=>M.NomicBertPreTrainedModel,NougatImageProcessor:()=>Kt.NougatImageProcessor,NougatTokenizer:()=>Qt.NougatTokenizer,OPTForCausalLM:()=>M.OPTForCausalLM,OPTModel:()=>M.OPTModel,OPTPreTrainedModel:()=>M.OPTPreTrainedModel,ObjectDetectionPipeline:()=>zr.ObjectDetectionPipeline,OlmoForCausalLM:()=>M.OlmoForCausalLM,OlmoModel:()=>M.OlmoModel,OlmoPreTrainedModel:()=>M.OlmoPreTrainedModel,OpenELMForCausalLM:()=>M.OpenELMForCausalLM,OpenELMModel:()=>M.OpenELMModel,OpenELMPreTrainedModel:()=>M.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>Kt.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>M.OwlViTForObjectDetection,OwlViTImageProcessor:()=>Kt.OwlViTImageProcessor,OwlViTModel:()=>M.OwlViTModel,OwlViTPreTrainedModel:()=>M.OwlViTPreTrainedModel,OwlViTProcessor:()=>Os.OwlViTProcessor,Owlv2ForObjectDetection:()=>M.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>Kt.Owlv2ImageProcessor,Owlv2Model:()=>M.Owlv2Model,Owlv2PreTrainedModel:()=>M.Owlv2PreTrainedModel,PatchTSMixerForPrediction:()=>M.PatchTSMixerForPrediction,PatchTSMixerModel:()=>M.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>M.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>M.PatchTSTForPrediction,PatchTSTModel:()=>M.PatchTSTModel,PatchTSTPreTrainedModel:()=>M.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>M.Phi3ForCausalLM,Phi3Model:()=>M.Phi3Model,Phi3PreTrainedModel:()=>M.Phi3PreTrainedModel,PhiForCausalLM:()=>M.PhiForCausalLM,PhiModel:()=>M.PhiModel,PhiPreTrainedModel:()=>M.PhiPreTrainedModel,Pipeline:()=>zr.Pipeline,PreTrainedModel:()=>M.PreTrainedModel,PreTrainedTokenizer:()=>Qt.PreTrainedTokenizer,PretrainedConfig:()=>xp.PretrainedConfig,PretrainedMixin:()=>M.PretrainedMixin,Processor:()=>Xm.Processor,PvtForImageClassification:()=>M.PvtForImageClassification,PvtImageProcessor:()=>Kt.PvtImageProcessor,PvtModel:()=>M.PvtModel,PvtPreTrainedModel:()=>M.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>bn.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>M.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>M.PyAnnoteModel,PyAnnotePreTrainedModel:()=>M.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>Os.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>M.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>zr.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>M.Qwen2ForCausalLM,Qwen2Model:()=>M.Qwen2Model,Qwen2PreTrainedModel:()=>M.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>Qt.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>M.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>Kt.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>M.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>Os.Qwen2VLProcessor,RTDetrForObjectDetection:()=>M.RTDetrForObjectDetection,RTDetrImageProcessor:()=>Kt.RTDetrImageProcessor,RTDetrModel:()=>M.RTDetrModel,RTDetrObjectDetectionOutput:()=>M.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>M.RTDetrPreTrainedModel,RawImage:()=>ah.RawImage,RepetitionPenaltyLogitsProcessor:()=>cs.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>M.ResNetForImageClassification,ResNetModel:()=>M.ResNetModel,ResNetPreTrainedModel:()=>M.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>M.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>M.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>M.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>M.RoFormerForTokenClassification,RoFormerModel:()=>M.RoFormerModel,RoFormerPreTrainedModel:()=>M.RoFormerPreTrainedModel,RoFormerTokenizer:()=>Qt.RoFormerTokenizer,RobertaForMaskedLM:()=>M.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>M.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>M.RobertaForSequenceClassification,RobertaForTokenClassification:()=>M.RobertaForTokenClassification,RobertaModel:()=>M.RobertaModel,RobertaPreTrainedModel:()=>M.RobertaPreTrainedModel,RobertaTokenizer:()=>Qt.RobertaTokenizer,SamImageProcessor:()=>Kt.SamImageProcessor,SamImageSegmentationOutput:()=>M.SamImageSegmentationOutput,SamModel:()=>M.SamModel,SamPreTrainedModel:()=>M.SamPreTrainedModel,SamProcessor:()=>Os.SamProcessor,SapiensForDepthEstimation:()=>M.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>M.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>M.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>M.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>bn.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>Kt.SegformerFeatureExtractor,SegformerForImageClassification:()=>M.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>M.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>Kt.SegformerImageProcessor,SegformerModel:()=>M.SegformerModel,SegformerPreTrainedModel:()=>M.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>M.Seq2SeqLMOutput,SequenceClassifierOutput:()=>M.SequenceClassifierOutput,SiglipImageProcessor:()=>Kt.SiglipImageProcessor,SiglipModel:()=>M.SiglipModel,SiglipPreTrainedModel:()=>M.SiglipPreTrainedModel,SiglipTextModel:()=>M.SiglipTextModel,SiglipTokenizer:()=>Qt.SiglipTokenizer,SiglipVisionModel:()=>M.SiglipVisionModel,SpeechT5FeatureExtractor:()=>bn.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>M.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>M.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>M.SpeechT5HifiGan,SpeechT5Model:()=>M.SpeechT5Model,SpeechT5PreTrainedModel:()=>M.SpeechT5PreTrainedModel,SpeechT5Processor:()=>Os.SpeechT5Processor,SpeechT5Tokenizer:()=>Qt.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>M.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>M.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>M.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>M.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>M.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>Qt.SqueezeBertTokenizer,StableLmForCausalLM:()=>M.StableLmForCausalLM,StableLmModel:()=>M.StableLmModel,StableLmPreTrainedModel:()=>M.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>M.Starcoder2ForCausalLM,Starcoder2Model:()=>M.Starcoder2Model,Starcoder2PreTrainedModel:()=>M.Starcoder2PreTrainedModel,StoppingCriteria:()=>Fa.StoppingCriteria,StoppingCriteriaList:()=>Fa.StoppingCriteriaList,SummarizationPipeline:()=>zr.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>cs.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>M.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>Kt.Swin2SRImageProcessor,Swin2SRModel:()=>M.Swin2SRModel,Swin2SRPreTrainedModel:()=>M.Swin2SRPreTrainedModel,SwinForImageClassification:()=>M.SwinForImageClassification,SwinModel:()=>M.SwinModel,SwinPreTrainedModel:()=>M.SwinPreTrainedModel,T5ForConditionalGeneration:()=>M.T5ForConditionalGeneration,T5Model:()=>M.T5Model,T5PreTrainedModel:()=>M.T5PreTrainedModel,T5Tokenizer:()=>Qt.T5Tokenizer,TableTransformerForObjectDetection:()=>M.TableTransformerForObjectDetection,TableTransformerModel:()=>M.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>M.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>M.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>cs.TemperatureLogitsWarper,Tensor:()=>Xr.Tensor,Text2TextGenerationPipeline:()=>zr.Text2TextGenerationPipeline,TextClassificationPipeline:()=>zr.TextClassificationPipeline,TextGenerationPipeline:()=>zr.TextGenerationPipeline,TextStreamer:()=>Ep.TextStreamer,TextToAudioPipeline:()=>zr.TextToAudioPipeline,TokenClassificationPipeline:()=>zr.TokenClassificationPipeline,TokenClassifierOutput:()=>M.TokenClassifierOutput,TokenizerModel:()=>Qt.TokenizerModel,TopKLogitsWarper:()=>cs.TopKLogitsWarper,TopPLogitsWarper:()=>cs.TopPLogitsWarper,TrOCRForCausalLM:()=>M.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>M.TrOCRPreTrainedModel,TranslationPipeline:()=>zr.TranslationPipeline,UniSpeechForCTC:()=>M.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>M.UniSpeechForSequenceClassification,UniSpeechModel:()=>M.UniSpeechModel,UniSpeechPreTrainedModel:()=>M.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>M.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>M.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>M.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>M.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>M.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>Os.VLChatProcessor,VLMImageProcessor:()=>Kt.VLMImageProcessor,ViTFeatureExtractor:()=>Kt.ViTFeatureExtractor,ViTForImageClassification:()=>M.ViTForImageClassification,ViTImageProcessor:()=>Kt.ViTImageProcessor,ViTMAEModel:()=>M.ViTMAEModel,ViTMAEPreTrainedModel:()=>M.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>M.ViTMSNForImageClassification,ViTMSNModel:()=>M.ViTMSNModel,ViTMSNPreTrainedModel:()=>M.ViTMSNPreTrainedModel,ViTModel:()=>M.ViTModel,ViTPreTrainedModel:()=>M.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>M.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>M.VitMatteForImageMatting,VitMatteImageProcessor:()=>Kt.VitMatteImageProcessor,VitMattePreTrainedModel:()=>M.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>M.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>Kt.VitPoseImageProcessor,VitPosePreTrainedModel:()=>M.VitPosePreTrainedModel,VitsModel:()=>M.VitsModel,VitsModelOutput:()=>M.VitsModelOutput,VitsPreTrainedModel:()=>M.VitsPreTrainedModel,VitsTokenizer:()=>Qt.VitsTokenizer,Wav2Vec2BertForCTC:()=>M.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>M.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>M.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>M.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>Qt.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>bn.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>M.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>M.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>M.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>M.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>M.Wav2Vec2PreTrainedModel,Wav2Vec2ProcessorWithLM:()=>Os.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>M.WavLMForAudioFrameClassification,WavLMForCTC:()=>M.WavLMForCTC,WavLMForSequenceClassification:()=>M.WavLMForSequenceClassification,WavLMForXVector:()=>M.WavLMForXVector,WavLMModel:()=>M.WavLMModel,WavLMPreTrainedModel:()=>M.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>bn.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>M.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>M.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>bn.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>M.WhisperForConditionalGeneration,WhisperModel:()=>M.WhisperModel,WhisperPreTrainedModel:()=>M.WhisperPreTrainedModel,WhisperProcessor:()=>Os.WhisperProcessor,WhisperTextStreamer:()=>Ep.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>cs.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>Qt.WhisperTokenizer,XLMForQuestionAnswering:()=>M.XLMForQuestionAnswering,XLMForSequenceClassification:()=>M.XLMForSequenceClassification,XLMForTokenClassification:()=>M.XLMForTokenClassification,XLMModel:()=>M.XLMModel,XLMPreTrainedModel:()=>M.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>M.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>M.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>M.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>M.XLMRobertaForTokenClassification,XLMRobertaModel:()=>M.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>M.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>Qt.XLMRobertaTokenizer,XLMTokenizer:()=>Qt.XLMTokenizer,XLMWithLMHeadModel:()=>M.XLMWithLMHeadModel,XVectorOutput:()=>M.XVectorOutput,YolosFeatureExtractor:()=>Kt.YolosFeatureExtractor,YolosForObjectDetection:()=>M.YolosForObjectDetection,YolosImageProcessor:()=>Kt.YolosImageProcessor,YolosModel:()=>M.YolosModel,YolosObjectDetectionOutput:()=>M.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>M.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>zr.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>zr.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>zr.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>zr.ZeroShotObjectDetectionPipeline,bankers_round:()=>vs.bankers_round,cat:()=>Xr.cat,cos_sim:()=>vs.cos_sim,dot:()=>vs.dot,dynamic_time_warping:()=>vs.dynamic_time_warping,env:()=>Gm.env,full:()=>Xr.full,full_like:()=>Xr.full_like,getKeyValueShapes:()=>xp.getKeyValueShapes,hamming:()=>Qo.hamming,hanning:()=>Qo.hanning,interpolate:()=>Xr.interpolate,interpolate_4d:()=>Xr.interpolate_4d,interpolate_data:()=>vs.interpolate_data,is_chinese_char:()=>Qt.is_chinese_char,layer_norm:()=>Xr.layer_norm,load_image:()=>ah.load_image,log_softmax:()=>vs.log_softmax,magnitude:()=>vs.magnitude,matmul:()=>Xr.matmul,max:()=>vs.max,mean:()=>Xr.mean,mean_pooling:()=>Xr.mean_pooling,medianFilter:()=>vs.medianFilter,mel_filter_bank:()=>Qo.mel_filter_bank,min:()=>vs.min,ones:()=>Xr.ones,ones_like:()=>Xr.ones_like,permute:()=>Xr.permute,permute_data:()=>vs.permute_data,pipeline:()=>zr.pipeline,quantize_embeddings:()=>Xr.quantize_embeddings,read_audio:()=>Qo.read_audio,rfft:()=>Xr.rfft,round:()=>vs.round,softmax:()=>vs.softmax,spectrogram:()=>Qo.spectrogram,stack:()=>Xr.stack,std_mean:()=>Xr.std_mean,topk:()=>Xr.topk,window_function:()=>Qo.window_function,zeros:()=>Xr.zeros,zeros_like:()=>Xr.zeros_like});var Gm=fr("./src/env.js"),zr=fr("./src/pipelines.js"),M=fr("./src/models.js"),Qt=fr("./src/tokenizers.js"),xp=fr("./src/configs.js"),Qo=fr("./src/utils/audio.js"),ah=fr("./src/utils/image.js"),Xr=fr("./src/utils/tensor.js"),vs=fr("./src/utils/maths.js"),Km=fr("./src/base/feature_extraction_utils.js"),bn=fr("./src/models/feature_extractors.js"),Hm=fr("./src/models/auto/feature_extraction_auto.js"),qm=fr("./src/base/image_processors_utils.js"),Kt=fr("./src/models/image_processors.js"),Qm=fr("./src/models/auto/image_processing_auto.js"),Xm=fr("./src/base/processing_utils.js"),Os=fr("./src/models/processors.js"),Ym=fr("./src/models/auto/processing_auto.js"),Ep=fr("./src/generation/streamers.js"),Fa=fr("./src/generation/stopping_criteria.js"),cs=fr("./src/generation/logits_process.js");u.ASTFeatureExtractor,u.ASTForAudioClassification,u.ASTModel,u.ASTPreTrainedModel,u.AlbertForMaskedLM,u.AlbertForQuestionAnswering,u.AlbertForSequenceClassification,u.AlbertModel,u.AlbertPreTrainedModel,u.AlbertTokenizer,u.AudioClassificationPipeline,u.AutoConfig,u.AutoFeatureExtractor,u.AutoImageProcessor,u.AutoModel,u.AutoModelForAudioClassification,u.AutoModelForAudioFrameClassification,u.AutoModelForCTC,u.AutoModelForCausalLM,u.AutoModelForDepthEstimation,u.AutoModelForDocumentQuestionAnswering,u.AutoModelForImageClassification,u.AutoModelForImageFeatureExtraction,u.AutoModelForImageMatting,u.AutoModelForImageSegmentation,u.AutoModelForImageToImage,u.AutoModelForMaskGeneration,u.AutoModelForMaskedLM,u.AutoModelForNormalEstimation,u.AutoModelForObjectDetection,u.AutoModelForPoseEstimation,u.AutoModelForQuestionAnswering,u.AutoModelForSemanticSegmentation,u.AutoModelForSeq2SeqLM,u.AutoModelForSequenceClassification,u.AutoModelForSpeechSeq2Seq,u.AutoModelForTextToSpectrogram,u.AutoModelForTextToWaveform,u.AutoModelForTokenClassification,u.AutoModelForUniversalSegmentation,u.AutoModelForVision2Seq,u.AutoModelForXVector,u.AutoModelForZeroShotObjectDetection,u.AutoProcessor,u.AutoTokenizer,u.AutomaticSpeechRecognitionPipeline,u.BartForConditionalGeneration,u.BartForSequenceClassification,u.BartModel,u.BartPretrainedModel,u.BartTokenizer,u.BaseModelOutput,u.BaseStreamer,u.BeitFeatureExtractor,u.BeitForImageClassification,u.BeitModel,u.BeitPreTrainedModel,u.BertForMaskedLM,u.BertForQuestionAnswering,u.BertForSequenceClassification,u.BertForTokenClassification,u.BertModel,u.BertPreTrainedModel,u.BertTokenizer,u.BitImageProcessor,u.BlenderbotForConditionalGeneration,u.BlenderbotModel,u.BlenderbotPreTrainedModel,u.BlenderbotSmallForConditionalGeneration,u.BlenderbotSmallModel,u.BlenderbotSmallPreTrainedModel,u.BlenderbotSmallTokenizer,u.BlenderbotTokenizer,u.BloomForCausalLM,u.BloomModel,u.BloomPreTrainedModel,u.BloomTokenizer,u.CLIPFeatureExtractor,u.CLIPImageProcessor,u.CLIPModel,u.CLIPPreTrainedModel,u.CLIPSegForImageSegmentation,u.CLIPSegModel,u.CLIPSegPreTrainedModel,u.CLIPTextModel,u.CLIPTextModelWithProjection,u.CLIPTokenizer,u.CLIPVisionModel,u.CLIPVisionModelWithProjection,u.CamembertForMaskedLM,u.CamembertForQuestionAnswering,u.CamembertForSequenceClassification,u.CamembertForTokenClassification,u.CamembertModel,u.CamembertPreTrainedModel,u.CamembertTokenizer,u.CausalLMOutput,u.CausalLMOutputWithPast,u.ChineseCLIPFeatureExtractor,u.ChineseCLIPModel,u.ChineseCLIPPreTrainedModel,u.ClapAudioModelWithProjection,u.ClapFeatureExtractor,u.ClapModel,u.ClapPreTrainedModel,u.ClapTextModelWithProjection,u.ClassifierFreeGuidanceLogitsProcessor,u.CodeGenForCausalLM,u.CodeGenModel,u.CodeGenPreTrainedModel,u.CodeGenTokenizer,u.CodeLlamaTokenizer,u.CohereForCausalLM,u.CohereModel,u.CoherePreTrainedModel,u.CohereTokenizer,u.ConvBertForMaskedLM,u.ConvBertForQuestionAnswering,u.ConvBertForSequenceClassification,u.ConvBertForTokenClassification,u.ConvBertModel,u.ConvBertPreTrainedModel,u.ConvBertTokenizer,u.ConvNextFeatureExtractor,u.ConvNextForImageClassification,u.ConvNextImageProcessor,u.ConvNextModel,u.ConvNextPreTrainedModel,u.ConvNextV2ForImageClassification,u.ConvNextV2Model,u.ConvNextV2PreTrainedModel,u.DPTFeatureExtractor,u.DPTForDepthEstimation,u.DPTImageProcessor,u.DPTModel,u.DPTPreTrainedModel,u.DebertaForMaskedLM,u.DebertaForQuestionAnswering,u.DebertaForSequenceClassification,u.DebertaForTokenClassification,u.DebertaModel,u.DebertaPreTrainedModel,u.DebertaTokenizer,u.DebertaV2ForMaskedLM,u.DebertaV2ForQuestionAnswering,u.DebertaV2ForSequenceClassification,u.DebertaV2ForTokenClassification,u.DebertaV2Model,u.DebertaV2PreTrainedModel,u.DebertaV2Tokenizer,u.DecisionTransformerModel,u.DecisionTransformerPreTrainedModel,u.DeiTFeatureExtractor,u.DeiTForImageClassification,u.DeiTImageProcessor,u.DeiTModel,u.DeiTPreTrainedModel,u.DepthAnythingForDepthEstimation,u.DepthAnythingPreTrainedModel,u.DepthEstimationPipeline,u.DepthProForDepthEstimation,u.DepthProPreTrainedModel,u.DetrFeatureExtractor,u.DetrForObjectDetection,u.DetrForSegmentation,u.DetrImageProcessor,u.DetrModel,u.DetrObjectDetectionOutput,u.DetrPreTrainedModel,u.DetrSegmentationOutput,u.Dinov2ForImageClassification,u.Dinov2Model,u.Dinov2PreTrainedModel,u.DistilBertForMaskedLM,u.DistilBertForQuestionAnswering,u.DistilBertForSequenceClassification,u.DistilBertForTokenClassification,u.DistilBertModel,u.DistilBertPreTrainedModel,u.DistilBertTokenizer,u.DocumentQuestionAnsweringPipeline,u.DonutFeatureExtractor,u.DonutImageProcessor,u.DonutSwinModel,u.DonutSwinPreTrainedModel,u.EfficientNetForImageClassification,u.EfficientNetImageProcessor,u.EfficientNetModel,u.EfficientNetPreTrainedModel,u.ElectraForMaskedLM,u.ElectraForQuestionAnswering,u.ElectraForSequenceClassification,u.ElectraForTokenClassification,u.ElectraModel,u.ElectraPreTrainedModel,u.ElectraTokenizer,u.EosTokenCriteria,u.EsmForMaskedLM,u.EsmForSequenceClassification,u.EsmForTokenClassification,u.EsmModel,u.EsmPreTrainedModel,u.EsmTokenizer,u.FFT,u.FalconForCausalLM,u.FalconModel,u.FalconPreTrainedModel,u.FalconTokenizer,u.FastViTForImageClassification,u.FastViTModel,u.FastViTPreTrainedModel,u.FeatureExtractionPipeline,u.FeatureExtractor,u.FillMaskPipeline,u.Florence2ForConditionalGeneration,u.Florence2PreTrainedModel,u.Florence2Processor,u.ForcedBOSTokenLogitsProcessor,u.ForcedEOSTokenLogitsProcessor,u.GLPNFeatureExtractor,u.GLPNForDepthEstimation,u.GLPNModel,u.GLPNPreTrainedModel,u.GPT2LMHeadModel,u.GPT2Model,u.GPT2PreTrainedModel,u.GPT2Tokenizer,u.GPTBigCodeForCausalLM,u.GPTBigCodeModel,u.GPTBigCodePreTrainedModel,u.GPTJForCausalLM,u.GPTJModel,u.GPTJPreTrainedModel,u.GPTNeoForCausalLM,u.GPTNeoModel,u.GPTNeoPreTrainedModel,u.GPTNeoXForCausalLM,u.GPTNeoXModel,u.GPTNeoXPreTrainedModel,u.GPTNeoXTokenizer,u.Gemma2ForCausalLM,u.Gemma2Model,u.Gemma2PreTrainedModel,u.GemmaForCausalLM,u.GemmaModel,u.GemmaPreTrainedModel,u.GemmaTokenizer,u.GraniteForCausalLM,u.GraniteModel,u.GranitePreTrainedModel,u.Grok1Tokenizer,u.GroupViTModel,u.GroupViTPreTrainedModel,u.HerbertTokenizer,u.HieraForImageClassification,u.HieraModel,u.HieraPreTrainedModel,u.HubertForCTC,u.HubertForSequenceClassification,u.HubertModel,u.HubertPreTrainedModel,u.Idefics3ForConditionalGeneration,u.Idefics3ImageProcessor,u.Idefics3PreTrainedModel,u.Idefics3Processor,u.ImageClassificationPipeline,u.ImageFeatureExtractionPipeline,u.ImageFeatureExtractor,u.ImageMattingOutput,u.ImageProcessor,u.ImageSegmentationPipeline,u.ImageToImagePipeline,u.ImageToTextPipeline,u.InterruptableStoppingCriteria,u.JAISLMHeadModel,u.JAISModel,u.JAISPreTrainedModel,u.JinaCLIPImageProcessor,u.JinaCLIPModel,u.JinaCLIPPreTrainedModel,u.JinaCLIPProcessor,u.JinaCLIPTextModel,u.JinaCLIPVisionModel,u.LlamaForCausalLM,u.LlamaModel,u.LlamaPreTrainedModel,u.LlamaTokenizer,u.LlavaForConditionalGeneration,u.LlavaOnevisionForConditionalGeneration,u.LlavaOnevisionImageProcessor,u.LlavaPreTrainedModel,u.LogitsProcessor,u.LogitsProcessorList,u.LogitsWarper,u.LongT5ForConditionalGeneration,u.LongT5Model,u.LongT5PreTrainedModel,u.M2M100ForConditionalGeneration,u.M2M100Model,u.M2M100PreTrainedModel,u.M2M100Tokenizer,u.MBart50Tokenizer,u.MBartForCausalLM,u.MBartForConditionalGeneration,u.MBartForSequenceClassification,u.MBartModel,u.MBartPreTrainedModel,u.MBartTokenizer,u.MPNetForMaskedLM,u.MPNetForQuestionAnswering,u.MPNetForSequenceClassification,u.MPNetForTokenClassification,u.MPNetModel,u.MPNetPreTrainedModel,u.MPNetTokenizer,u.MT5ForConditionalGeneration,u.MT5Model,u.MT5PreTrainedModel,u.MarianMTModel,u.MarianModel,u.MarianPreTrainedModel,u.MarianTokenizer,u.Mask2FormerImageProcessor,u.MaskFormerFeatureExtractor,u.MaskFormerForInstanceSegmentation,u.MaskFormerImageProcessor,u.MaskFormerModel,u.MaskFormerPreTrainedModel,u.MaskedLMOutput,u.MaxLengthCriteria,u.MgpstrForSceneTextRecognition,u.MgpstrModelOutput,u.MgpstrPreTrainedModel,u.MgpstrProcessor,u.MgpstrTokenizer,u.MinLengthLogitsProcessor,u.MinNewTokensLengthLogitsProcessor,u.MistralForCausalLM,u.MistralModel,u.MistralPreTrainedModel,u.MobileBertForMaskedLM,u.MobileBertForQuestionAnswering,u.MobileBertForSequenceClassification,u.MobileBertModel,u.MobileBertPreTrainedModel,u.MobileBertTokenizer,u.MobileLLMForCausalLM,u.MobileLLMModel,u.MobileLLMPreTrainedModel,u.MobileNetV1FeatureExtractor,u.MobileNetV1ForImageClassification,u.MobileNetV1ImageProcessor,u.MobileNetV1Model,u.MobileNetV1PreTrainedModel,u.MobileNetV2FeatureExtractor,u.MobileNetV2ForImageClassification,u.MobileNetV2ImageProcessor,u.MobileNetV2Model,u.MobileNetV2PreTrainedModel,u.MobileNetV3FeatureExtractor,u.MobileNetV3ForImageClassification,u.MobileNetV3ImageProcessor,u.MobileNetV3Model,u.MobileNetV3PreTrainedModel,u.MobileNetV4FeatureExtractor,u.MobileNetV4ForImageClassification,u.MobileNetV4ImageProcessor,u.MobileNetV4Model,u.MobileNetV4PreTrainedModel,u.MobileViTFeatureExtractor,u.MobileViTForImageClassification,u.MobileViTImageProcessor,u.MobileViTModel,u.MobileViTPreTrainedModel,u.MobileViTV2ForImageClassification,u.MobileViTV2Model,u.MobileViTV2PreTrainedModel,u.ModelOutput,u.Moondream1ForConditionalGeneration,u.MptForCausalLM,u.MptModel,u.MptPreTrainedModel,u.MultiModalityCausalLM,u.MultiModalityPreTrainedModel,u.MusicgenForCausalLM,u.MusicgenForConditionalGeneration,u.MusicgenModel,u.MusicgenPreTrainedModel,u.NllbTokenizer,u.NoBadWordsLogitsProcessor,u.NoRepeatNGramLogitsProcessor,u.NomicBertModel,u.NomicBertPreTrainedModel,u.NougatImageProcessor,u.NougatTokenizer,u.OPTForCausalLM,u.OPTModel,u.OPTPreTrainedModel,u.ObjectDetectionPipeline,u.OlmoForCausalLM,u.OlmoModel,u.OlmoPreTrainedModel,u.OpenELMForCausalLM,u.OpenELMModel,u.OpenELMPreTrainedModel,u.OwlViTFeatureExtractor,u.OwlViTForObjectDetection,u.OwlViTImageProcessor,u.OwlViTModel,u.OwlViTPreTrainedModel,u.OwlViTProcessor,u.Owlv2ForObjectDetection,u.Owlv2ImageProcessor,u.Owlv2Model,u.Owlv2PreTrainedModel,u.PatchTSMixerForPrediction,u.PatchTSMixerModel,u.PatchTSMixerPreTrainedModel,u.PatchTSTForPrediction,u.PatchTSTModel,u.PatchTSTPreTrainedModel,u.Phi3ForCausalLM,u.Phi3Model,u.Phi3PreTrainedModel,u.PhiForCausalLM,u.PhiModel,u.PhiPreTrainedModel,u.Pipeline,u.PreTrainedModel,u.PreTrainedTokenizer,u.PretrainedConfig,u.PretrainedMixin,u.Processor,u.PvtForImageClassification,u.PvtImageProcessor,u.PvtModel,u.PvtPreTrainedModel,u.PyAnnoteFeatureExtractor,u.PyAnnoteForAudioFrameClassification,u.PyAnnoteModel,u.PyAnnotePreTrainedModel,u.PyAnnoteProcessor,u.QuestionAnsweringModelOutput,u.QuestionAnsweringPipeline,u.Qwen2ForCausalLM,u.Qwen2Model,u.Qwen2PreTrainedModel,u.Qwen2Tokenizer,u.Qwen2VLForConditionalGeneration,u.Qwen2VLImageProcessor,u.Qwen2VLPreTrainedModel,u.Qwen2VLProcessor,u.RTDetrForObjectDetection,u.RTDetrImageProcessor,u.RTDetrModel,u.RTDetrObjectDetectionOutput,u.RTDetrPreTrainedModel,u.RawImage,u.RepetitionPenaltyLogitsProcessor,u.ResNetForImageClassification,u.ResNetModel,u.ResNetPreTrainedModel,u.RoFormerForMaskedLM,u.RoFormerForQuestionAnswering,u.RoFormerForSequenceClassification,u.RoFormerForTokenClassification,u.RoFormerModel,u.RoFormerPreTrainedModel,u.RoFormerTokenizer,u.RobertaForMaskedLM,u.RobertaForQuestionAnswering,u.RobertaForSequenceClassification,u.RobertaForTokenClassification,u.RobertaModel,u.RobertaPreTrainedModel,u.RobertaTokenizer,u.SamImageProcessor,u.SamImageSegmentationOutput,u.SamModel,u.SamPreTrainedModel,u.SamProcessor,u.SapiensForDepthEstimation,u.SapiensForNormalEstimation,u.SapiensForSemanticSegmentation,u.SapiensPreTrainedModel,u.SeamlessM4TFeatureExtractor,u.SegformerFeatureExtractor,u.SegformerForImageClassification,u.SegformerForSemanticSegmentation,u.SegformerImageProcessor,u.SegformerModel,u.SegformerPreTrainedModel,u.Seq2SeqLMOutput,u.SequenceClassifierOutput,u.SiglipImageProcessor,u.SiglipModel,u.SiglipPreTrainedModel,u.SiglipTextModel,u.SiglipTokenizer,u.SiglipVisionModel,u.SpeechT5FeatureExtractor,u.SpeechT5ForSpeechToText,u.SpeechT5ForTextToSpeech,u.SpeechT5HifiGan,u.SpeechT5Model,u.SpeechT5PreTrainedModel,u.SpeechT5Processor,u.SpeechT5Tokenizer,u.SqueezeBertForMaskedLM,u.SqueezeBertForQuestionAnswering,u.SqueezeBertForSequenceClassification,u.SqueezeBertModel,u.SqueezeBertPreTrainedModel,u.SqueezeBertTokenizer,u.StableLmForCausalLM,u.StableLmModel,u.StableLmPreTrainedModel,u.Starcoder2ForCausalLM,u.Starcoder2Model,u.Starcoder2PreTrainedModel,u.StoppingCriteria,u.StoppingCriteriaList,u.SummarizationPipeline,u.SuppressTokensAtBeginLogitsProcessor,u.Swin2SRForImageSuperResolution,u.Swin2SRImageProcessor,u.Swin2SRModel,u.Swin2SRPreTrainedModel,u.SwinForImageClassification,u.SwinModel,u.SwinPreTrainedModel,u.T5ForConditionalGeneration,u.T5Model,u.T5PreTrainedModel,u.T5Tokenizer,u.TableTransformerForObjectDetection,u.TableTransformerModel,u.TableTransformerObjectDetectionOutput,u.TableTransformerPreTrainedModel,u.TemperatureLogitsWarper,u.Tensor,u.Text2TextGenerationPipeline,u.TextClassificationPipeline,u.TextGenerationPipeline,u.TextStreamer,u.TextToAudioPipeline,u.TokenClassificationPipeline,u.TokenClassifierOutput,u.TokenizerModel,u.TopKLogitsWarper,u.TopPLogitsWarper,u.TrOCRForCausalLM,u.TrOCRPreTrainedModel,u.TranslationPipeline,u.UniSpeechForCTC,u.UniSpeechForSequenceClassification,u.UniSpeechModel,u.UniSpeechPreTrainedModel,u.UniSpeechSatForAudioFrameClassification,u.UniSpeechSatForCTC,u.UniSpeechSatForSequenceClassification,u.UniSpeechSatModel,u.UniSpeechSatPreTrainedModel,u.VLChatProcessor,u.VLMImageProcessor,u.ViTFeatureExtractor,u.ViTForImageClassification,u.ViTImageProcessor,u.ViTMAEModel,u.ViTMAEPreTrainedModel,u.ViTMSNForImageClassification,u.ViTMSNModel,u.ViTMSNPreTrainedModel,u.ViTModel,u.ViTPreTrainedModel,u.VisionEncoderDecoderModel,u.VitMatteForImageMatting,u.VitMatteImageProcessor,u.VitMattePreTrainedModel,u.VitPoseForPoseEstimation,u.VitPoseImageProcessor,u.VitPosePreTrainedModel,u.VitsModel,u.VitsModelOutput,u.VitsPreTrainedModel,u.VitsTokenizer,u.Wav2Vec2BertForCTC,u.Wav2Vec2BertForSequenceClassification,u.Wav2Vec2BertModel,u.Wav2Vec2BertPreTrainedModel,u.Wav2Vec2CTCTokenizer,u.Wav2Vec2FeatureExtractor,u.Wav2Vec2ForAudioFrameClassification,u.Wav2Vec2ForCTC,u.Wav2Vec2ForSequenceClassification,u.Wav2Vec2Model,u.Wav2Vec2PreTrainedModel,u.Wav2Vec2ProcessorWithLM,u.WavLMForAudioFrameClassification,u.WavLMForCTC,u.WavLMForSequenceClassification,u.WavLMForXVector,u.WavLMModel,u.WavLMPreTrainedModel,u.WeSpeakerFeatureExtractor,u.WeSpeakerResNetModel,u.WeSpeakerResNetPreTrainedModel,u.WhisperFeatureExtractor,u.WhisperForConditionalGeneration,u.WhisperModel,u.WhisperPreTrainedModel,u.WhisperProcessor,u.WhisperTextStreamer,u.WhisperTimeStampLogitsProcessor,u.WhisperTokenizer,u.XLMForQuestionAnswering,u.XLMForSequenceClassification,u.XLMForTokenClassification,u.XLMModel,u.XLMPreTrainedModel,u.XLMRobertaForMaskedLM,u.XLMRobertaForQuestionAnswering,u.XLMRobertaForSequenceClassification,u.XLMRobertaForTokenClassification,u.XLMRobertaModel,u.XLMRobertaPreTrainedModel,u.XLMRobertaTokenizer,u.XLMTokenizer,u.XLMWithLMHeadModel,u.XVectorOutput,u.YolosFeatureExtractor,u.YolosForObjectDetection,u.YolosImageProcessor,u.YolosModel,u.YolosObjectDetectionOutput,u.YolosPreTrainedModel,u.ZeroShotAudioClassificationPipeline,u.ZeroShotClassificationPipeline,u.ZeroShotImageClassificationPipeline,u.ZeroShotObjectDetectionPipeline,u.bankers_round,u.cat,u.cos_sim,u.dot,u.dynamic_time_warping,u.env,u.full,u.full_like,u.getKeyValueShapes,u.hamming,u.hanning,u.interpolate,u.interpolate_4d,u.interpolate_data,u.is_chinese_char,u.layer_norm,u.load_image,u.log_softmax,u.magnitude,u.matmul,u.max,u.mean,u.mean_pooling,u.medianFilter,u.mel_filter_bank,u.min,u.ones,u.ones_like,u.permute,u.permute_data;var Jm=u.pipeline;u.quantize_embeddings,u.read_audio,u.rfft,u.round,u.softmax,u.spectrogram,u.stack,u.std_mean,u.topk,u.window_function,u.zeros,u.zeros_like;function Zm(Oe){return Oe.match(/[^.!?]+[.!?]+/g)||[Oe]}class lh{static async getInstance(R=()=>{}){return this.instance===null&&(this.instance=Jm("translation","Xenova/nllb-200-distilled-600M",{progress_callback:R})),this.instance}}Te(lh,"instance",null),self.addEventListener("message",async Oe=>{const R=await lh.getInstance(D=>{const G={file:D.file,progress:typeof D.progress=="number"?parseFloat(D.progress.toFixed(2)):0};self.postMessage({type:D.status,data:G})}),c=Zm(Oe.data.text),w=[];for(let D=0;D<c.length;D++){const G=await R(c[D].trim(),{src_lang:"eng_Latn",tgt_lang:"yor_Latn",config:{max_length:1e3}});w.push(G[0].translation_text),D<c.length-1&&self.postMessage({type:"update",data:G[0].translation_text,index:Oe.data.index,progress:(D+1)/c.length*100})}self.postMessage({type:"completed",data:w.join(" "),index:Oe.data.index})}),self.addEventListener("error",Oe=>{console.error("Worker error:",Oe)})})();
